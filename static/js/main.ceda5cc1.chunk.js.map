{"version":3,"sources":["logo.svg","Styles/Txt.js","Txt.js","Filters.js","operators.js","Tbl.js","PercentageDiff.js","Styles/Container.js","App.js","reportWebVitals.js","index.js"],"names":["TextArea","styled","textarea","Button","button","Header","div","Txt","value","setVal","onSubmit","onChange","e","target","placeholder","onClick","CompareDropDown","filtersList","handleChange","name","map","filter","label","Rows","rowNum","operator","checked","updFilter","useState","isCompare","setCompare","style","display","flexDirection","justifyContent","width","margin","type","autoComplete","Filters","addToSearch","className","key","bind","search","a","b","parseFloat","Heading","filters","stock","cols","Object","keys","col","Col","searchParams","deleteStock","Name","cnt","colName","params","operators","processResult","props","Tbl","stocks","border","bold","DiffList","precentages","textAlign","percentage","val","Math","round","diff","PercentageDiff","vals","setPrecentages","values","split","v","join","per","reduce","acc","newNum","orgNum","tmp","console","log","AddDiff","cmps","setCmp","prompt","CmpName","flexWrap","cmp","Container","App","txt","setTxt","setStocks","setFilters","setSearch","filtersCnt","setFiltersCnt","tmpStocks","JSON","parse","Array","isArray","length","tmpFilters","createFilters","alert","searchObj","newStocks","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ceda5cc1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import styled from 'styled-components';\r\n\r\n\r\nconst TextArea = styled.textarea`\r\n    height:100px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    width:10%;\r\n    margin:10px 0 0 0;    \r\n`;\r\n\r\nconst Header = styled.div`\r\n    width:100%;\r\n    display:flex;\r\n    flex-direction:column;\r\n`;\r\n\r\nexport {\r\n    TextArea,\r\n    Button,\r\n    Header\r\n}","import { TextArea, Button, Header } from './Styles/Txt'\r\nconst Txt = ({ value, setVal, onSubmit }) => {\r\n    return (\r\n        <>\r\n            <Header>\r\n                <TextArea value={value} onChange={(e) => setVal(e.target.value)} placeholder='Enter your JSON' />\r\n                <Button onClick={onSubmit} >Add</Button>\r\n            </Header>\r\n        </>\r\n    )\r\n};\r\nexport default Txt;","import { useState } from 'react';\r\nimport { Button } from './Styles/Txt';\r\n\r\nconst CompareDropDown = ({ filtersList, handleChange }) => {\r\n    return (\r\n        <>\r\n            <select name='value' onChange={handleChange}>\r\n                <option value=''>Select</option>\r\n                {\r\n                    filtersList.map(filter => <option value={filter.label}>{filter.label}</option>)\r\n                }\r\n\r\n            </select>\r\n        </>\r\n    )\r\n}\r\nconst Rows = ({ rowNum, label, operator, value, checked, updFilter, filtersList }) => {\r\n    const [isCompare, setCompare] = useState(false);\r\n    const handleChange = (e) => {\r\n        let value = e.target.value;\r\n        const name = e.target.name;\r\n\r\n        if (name === \"checked\") {\r\n            value = !checked;\r\n        }\r\n        if (name === 'operator') {\r\n            if (value === 'GT' || value === 'LT') {\r\n                setCompare(true);\r\n            } else {\r\n                setCompare(false);\r\n            }\r\n        }\r\n\r\n        updFilter(rowNum, name, value);\r\n        if ((name === 'operator' || name === 'value') && value) {\r\n            updFilter(rowNum, 'checked', true);\r\n        }\r\n    }\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", width: \"50%\", margin: \"0 0 5px 0\" }}>\r\n            <div>\r\n                <input type=\"checkbox\" onChange={handleChange} name='checked' checked={checked} />\r\n            </div>\r\n            <div style={{ width: \"10em\" }}>\r\n                <label>{label}</label>&nbsp;\r\n            </div>\r\n            <div>\r\n                <select name='operator' onChange={handleChange}>\r\n                    <option value=''>Select</option>\r\n                    <option value='>'>Greater</option>\r\n                    <option value='>='>Greater & Equal</option>\r\n                    <option value='<'>Less</option>\r\n                    <option value='<='>Less & equal</option>\r\n                    <option value='!='>Not equal</option>\r\n                    <option value='=='>Equal</option>\r\n                    <option value='GT'>Greater than</option>\r\n                    <option value='LT'>Less than</option>\r\n                </select>\r\n            </div>\r\n            <div>\r\n                {!isCompare ? <input\r\n                    type=\"text\"\r\n                    placeholder='Value'\r\n                    name='value'\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    autoComplete='off'\r\n                /> : <CompareDropDown filtersList={filtersList} handleChange={handleChange} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst Filters = ({ filtersList, updFilter, addToSearch }) => {\r\n    return (\r\n        <>\r\n            <h5>Filters:</h5>\r\n            <div className='filters'>\r\n\r\n                {\r\n                    filtersList.map((filter, key) => <Rows label={filter.label} operator={filter.operator} value={filter.value} checked={filter.checked} key={key} rowNum={key} updFilter={updFilter} filtersList={filtersList} />)\r\n                }\r\n                <br />\r\n            </div>\r\n            <Button onClick={addToSearch.bind(null, filtersList)} >Filter</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filters;","const search = {\r\n    '>': (a, b) => (parseFloat(a) > parseFloat(b)),\r\n    '>=': (a, b) => (parseFloat(a) >= parseFloat(b)),\r\n    '<': (a, b) => (parseFloat(a) < parseFloat(b)),\r\n    '<=': (a, b) => (parseFloat(a) <= parseFloat(b)),\r\n    '!=': (a, b) => (parseFloat(a) != parseFloat(b)),\r\n    '==': (a, b) => (parseFloat(a) == parseFloat(b)),\r\n    'GT': (a, b) => (parseFloat(a) >= parseFloat(b)),\r\n    'LT': (a, b) => (parseFloat(a) <= parseFloat(b)),\r\n}\r\n\r\nexport default search","import { useState } from 'react';\r\nimport operators from './operators';\r\nconst Heading = ({ stock }) => {\r\n    const { filters } = stock;\r\n    const cols = Object.keys(filters);\r\n    return (\r\n        <>\r\n            <th>StockName</th>\r\n            {cols.map(col => <th>{col}</th>)}\r\n            <th>Matches</th>\r\n            <th>Action</th>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Col = ({ stock, searchParams, deleteStock, rowNum }) => {\r\n\r\n    const { Name, filters } = stock;\r\n    const cols = Object.keys(filters);\r\n    let cnt = 0;\r\n    const processResult = (colName, key) => {\r\n        const params = searchParams[colName];\r\n\r\n        if (params && operators[params.operator]) {\r\n            const value = (params.operator === 'LT' || params.operator === 'GT') ? (filters[params.value] || 0) : params.value;\r\n            const className = operators[params.operator](filters[colName], value) ? 'greenCol' : 'redCol';\r\n            if (className === 'greenCol') {\r\n                cnt++;\r\n            }\r\n            return className;\r\n        }\r\n        return;\r\n    }\r\n    return (\r\n        <>\r\n            <td>{Name}</td>\r\n            {\r\n                cols.map((col, key) => {\r\n                    const className = processResult(col, key) || '';\r\n                    return <td className={className} >{filters[col]}</td>;\r\n                })\r\n            }\r\n            <td>{cnt}</td>\r\n            <td><button onClick={deleteStock.bind(null, rowNum)}>Delete</button></td>\r\n        </>\r\n    )\r\n}\r\nconst Rows = (props) => {\r\n    return (\r\n        <>\r\n            <tr>\r\n                <Col {...props} />\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Tbl = ({ stocks, searchParams, deleteStock }) => {\r\n    return (\r\n        <>\r\n            <table border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <Heading stock={stocks[0]} />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {stocks.map((stock, rowNum) => <Rows stock={stock} searchParams={searchParams} rowNum={rowNum} deleteStock={deleteStock} />)}\r\n                </tbody>\r\n                <thead>\r\n                    <tr bold=\"1\">\r\n                        <Heading stock={stocks[0]} />\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\nexport default Tbl;","import { useState } from \"react\";\r\nconst findPerDiff = (newNum, orgNum) => {\r\n    return ((newNum - orgNum) / orgNum) * 100;\r\n}\r\n\r\nconst DiffList = ({ precentages }) => {\r\n    return (\r\n        <table style={{ width: \"10rem\", textAlign: \"left\" }}>\r\n\r\n            {\r\n                precentages.map((percentage) => {\r\n                    return (\r\n                        <tr>\r\n                            <td>{percentage.val}</td>\r\n                            <td>{Math.round(percentage.diff)}%</td>\r\n                        </tr>\r\n                    );\r\n                })\r\n            }\r\n\r\n\r\n        </table>\r\n    )\r\n}\r\n\r\nconst PercentageDiff = ({ label }) => {\r\n    const [vals, setVal] = useState('');\r\n    const [precentages, setPrecentages] = useState([]);\r\n    const values = vals.split(/\\s|%/).filter(v => v).map(v => v.split(',').join(''));\r\n    const onCalc = () => {\r\n        const per = values.reduce((acc, val, key) => {\r\n            let tmp = {\r\n                diff: 0,\r\n                val\r\n            };\r\n            if (key === 0) return [tmp];\r\n            tmp.diff = findPerDiff(val, values[key - 1]);\r\n            return [...acc, tmp];\r\n        }, []);\r\n        console.log(per)\r\n        setPrecentages(per);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{ margin: \"0 20px 0 0\" }}>\r\n                <h6>{label}</h6>\r\n                <input type=\"text\" onChange={e => setVal(e.target.value)} />\r\n                <button onClick={onCalc} >Calc</button>\r\n                <DiffList precentages={precentages} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst AddDiff = () => {\r\n    const [cmps, setCmp] = useState([])\r\n    const addCmp = () => {\r\n        const label = prompt(`Enter diff name`);\r\n        if (!label) return;\r\n        setCmp([...cmps, { CmpName: PercentageDiff, label }])\r\n    }\r\n    return (\r\n        <div>\r\n            <h5>Calculate Diff:</h5>\r\n            <button onClick={addCmp}>Add</button>\r\n            <div style={{ display: \"flex\", width: '90%', flexWrap: \"wrap\" }}>\r\n                {cmps.map(cmp => {\r\n                    const { CmpName, label } = cmp;\r\n                    return <CmpName label={label} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddDiff;","import styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\nmargin:40px;\r\nposition:relative;\r\n`;\r\n\r\nexport {\r\n    Container\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport Txt from './Txt';\nimport Filters from './Filters';\nimport { useState } from 'react';\nimport Tbl from './Tbl';\nimport PercentageDiff from './PercentageDiff';\nimport { Container } from './Styles/Container'\nfunction App() {\n  const [txt, setTxt] = useState('');\n  const [stocks, setStocks] = useState([]);\n  const [filtersList, setFilters] = useState([]);\n  const [searchParams, setSearch] = useState({});\n  const [filtersCnt, setFiltersCnt] = useState(0);\n  const updFilter = (key, col, value) => {\n    const tmp = [...filtersList];\n    tmp[key][col] = value;\n    setFilters(tmp);\n  }\n\n  const addToSearch = (filters) => {\n    let cnt = 0;\n    const searchObj = filters.reduce((acc, val) => {\n      if (val.checked) {\n        cnt++;\n        let tmp = {\n          [val.label]: {\n            value: val.value,\n            operator: val.operator,\n          }\n        };\n        return { ...acc, ...tmp };\n      }\n      return acc;\n    }, {});\n    setFiltersCnt(cnt);\n    setSearch(searchObj);\n  }\n\n  const createFilters = (stocks) => {\n    if (stocks?.length) {\n      const firstRow = Object.keys(stocks[0].filters);\n      const tmpFilters = firstRow.map((key) => {\n        return {\n          label: key,\n          value: '',\n          operator: '',\n          checked: false\n        }\n      });\n      setFilters(tmpFilters);\n    } else {\n      setFilters([]);\n    }\n  }\n\n  const parseStocks = () => {\n    try {\n      let tmpStocks = JSON.parse(txt);\n      if (!Array.isArray(tmpStocks)) { tmpStocks = [tmpStocks] }\n      setStocks(tmpStocks);\n      createFilters(tmpStocks);\n    } catch (e) {\n      alert(\"Invlaid JSON\")\n    }\n  }\n\n  const deleteStock = (key) => {\n    const newStocks = [...stocks.slice(0, key), ...stocks.slice(key + 1)]\n    setStocks(newStocks);\n  }\n  return (\n    <Container>\n\n      <Txt value={txt} setVal={setTxt} onSubmit={parseStocks} />\n      {stocks && stocks.length > 0 && <Filters filtersList={filtersList} updFilter={updFilter} addToSearch={addToSearch} />}\n      {stocks && stocks.length > 0 && <h5>Filters added: {filtersCnt}</h5>}\n      {stocks && stocks.length > 0 && <Tbl stocks={stocks} searchParams={searchParams} deleteStock={deleteStock} />}\n      <PercentageDiff />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}