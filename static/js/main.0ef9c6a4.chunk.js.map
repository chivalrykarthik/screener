{"version":3,"sources":["logo.svg","Txt.js","Filters.js","operators.js","Tbl.js","App.js","reportWebVitals.js","index.js"],"names":["Txt","value","setVal","onSubmit","onChange","e","target","onClick","Rows","rowNum","label","operator","checked","updFilter","handleChange","name","type","placeholder","Filters","filtersList","addToSearch","className","map","filter","key","bind","search","a","b","parseFloat","Heading","filters","stock","cols","Object","keys","col","Col","searchParams","deleteStock","Name","cnt","colName","params","operators","processResult","props","Tbl","stocks","border","bold","App","useState","txt","setTxt","setStocks","setFilters","setSearch","tmpStocks","JSON","parse","Array","isArray","length","tmpFilters","createFilters","alert","tmp","searchObj","reduce","acc","val","newStocks","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ef9c6a4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const Txt = ({ value, setVal, onSubmit }) => {\r\n    return (\r\n        <>\r\n            <textarea value={value} onChange={(e) => setVal(e.target.value)} />\r\n            <button onClick={onSubmit} >Add</button>\r\n        </>\r\n    )\r\n};\r\nexport default Txt;","\r\nconst Rows = ({ rowNum, label, operator, value, checked, updFilter }) => {\r\n    const handleChange = (e) => {\r\n        let value = e.target.value;\r\n        const name = e.target.name;\r\n\r\n        if (name === \"checked\") {\r\n            value = !checked;\r\n        }\r\n        updFilter(rowNum, name, value);\r\n    }\r\n    return (\r\n        <div>\r\n            <input type=\"checkbox\" onChange={handleChange} name='checked' checked={checked} />\r\n            <label>{label}</label>&nbsp;\r\n            <select name='operator' onChange={handleChange}>\r\n                <option value='>'>Greater</option>\r\n                <option value='>='>Greater & Equal</option>\r\n                <option value='<'>Less</option>\r\n                <option value='<='>Less & equal</option>\r\n                <option value='!='>Not equal</option>\r\n                <option value='=='>Equal</option>\r\n            </select>\r\n            <input type=\"text\" placeholder='Value' name='value' value={value} onChange={handleChange} />\r\n        </div>\r\n    )\r\n}\r\nconst Filters = ({ filtersList, updFilter, addToSearch }) => {\r\n    return (\r\n        <>\r\n            <div className='filters'>\r\n                Filters:\r\n                {\r\n                    filtersList.map((filter, key) => <Rows label={filter.label} operator={filter.operator} value={filter.value} checked={filter.checked} key={key} rowNum={key} updFilter={updFilter} />)\r\n                }\r\n                <br />\r\n                <button onClick={addToSearch.bind(null, filtersList)} >Filter</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filters;","const search = {\r\n    '>': (a, b) => (parseFloat(a) > parseFloat(b)),\r\n    '>=': (a, b) => (parseFloat(a) >= parseFloat(b)),\r\n    '<': (a, b) => (parseFloat(a) < parseFloat(b)),\r\n    '<=': (a, b) => (parseFloat(a) <= parseFloat(b)),\r\n    '!=': (a, b) => (parseFloat(a) != parseFloat(b)),\r\n    '==': (a, b) => (parseFloat(a) == parseFloat(b)),\r\n}\r\n\r\nexport default search","import { useState } from 'react';\r\nimport operators from './operators';\r\nconst Heading = ({ stock }) => {\r\n    const { filters } = stock;\r\n    const cols = Object.keys(filters);\r\n    return (\r\n        <>\r\n            <th>StockName</th>\r\n            {cols.map(col => <th>{col}</th>)}\r\n            <th>Matches</th>\r\n            <th>Action</th>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Col = ({ stock, searchParams, deleteStock, rowNum }) => {\r\n\r\n    const { Name, filters } = stock;\r\n    const cols = Object.keys(filters);\r\n    let cnt = 0;\r\n    const processResult = (colName, key) => {\r\n        const params = searchParams[colName];\r\n\r\n        if (params && operators[params.operator]) {\r\n            const className = operators[params.operator](filters[colName], params.value) ? 'greenCol' : 'redCol';\r\n            if (className === 'greenCol') {\r\n                cnt++;\r\n            }\r\n            return className;\r\n        }\r\n        return;\r\n    }\r\n    return (\r\n        <>\r\n            <td>{Name}</td>\r\n            {\r\n                cols.map((col, key) => {\r\n                    const className = processResult(col, key) || '';\r\n                    return <td className={className} >{filters[col]}</td>;\r\n                })\r\n            }\r\n            <td>{cnt}</td>\r\n            <td><button onClick={deleteStock.bind(null, rowNum)}>Delete</button></td>\r\n        </>\r\n    )\r\n}\r\nconst Rows = (props) => {\r\n    return (\r\n        <>\r\n            <tr>\r\n                <Col {...props} />\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Tbl = ({ stocks, searchParams, deleteStock }) => {\r\n    return (\r\n        <>\r\n            <table border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <Heading stock={stocks[0]} />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {stocks.map((stock, rowNum) => <Rows stock={stock} searchParams={searchParams} rowNum={rowNum} deleteStock={deleteStock} />)}\r\n                </tbody>\r\n                <thead>\r\n                    <tr bold=\"1\">\r\n                        <Heading stock={stocks[0]} />\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\nexport default Tbl;","import logo from './logo.svg';\nimport './App.css';\nimport Txt from './Txt';\nimport Filters from './Filters';\nimport { useState } from 'react';\nimport Tbl from './Tbl';\nfunction App() {\n  const [txt, setTxt] = useState('');\n  const [stocks, setStocks] = useState([]);\n  const [filtersList, setFilters] = useState([]);\n  const [searchParams, setSearch] = useState({});\n  const updFilter = (key, col, value) => {\n    const tmp = [...filtersList];\n    tmp[key][col] = value;\n    setFilters(tmp);\n  }\n\n  const addToSearch = (filters) => {\n    const searchObj = filters.reduce((acc, val) => {\n      if (val.checked) {\n        let tmp = {\n          [val.label]: {\n            value: val.value,\n            operator: val.operator,\n          }\n        };\n        return { ...acc, ...tmp };\n      }\n      return acc;\n    }, {});\n    setSearch(searchObj);\n  }\n\n  const createFilters = (stocks) => {\n    if (stocks?.length) {\n      const firstRow = Object.keys(stocks[0].filters);\n      const tmpFilters = firstRow.map((key) => {\n        return {\n          label: key,\n          value: '',\n          operator: '',\n          checked: false\n        }\n      });\n      setFilters(tmpFilters);\n    } else {\n      setFilters([]);\n    }\n  }\n\n  const parseStocks = () => {\n    try {\n      let tmpStocks = JSON.parse(txt);\n      if (!Array.isArray(tmpStocks)) { tmpStocks = [tmpStocks] }\n      setStocks(tmpStocks);\n      createFilters(tmpStocks);\n    } catch (e) {\n      alert(\"Invlaid JSON\")\n    }\n  }\n\n  const deleteStock = (key) => {\n    const newStocks = [...stocks.slice(0, key), ...stocks.slice(key + 1)]\n    setStocks(newStocks);\n  }\n  return (\n    <div className=\"App\">\n      <Txt value={txt} setVal={setTxt} onSubmit={parseStocks} />\n      {stocks && stocks.length > 0 && <Filters filtersList={filtersList} updFilter={updFilter} addToSearch={addToSearch} />}\n      {stocks && stocks.length > 0 && <Tbl stocks={stocks} searchParams={searchParams} deleteStock={deleteStock} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}