{"version":3,"sources":["logo.svg","Txt.js","Filters.js","operators.js","Tbl.js","PercentageDiff.js","App.js","reportWebVitals.js","index.js"],"names":["Txt","value","setVal","onSubmit","onChange","e","target","onClick","Rows","rowNum","label","operator","checked","updFilter","handleChange","name","style","display","flexDirection","justifyContent","width","margin","type","placeholder","autoComplete","Filters","filtersList","addToSearch","className","map","filter","key","bind","search","a","b","parseFloat","Heading","filters","stock","cols","Object","keys","col","Col","searchParams","deleteStock","Name","cnt","colName","params","operators","processResult","props","Tbl","stocks","border","bold","DiffList","precentages","textAlign","percentage","val","Math","round","diff","PercentageDiff","useState","vals","setPrecentages","values","split","v","join","per","reduce","acc","newNum","orgNum","tmp","console","log","AddDiff","cmps","setCmp","prompt","CmpName","flexWrap","cmp","App","txt","setTxt","setStocks","setFilters","setSearch","filtersCnt","setFiltersCnt","tmpStocks","JSON","parse","Array","isArray","length","tmpFilters","createFilters","alert","searchObj","newStocks","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d4317d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const Txt = ({ value, setVal, onSubmit }) => {\r\n    return (\r\n        <>\r\n            <textarea value={value} onChange={(e) => setVal(e.target.value)} />\r\n            <button onClick={onSubmit} >Add</button>\r\n        </>\r\n    )\r\n};\r\nexport default Txt;","\r\nconst Rows = ({ rowNum, label, operator, value, checked, updFilter }) => {\r\n    const handleChange = (e) => {\r\n        let value = e.target.value;\r\n        const name = e.target.name;\r\n\r\n        if (name === \"checked\") {\r\n            value = !checked;\r\n        }\r\n        updFilter(rowNum, name, value);\r\n        if ((name === 'operator' || name === 'value') && value) {\r\n            updFilter(rowNum, 'checked', true);\r\n        }\r\n    }\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", width: \"50%\", margin: \"0 0 5px 0\" }}>\r\n            <div>\r\n                <input type=\"checkbox\" onChange={handleChange} name='checked' checked={checked} />\r\n            </div>\r\n            <div style={{ width: \"10em\" }}>\r\n                <label>{label}</label>&nbsp;\r\n            </div>\r\n            <div>\r\n                <select name='operator' onChange={handleChange}>\r\n                    <option value=''>Select</option>\r\n                    <option value='>'>Greater</option>\r\n                    <option value='>='>Greater & Equal</option>\r\n                    <option value='<'>Less</option>\r\n                    <option value='<='>Less & equal</option>\r\n                    <option value='!='>Not equal</option>\r\n                    <option value='=='>Equal</option>\r\n                </select>\r\n            </div>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder='Value'\r\n                    name='value'\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    autoComplete='off'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst Filters = ({ filtersList, updFilter, addToSearch }) => {\r\n    return (\r\n        <>\r\n            <h5>Filters:</h5>\r\n            <div className='filters'>\r\n\r\n                {\r\n                    filtersList.map((filter, key) => <Rows label={filter.label} operator={filter.operator} value={filter.value} checked={filter.checked} key={key} rowNum={key} updFilter={updFilter} />)\r\n                }\r\n                <br />\r\n            </div>\r\n            <button onClick={addToSearch.bind(null, filtersList)} >Filter</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filters;","const search = {\r\n    '>': (a, b) => (parseFloat(a) > parseFloat(b)),\r\n    '>=': (a, b) => (parseFloat(a) >= parseFloat(b)),\r\n    '<': (a, b) => (parseFloat(a) < parseFloat(b)),\r\n    '<=': (a, b) => (parseFloat(a) <= parseFloat(b)),\r\n    '!=': (a, b) => (parseFloat(a) != parseFloat(b)),\r\n    '==': (a, b) => (parseFloat(a) == parseFloat(b)),\r\n}\r\n\r\nexport default search","import { useState } from 'react';\r\nimport operators from './operators';\r\nconst Heading = ({ stock }) => {\r\n    const { filters } = stock;\r\n    const cols = Object.keys(filters);\r\n    return (\r\n        <>\r\n            <th>StockName</th>\r\n            {cols.map(col => <th>{col}</th>)}\r\n            <th>Matches</th>\r\n            <th>Action</th>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Col = ({ stock, searchParams, deleteStock, rowNum }) => {\r\n\r\n    const { Name, filters } = stock;\r\n    const cols = Object.keys(filters);\r\n    let cnt = 0;\r\n    const processResult = (colName, key) => {\r\n        const params = searchParams[colName];\r\n\r\n        if (params && operators[params.operator]) {\r\n            const className = operators[params.operator](filters[colName], params.value) ? 'greenCol' : 'redCol';\r\n            if (className === 'greenCol') {\r\n                cnt++;\r\n            }\r\n            return className;\r\n        }\r\n        return;\r\n    }\r\n    return (\r\n        <>\r\n            <td>{Name}</td>\r\n            {\r\n                cols.map((col, key) => {\r\n                    const className = processResult(col, key) || '';\r\n                    return <td className={className} >{filters[col]}</td>;\r\n                })\r\n            }\r\n            <td>{cnt}</td>\r\n            <td><button onClick={deleteStock.bind(null, rowNum)}>Delete</button></td>\r\n        </>\r\n    )\r\n}\r\nconst Rows = (props) => {\r\n    return (\r\n        <>\r\n            <tr>\r\n                <Col {...props} />\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Tbl = ({ stocks, searchParams, deleteStock }) => {\r\n    return (\r\n        <>\r\n            <table border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <Heading stock={stocks[0]} />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {stocks.map((stock, rowNum) => <Rows stock={stock} searchParams={searchParams} rowNum={rowNum} deleteStock={deleteStock} />)}\r\n                </tbody>\r\n                <thead>\r\n                    <tr bold=\"1\">\r\n                        <Heading stock={stocks[0]} />\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\nexport default Tbl;","import { useState } from \"react\";\r\nconst findPerDiff = (newNum, orgNum) => {\r\n    return ((newNum - orgNum) / orgNum) * 100;\r\n}\r\n\r\nconst DiffList = ({ precentages }) => {\r\n    return (\r\n        <table style={{ width: \"10rem\", textAlign: \"left\" }}>\r\n\r\n            {\r\n                precentages.map((percentage) => {\r\n                    return (\r\n                        <tr>\r\n                            <td>{percentage.val}</td>\r\n                            <td>{Math.round(percentage.diff)}%</td>\r\n                        </tr>\r\n                    );\r\n                })\r\n            }\r\n\r\n\r\n        </table>\r\n    )\r\n}\r\n\r\nconst PercentageDiff = ({ label }) => {\r\n    const [vals, setVal] = useState('');\r\n    const [precentages, setPrecentages] = useState([]);\r\n    const values = vals.split(/\\s|%/).filter(v => v).map(v => v.split(',').join(''));\r\n    const onCalc = () => {\r\n        const per = values.reduce((acc, val, key) => {\r\n            let tmp = {\r\n                diff: 0,\r\n                val\r\n            };\r\n            if (key === 0) return [tmp];\r\n            tmp.diff = findPerDiff(val, values[key - 1]);\r\n            return [...acc, tmp];\r\n        }, []);\r\n        console.log(per)\r\n        setPrecentages(per);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{ margin: \"0 20px 0 0\" }}>\r\n                <h6>{label}</h6>\r\n                <input type=\"text\" onChange={e => setVal(e.target.value)} />\r\n                <button onClick={onCalc} >Calc</button>\r\n                <DiffList precentages={precentages} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst AddDiff = () => {\r\n    const [cmps, setCmp] = useState([])\r\n    const addCmp = () => {\r\n        const label = prompt(`Enter diff name`);\r\n        if (!label) return;\r\n        setCmp([...cmps, { CmpName: PercentageDiff, label }])\r\n    }\r\n    return (\r\n        <div>\r\n            <h5>Calculate Diff:</h5>\r\n            <button onClick={addCmp}>Add</button>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\", width: '90%', flexWrap: \"wrap\" }}>\r\n                {cmps.map(cmp => {\r\n                    const { CmpName, label } = cmp;\r\n                    return <CmpName label={label} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddDiff;","import logo from './logo.svg';\nimport './App.css';\nimport Txt from './Txt';\nimport Filters from './Filters';\nimport { useState } from 'react';\nimport Tbl from './Tbl';\nimport PercentageDiff from './PercentageDiff';\nfunction App() {\n  const [txt, setTxt] = useState('');\n  const [stocks, setStocks] = useState([]);\n  const [filtersList, setFilters] = useState([]);\n  const [searchParams, setSearch] = useState({});\n  const [filtersCnt, setFiltersCnt] = useState(0);\n  const updFilter = (key, col, value) => {\n    const tmp = [...filtersList];\n    tmp[key][col] = value;\n    setFilters(tmp);\n  }\n\n  const addToSearch = (filters) => {\n    let cnt = 0;\n    const searchObj = filters.reduce((acc, val) => {\n      if (val.checked) {\n        cnt++;\n        let tmp = {\n          [val.label]: {\n            value: val.value,\n            operator: val.operator,\n          }\n        };\n        return { ...acc, ...tmp };\n      }\n      return acc;\n    }, {});\n    setFiltersCnt(cnt);\n    setSearch(searchObj);\n  }\n\n  const createFilters = (stocks) => {\n    if (stocks?.length) {\n      const firstRow = Object.keys(stocks[0].filters);\n      const tmpFilters = firstRow.map((key) => {\n        return {\n          label: key,\n          value: '',\n          operator: '',\n          checked: false\n        }\n      });\n      setFilters(tmpFilters);\n    } else {\n      setFilters([]);\n    }\n  }\n\n  const parseStocks = () => {\n    try {\n      let tmpStocks = JSON.parse(txt);\n      if (!Array.isArray(tmpStocks)) { tmpStocks = [tmpStocks] }\n      setStocks(tmpStocks);\n      createFilters(tmpStocks);\n    } catch (e) {\n      alert(\"Invlaid JSON\")\n    }\n  }\n\n  const deleteStock = (key) => {\n    const newStocks = [...stocks.slice(0, key), ...stocks.slice(key + 1)]\n    setStocks(newStocks);\n  }\n  return (\n    <div className=\"App\">\n      <Txt value={txt} setVal={setTxt} onSubmit={parseStocks} />\n      {stocks && stocks.length > 0 && <Filters filtersList={filtersList} updFilter={updFilter} addToSearch={addToSearch} />}\n      {stocks && stocks.length > 0 && <h5>Filters added: {filtersCnt}</h5>}\n      {stocks && stocks.length > 0 && <Tbl stocks={stocks} searchParams={searchParams} deleteStock={deleteStock} />}\n      <PercentageDiff />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}