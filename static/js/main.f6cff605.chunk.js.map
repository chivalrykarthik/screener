{"version":3,"sources":["Styles/Txt.js","store/action.js","store/util.js","store/store.js","store/index.js","Txt.js","Filters.js","operators.js","Styles/Table.js","constants.js","Tbl.js","PercentageDiff.js","Styles/Container.js","App.js","reportWebVitals.js","index.js"],"names":["TextArea","styled","textarea","Button","button","Header","div","Avg","action","ADD_TEXT","ADD_STOCKS","ADD_FILTERS","ADD_AVG","ADD_SEARCH","UPD_FILTERS","UPD_AVG","DELETE_STOCK","UPD_HIGH_AVG","UPD_LOW_AVG","findPerDiff","newNum","orgNum","removeOddVal","value","highAvg","lowAvg","rm","mid","length","midPostion","Math","round","midEle","firstEle","lastEle","lastDiff","firstDiff","newValue","pop","push","shift","initialState","txt","stocks","filtersList","average","searchParams","filtersCnt","reducer","state","type","data","tmpStocks","JSON","parse","Array","isArray","e","alert","parseStocks","filters","Object","keys","map","key","label","operator","checked","exclude","createFilters","avg","hightAvg","valueAr","forEach","stock","filter","val","parseFloat","len","concat","sort","a","b","getAvg","cnt","searchObj","reduce","acc","tmp","addToSearch","updFilters","col","updFilter","updAverage","updType","num","parseNum","stringify","updAvg","updStocks","slice","deleteStock","ScreenContext","createContext","Provider","children","store","useReducer","useStore","useContext","Txt","dispatch","handleAvg","target","name","onChange","placeholder","onClick","CompareDropDown","handleChange","Rows","rowNum","useState","isCompare","setCompare","style","display","flexDirection","justifyContent","width","margin","autoComplete","Filters","className","search","table","COLOR","th","ABOVE_NINTY","background","color","ABOVE_EIGHTY","ABOVE_SEVENTY","ABOVE_SIXTY","ABOVE_FIFTY","BELOW_FIFTY","Heading","cols","CheckCmp","isChecked","includes","setChecked","useEffect","Col","Name","colName","params","operators","processResult","matchCnt","percentage","calcPercent","bind","props","Tbl","border","bold","DiffList","precentages","textAlign","diff","PercentageDiff","vals","setVal","setPrecentages","values","split","v","join","per","AddDiff","cmps","setCmp","prompt","CmpName","flexWrap","cmp","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6cff605.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n\r\nconst TextArea = styled.textarea`\r\n    height:100px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    width:10%;\r\n    margin:10px 0 0 0;    \r\n`;\r\n\r\nconst Header = styled.div`\r\n    width:100%;\r\n    display:flex;\r\n    flex-direction:column;\r\n`;\r\n\r\nconst Avg = styled.div`\r\nmargin: 5px 0 0 0;\r\ninput{\r\n    margin:0 5px 0 5px;\r\n}\r\nlabel{\r\n    font-weight:bold;\r\n    font-size:0.9rem;\r\n}\r\n\r\n`;\r\nexport {\r\n    TextArea,\r\n    Button,\r\n    Header,\r\n    Avg\r\n}","const action = {\r\n    ADD_TEXT: 'ADD_TEXT',\r\n    ADD_STOCKS: 'ADD_STOCKS',\r\n    ADD_FILTERS: 'ADD_FILTERS',\r\n    ADD_AVG: 'ADD_AVG',\r\n    ADD_SEARCH: 'ADD_SEARCH',\r\n    UPD_FILTERS: 'UPD_FILTERS',\r\n    UPD_AVG: 'UPD_AVG',\r\n    DELETE_STOCK: 'DELETE_STOCK',\r\n    UPD_HIGH_AVG: 'UPD_HIGH_AVG',\r\n    UPD_LOW_AVG: 'UPD_LOW_AVG'\r\n}\r\n\r\nexport default action;","export const parseStocks = (txt) => {\r\n    try {\r\n        let tmpStocks = JSON.parse(txt);\r\n        if (!Array.isArray(tmpStocks)) { tmpStocks = [tmpStocks] }\r\n        return tmpStocks;\r\n    } catch (e) {\r\n        alert(\"Invlaid JSON\")\r\n    }\r\n}\r\n\r\nexport const createFilters = (stocks) => {\r\n    if (stocks?.length) {\r\n        const firstRow = Object.keys(stocks[0].filters);\r\n        const tmpFilters = firstRow.map((key) => {\r\n            return {\r\n                label: key,\r\n                value: '',\r\n                operator: '',\r\n                checked: false,\r\n                exclude: []\r\n            }\r\n        });\r\n        return tmpFilters;\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\nexport const getAvg = (stocks, hightAvg, lowAvg) => {\r\n    if (Array.isArray(stocks) && stocks?.length) {\r\n        let avg = {};\r\n        let valueAr = {};\r\n        stocks.forEach(stock => {\r\n            const { filters } = stock;\r\n            Object.keys(filters).forEach(filter => {\r\n                const val = parseFloat(avg[filter]?.val || 0) + parseFloat(filters[filter] || 0);\r\n                const len = filters[filter] != '' ? (avg[filter]?.len || 0) + 1 : avg[filter]?.len;\r\n                if (filters[filter] != '') {\r\n                    valueAr[filter] = (valueAr[filter] || []).concat(parseFloat(filters[filter]));\r\n                }\r\n                avg[filter] = { val, len };\r\n            });\r\n        });\r\n        Object.keys(valueAr).forEach(filter => {\r\n            valueAr[filter].sort((a, b) => a - b);\r\n            const rm = removeOddVal(valueAr[filter], hightAvg, lowAvg);\r\n            rm.forEach(val => {\r\n                avg[filter].val -= val\r\n                avg[filter].len--;\r\n            });\r\n            avg[filter].rm = rm;\r\n\r\n        });\r\n        return avg;\r\n    }\r\n}\r\n\r\nexport const addToSearch = (filters) => {\r\n    let cnt = 0;\r\n    const searchObj = filters.reduce((acc, val) => {\r\n        if (val.checked) {\r\n            cnt++;\r\n            let tmp = {\r\n                [val.label]: {\r\n                    value: val.value,\r\n                    operator: val.operator,\r\n                }\r\n            };\r\n            return { ...acc, ...tmp };\r\n        }\r\n        return acc;\r\n    }, {});\r\n    return {\r\n        cnt,\r\n        searchObj\r\n    };\r\n}\r\n\r\nexport const updFilter = (filtersList, key, col, value) => {\r\n    const tmp = [...filtersList];\r\n    tmp[key][col] = value;\r\n    return tmp;\r\n}\r\n\r\nexport const updAvg = ({ updType, filter, num, average }) => {\r\n    const parseNum = parseFloat(num) || 0;\r\n    let tmp = JSON.parse(JSON.stringify(average));\r\n    tmp[filter].val = updType === 'sub' ? (tmp[filter].val - (parseNum)) : (parseFloat(tmp[filter].val) + parseNum);\r\n    tmp[filter].len = updType === 'sub' ? (tmp[filter].len - 1) : (parseFloat(tmp[filter].len) + 1);\r\n    return tmp;\r\n}\r\n\r\nexport const deleteStock = (key, stocks) => {\r\n    const newStocks = [...stocks.slice(0, key), ...stocks.slice(key + 1)]\r\n    return newStocks;\r\n};\r\n\r\nexport const findPerDiff = (newNum, orgNum) => {\r\n    return ((newNum - orgNum) / orgNum) * 100;\r\n}\r\nexport const removeOddVal = (value, highAvg, lowAvg, rm = [], mid = 0) => {\r\n    if (value.length) {\r\n        const midPostion = Math.round(value.length / 2);\r\n        const midEle = mid || value[midPostion];\r\n        const firstEle = value[0];\r\n        const lastEle = value[value.length - 1];\r\n        const lastDiff = findPerDiff(lastEle, midEle);\r\n        const firstDiff = findPerDiff(firstEle, midEle);\r\n        if (lastDiff > highAvg) {\r\n            const newValue = value.pop();\r\n            rm.push(newValue);\r\n            return removeOddVal(value, highAvg, lowAvg, rm, midEle);\r\n        } else if (firstDiff < lowAvg) {\r\n            const newValue = value.shift();\r\n            rm.push(newValue);\r\n            return removeOddVal(value, highAvg, lowAvg, rm, midEle);\r\n        } else {\r\n            return rm;\r\n        }\r\n    }\r\n}","import {\r\n    parseStocks,\r\n    createFilters,\r\n    getAvg,\r\n    addToSearch,\r\n    updFilter,\r\n    updAvg,\r\n    deleteStock\r\n} from './util';\r\nexport const initialState = {\r\n    txt: '',\r\n    highAvg: 100,\r\n    lowAvg: -100,\r\n    stocks: [],\r\n    filtersList: [],\r\n    average: {},\r\n    searchParams: {},\r\n    filtersCnt: 0\r\n};\r\n\r\n\r\nexport const reducer = (state, action) => {\r\n    const { type, data } = action;\r\n    switch (type) {\r\n        case \"ADD_TEXT\":\r\n            return { ...state, txt: data.txt };\r\n        case \"ADD_STOCKS\":\r\n            const stocks = parseStocks(state.txt);\r\n            return {\r\n                ...state, stocks: stocks, filtersList: [], filtersList: [],\r\n                average: {},\r\n                searchParams: {},\r\n                filtersCnt: 0\r\n            };\r\n        case \"ADD_FILTERS\":\r\n            const filters = createFilters(state.stocks);\r\n            return { ...state, filtersList: filters };\r\n        case \"ADD_AVG\":\r\n            const avg = getAvg(state.stocks, state.highAvg, state.lowAvg);\r\n            return { ...state, average: avg };\r\n        case \"ADD_SEARCH\":\r\n            const { cnt, searchObj } = addToSearch(state.filtersList);\r\n            return { ...state, searchParams: searchObj, filtersCnt: cnt };\r\n        case \"UPD_FILTERS\":\r\n            const updFilters = updFilter(state.filtersList, data.key, data.col, data.value);\r\n            return { ...state, filtersList: updFilters };\r\n        case \"UPD_AVG\":\r\n            const updAverage = updAvg({ ...data, average: state.average });\r\n            return { ...state, average: updAverage };\r\n        case \"DELETE_STOCK\":\r\n            const updStocks = deleteStock(data.key, state.stocks);\r\n            return { ...state, stocks: updStocks };\r\n        case \"UPD_HIGH_AVG\":\r\n            return { ...state, highAvg: data.value };\r\n        case \"UPD_LOW_AVG\":\r\n            return { ...state, lowAvg: data.value };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer, useContext, createContext } from 'react';\r\nimport { reducer, initialState } from './store';\r\nexport let ScreenContext = createContext({});\r\nexport const Provider = ({ children }) => {\r\n    let store = useReducer(reducer, initialState);\r\n    return (\r\n        <ScreenContext.Provider value={store}>\r\n            {children}\r\n        </ScreenContext.Provider>\r\n    )\r\n};\r\n\r\n\r\nexport const useStore = () => {\r\n    let store = useContext(ScreenContext);\r\n    return store;\r\n}","import { TextArea, Button, Header, Avg } from './Styles/Txt'\r\nimport action from './store/action';\r\nimport { useStore } from './store';\r\nconst Txt = () => {\r\n    const [store, dispatch] = useStore();\r\n    const { txt, } = store;\r\n    const handleChange = (e) => {\r\n        const txt = e.target.value;\r\n        const type = action.ADD_TEXT;\r\n        dispatch({ data: { txt }, type });\r\n    }\r\n    const handleAvg = (e) => {\r\n        const value = e.target.value;\r\n        const name = e.target.name;\r\n        const type = name === 'highAvg' ? action.UPD_HIGH_AVG : action.UPD_LOW_AVG;\r\n        dispatch({ data: { value }, type });\r\n    }\r\n    const handleSubmit = () => {\r\n        dispatch({ type: action.ADD_STOCKS });\r\n        dispatch({ type: action.ADD_FILTERS });\r\n        dispatch({ type: action.ADD_AVG });\r\n    }\r\n    return (\r\n        <>\r\n            <Header>\r\n                <TextArea value={txt} onChange={handleChange} placeholder='Enter your JSON' />\r\n                <Avg>\r\n                    <label>HighAvg</label><input type='text' name='highAvg' value={store.highAvg} onChange={handleAvg} />\r\n                    <label>LowAvg</label><input type='text' name='lowAvg' value={store.lowAvg} onChange={handleAvg} />\r\n                </Avg>\r\n                <Button onClick={handleSubmit} >Add</Button>\r\n            </Header>\r\n        </>\r\n    )\r\n};\r\nexport default Txt;","import { useState } from 'react';\r\nimport { Button } from './Styles/Txt';\r\nimport { useStore } from './store'\r\nimport action from './store/action';\r\n\r\nconst CompareDropDown = ({ handleChange }) => {\r\n    const [store] = useStore();\r\n    return (\r\n        <>\r\n            <select name='value' onChange={handleChange}>\r\n                <option value=''>Select</option>\r\n                {\r\n                    store.filtersList.map(filter => <option value={filter.label}>{filter.label}</option>)\r\n                }\r\n            </select>\r\n        </>\r\n    )\r\n}\r\nconst Rows = ({ rowNum, label, value, checked }) => {\r\n    const [store, dispatch] = useStore();\r\n    const [isCompare, setCompare] = useState(false);\r\n    const handleChange = (e) => {\r\n        let value = e.target.value;\r\n        const name = e.target.name;\r\n\r\n        if (name === \"checked\") {\r\n            value = !checked;\r\n        }\r\n        if (name === 'operator') {\r\n            if (value === 'GT' || value === 'LT') {\r\n                setCompare(true);\r\n            } else {\r\n                setCompare(false);\r\n            }\r\n            if (value === 'GTA' || value === 'LTA') {\r\n                dispatch({ type: action.UPD_FILTERS, data: { key: rowNum, col: 'value', value: Math.round(store.average[label].val / store.average[label].len) } })\r\n            } else {\r\n                dispatch({ type: action.UPD_FILTERS, data: { key: rowNum, col: 'value', value: '' } })\r\n            }\r\n        }\r\n        dispatch({ type: action.UPD_FILTERS, data: { key: rowNum, col: name, value: value } })\r\n        if ((name === 'operator' || name === 'value') && value) {\r\n            dispatch({ type: action.UPD_FILTERS, data: { key: rowNum, col: 'checked', value: true } })\r\n        }\r\n    }\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", width: \"50%\", margin: \"10px\" }}>\r\n            <div>\r\n                <input type=\"checkbox\" onChange={handleChange} name='checked' checked={checked} />\r\n            </div>\r\n            <div style={{ width: '33%' }}>\r\n                <label>{label}</label>&nbsp;\r\n            </div>\r\n            <div style={{ width: '33%' }}>\r\n                <select name='operator' onChange={handleChange}>\r\n                    <option value=''>Select</option>\r\n                    <option value='>'>Greater</option>\r\n                    <option value='>='>Greater & Equal</option>\r\n                    <option value='<'>Less</option>\r\n                    <option value='<='>Less & equal</option>\r\n                    <option value='!='>Not equal</option>\r\n                    <option value='=='>Equal</option>\r\n                    <option value='GT'>Greater than</option>\r\n                    <option value='LT'>Less than</option>\r\n                    <option value='GTA'>Greater than AVG</option>\r\n                    <option value='LTA'>Less than AVG</option>\r\n                </select>\r\n            </div>\r\n            <div style={{ width: '33%' }}>\r\n                {!isCompare ? <input\r\n                    type=\"text\"\r\n                    placeholder='Value'\r\n                    name='value'\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    autoComplete='off'\r\n                /> : <CompareDropDown handleChange={handleChange} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst Filters = () => {\r\n    const [store, dispatch] = useStore();\r\n    const addToSearch = () => {\r\n        dispatch({ type: action.ADD_SEARCH });\r\n    }\r\n    return (\r\n        <>\r\n            <h5>Filters:</h5>\r\n            <div className='filters'>\r\n\r\n                {\r\n                    store.filtersList.map((filter, key) => <Rows label={filter.label} operator={filter.operator} value={filter.value} checked={filter.checked} key={key} rowNum={key}\r\n                    />)\r\n                }\r\n                <br />\r\n            </div>\r\n            <Button onClick={addToSearch} >Filter</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filters;","const search = {\r\n    '>': (a, b) => (parseFloat(a) > parseFloat(b)),\r\n    '>=': (a, b) => (parseFloat(a) >= parseFloat(b)),\r\n    '<': (a, b) => (parseFloat(a) < parseFloat(b)),\r\n    '<=': (a, b) => (parseFloat(a) <= parseFloat(b)),\r\n    '!=': (a, b) => (parseFloat(a) != parseFloat(b)),\r\n    '==': (a, b) => (parseFloat(a) == parseFloat(b)),\r\n    'GT': (a, b) => (parseFloat(a) >= parseFloat(b)),\r\n    'LT': (a, b) => (parseFloat(a) <= parseFloat(b)),\r\n    'GTA': (a, b) => (parseFloat(a) >= parseFloat(b)),\r\n    'LTA': (a, b) => (parseFloat(a) <= parseFloat(b)),\r\n}\r\n\r\nexport default search","import styled from 'styled-components';\r\n\r\n\r\nconst Table = styled.table`\r\nborder:1px solid;\r\n`;\r\n\r\nconst Avg = styled.div`\r\n    background: skyblue;\r\n    border-radius:50%;\r\n    font-size:9px;\r\n`\r\nconst Th = styled.th``;\r\nconst TD = styled.th``;\r\n\r\nexport {\r\n    Table,\r\n    Avg\r\n\r\n}","export const COLOR = {\r\n    RESULT: {\r\n        ABOVE_NINTY: { background: 'green', color: 'rgb(255,255,255)' },\r\n        ABOVE_EIGHTY: { background: 'lightgreen', color: 'rgb(255,255,255)' },\r\n        ABOVE_SEVENTY: { background: 'skyblue', color: 'rgb(255,255,255)' },\r\n        ABOVE_SIXTY: { background: 'orange', color: 'rgb(255,255,255)' },\r\n        ABOVE_FIFTY: { background: 'yellow', color: 'rgb(255,255,255)' },\r\n        BELOW_FIFTY: { background: 'red', color: 'rgb(255,255,255)' }\r\n    }\r\n}","import { useStore } from './store';\r\nimport action from './store/action';\r\nimport operators from './operators';\r\nimport { Avg } from './Styles/Table';\r\nimport { COLOR } from './constants'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nconst Heading = ({ stock, average }) => {\r\n    const { filters } = stock;\r\n    const cols = Object.keys(filters);\r\n    return (\r\n        <>\r\n            <th>StockName</th>\r\n            {cols.map(col => <th>{col}<Avg>{(Math.round(average[col].val / average[col].len))}</Avg></th>)}\r\n            <th>Matches</th>\r\n            <th>Action</th>\r\n        </>\r\n    )\r\n}\r\n\r\nconst CheckCmp = ({ name, value, onChange }) => {\r\n    const [store] = useStore();\r\n    const { rm } = store.average[name];\r\n    const isChecked = (value === '' || rm.includes(parseFloat(value))) ? true : false\r\n    const [checked, setChecked] = useState(isChecked);\r\n    useEffect(() => {\r\n        const isChecked = (value === '' || rm.includes(parseFloat(value))) ? true : false;\r\n        setChecked(isChecked);\r\n    }, [...rm]);\r\n\r\n    const handleChange = (e) => {\r\n        setChecked(!checked);\r\n        onChange(e);\r\n    }\r\n    return (\r\n        <>\r\n            <input type=\"checkbox\" name={name} value={value} onChange={handleChange} checked={checked} />\r\n        </>\r\n    )\r\n}\r\nconst Col = ({ stock, rowNum }) => {\r\n    const [store, dispatch] = useStore();\r\n    const { Name, filters } = stock;\r\n    const cols = Object.keys(filters);\r\n    const { filtersCnt } = store;\r\n    const calcPercent = (matchCnt) => {\r\n        if (filtersCnt <= 0) return;\r\n        const percentage = ((matchCnt / filtersCnt) * 100);\r\n        if (percentage >= 90) {\r\n            return COLOR.RESULT.ABOVE_NINTY;\r\n        } else if (percentage >= 80) {\r\n            return COLOR.RESULT.ABOVE_EIGHTY;\r\n        } else if (percentage >= 70) {\r\n            return COLOR.RESULT.ABOVE_SEVENTY;\r\n        } else if (percentage >= 60) {\r\n            return COLOR.RESULT.ABOVE_SIXTY;\r\n        } else if (percentage >= 50) {\r\n            return COLOR.RESULT.ABOVE_FIFTY;\r\n        } else {\r\n            return COLOR.RESULT.BELOW_FIFTY;\r\n        }\r\n    }\r\n    let cnt = 0;\r\n    const processResult = (colName) => {\r\n        const params = store.searchParams[colName];\r\n\r\n        if (params && operators[params.operator]) {\r\n            const value = (params.operator === 'LT' || params.operator === 'GT') ? (filters[params.value] || 0) : params.value;\r\n            const className = operators[params.operator](filters[colName], value) ? 'greenCol' : 'redCol';\r\n            if (className === 'greenCol') {\r\n                cnt++;\r\n            }\r\n            return className;\r\n        }\r\n        return;\r\n    }\r\n    const handleChange = function (e) {\r\n        const { checked, value, name } = e.target;\r\n        const updType = checked ? 'sub' : 'add';\r\n        dispatch({ type: action.UPD_AVG, data: { updType, filter: name, num: value } });\r\n    }\r\n    const handleDelete = (rowNum) => {\r\n        dispatch({ type: action.DELETE_STOCK, data: { key: rowNum } });\r\n    }\r\n    return (\r\n        <>\r\n            <td>{Name}</td>\r\n            {\r\n                cols.map((col, key) => {\r\n                    const className = processResult(col, key) || '';\r\n                    return (<td className={className} >\r\n\r\n                        <CheckCmp name={col} value={filters[col]} onChange={handleChange} />\r\n                        {filters[col]}\r\n                    </td>);\r\n                })\r\n            }\r\n            <td style={calcPercent(cnt)}>{cnt}</td>\r\n            <td><button onClick={handleDelete.bind(null, rowNum)}>Delete</button></td>\r\n        </>\r\n    )\r\n}\r\nconst Rows = (props) => {\r\n    return (\r\n        <>\r\n            <tr>\r\n                <Col {...props} />\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Tbl = () => {\r\n    const [store] = useStore();\r\n    return (\r\n        <>\r\n            <table border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <Heading average={store.average} stock={store.stocks[0]} />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {store.stocks.map((stock, rowNum) => <Rows stock={stock} rowNum={rowNum} />)}\r\n                </tbody>\r\n                <thead>\r\n                    <tr bold=\"1\">\r\n                        <Heading average={store.average} stock={store.stocks[0]} />\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\nexport default Tbl;","import { useState } from \"react\";\r\nimport { findPerDiff } from './store/util';\r\n\r\nconst DiffList = ({ precentages }) => {\r\n    return (\r\n        <table style={{ width: \"10rem\", textAlign: \"left\" }}>\r\n\r\n            {\r\n                precentages.map((percentage) => {\r\n                    return (\r\n                        <tr>\r\n                            <td>{percentage.val}</td>\r\n                            <td>{Math.round(percentage.diff)}%</td>\r\n                        </tr>\r\n                    );\r\n                })\r\n            }\r\n\r\n\r\n        </table>\r\n    )\r\n}\r\n\r\nconst PercentageDiff = ({ label }) => {\r\n    const [vals, setVal] = useState('');\r\n    const [precentages, setPrecentages] = useState([]);\r\n    const values = vals.split(/\\s|%/).filter(v => v).map(v => v.split(',').join(''));\r\n    const onCalc = () => {\r\n        const per = values.reduce((acc, val, key) => {\r\n            let tmp = {\r\n                diff: 0,\r\n                val\r\n            };\r\n            if (key === 0) return [tmp];\r\n            tmp.diff = findPerDiff(val, values[key - 1]);\r\n            return [...acc, tmp];\r\n        }, []);\r\n\r\n        setPrecentages(per);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{ margin: \"0 20px 0 0\" }}>\r\n                <h6>{label}</h6>\r\n                <input type=\"text\" onChange={e => setVal(e.target.value)} />\r\n                <button onClick={onCalc} >Calc</button>\r\n                <DiffList precentages={precentages} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst AddDiff = () => {\r\n    const [cmps, setCmp] = useState([])\r\n    const addCmp = () => {\r\n        const label = prompt(`Enter diff name`);\r\n        if (!label) return;\r\n        setCmp([...cmps, { CmpName: PercentageDiff, label }])\r\n    }\r\n    return (\r\n        <div>\r\n            <h5>Calculate Diff:</h5>\r\n            <button onClick={addCmp}>Add</button>\r\n            <div style={{ display: \"flex\", width: '90%', flexWrap: \"wrap\" }}>\r\n                {cmps.map(cmp => {\r\n                    const { CmpName, label } = cmp;\r\n                    return <CmpName label={label} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddDiff;","import styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\nmargin:40px;\r\nposition:relative;\r\n`;\r\n\r\nexport {\r\n    Container\r\n}","import './App.css';\nimport Txt from './Txt';\nimport Filters from './Filters';\nimport Tbl from './Tbl';\nimport PercentageDiff from './PercentageDiff';\nimport { Container } from './Styles/Container'\nimport { Provider, useStore } from './store';\n\nfunction App() {\n  const [store] = useStore();\n  return (\n    <Container>\n      <Txt />\n      {store.stocks && store.stocks.length > 0 && <Filters />}\n      {store.stocks && store.stocks.length > 0 && <h5>Filters added: {store.filtersCnt}</h5>}\n      {store.stocks && store.stocks.length > 0 && <Tbl />}\n      <PercentageDiff />\n    </Container>\n  );\n}\n\n\nexport default () => {\n  return (\n    <Provider>\n      <App />\n    </Provider>\n  )\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}