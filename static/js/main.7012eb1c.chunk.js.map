{"version":3,"sources":["logo.svg","Txt.js","Filters.js","search.js","Tbl.js","App.js","reportWebVitals.js","index.js"],"names":["Txt","value","setVal","onSubmit","onChange","e","target","onClick","Rows","rowNum","label","operator","checked","updFilter","handleChange","name","type","placeholder","Filters","filtersList","addToSearch","className","map","filter","key","bind","search","a","b","Heading","filters","stock","cols","Object","keys","col","Col","searchParams","Name","colName","params","processResult","Tbl","stocks","border","App","useState","txt","setTxt","setStocks","setFilters","setSearch","tmpStocks","JSON","parse","Array","isArray","length","tmpFilters","createFilters","alert","tmp","searchObj","reduce","acc","val","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7012eb1c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const Txt = ({ value, setVal, onSubmit }) => {\r\n    return (\r\n        <>\r\n            <textarea value={value} onChange={(e) => setVal(e.target.value)} />\r\n            <button onClick={onSubmit} >Add</button>\r\n        </>\r\n    )\r\n};\r\nexport default Txt;","\r\nconst Rows = ({ rowNum, label, operator, value, checked, updFilter }) => {\r\n    const handleChange = (e) => {\r\n        let value = e.target.value;\r\n        const name = e.target.name;\r\n\r\n        if (name === \"checked\") {\r\n            value = !checked;\r\n        }\r\n        updFilter(rowNum, name, value);\r\n    }\r\n    return (\r\n        <div>\r\n            <input type=\"checkbox\" onChange={handleChange} name='checked' checked={checked} />\r\n            <label>{label}</label>&nbsp;\r\n            <input type=\"text\" placeholder='Operator' name='operator' value={operator} onChange={handleChange} />&nbsp;\r\n            <input type=\"text\" placeholder='Value' name='value' value={value} onChange={handleChange} />\r\n        </div>\r\n    )\r\n}\r\nconst Filters = ({ filtersList, updFilter, addToSearch }) => {\r\n    return (\r\n        <>\r\n            <div className='filters'>\r\n                Filters:\r\n                {\r\n                    filtersList.map((filter, key) => <Rows label={filter.label} operator={filter.operator} value={filter.value} checked={filter.checked} key={key} rowNum={key} updFilter={updFilter} />)\r\n                }\r\n\r\n                <br />\r\n                <button onClick={addToSearch.bind(null, filtersList)} >Filter</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filters;","const search = {\r\n    '>': (a, b) => (a > b),\r\n    '>=': (a, b) => (a >= b),\r\n    '<': (a, b) => (a < b),\r\n    '<=': (a, b) => (a <= b),\r\n    '!=': (a, b) => (a != b),\r\n    '==': (a, b) => (a == b),\r\n}\r\n\r\nexport default search","import { red } from '@material-ui/core/colors';\r\nimport search from './search';\r\nconst Heading = ({ stock }) => {\r\n    const { filters } = stock;\r\n    const cols = Object.keys(filters);\r\n    return (\r\n        <>\r\n            <td>StockName</td>\r\n            {cols.map(col => <td>{col}</td>)}\r\n        </>\r\n    )\r\n}\r\nconst Col = ({ stock, searchParams }) => {\r\n    const { Name, filters } = stock;\r\n    const cols = Object.keys(filters);\r\n    const processResult = (colName) => {\r\n        const params = searchParams[colName];\r\n        if (params && search[params.operator]) {\r\n            return search[params.operator](filters[colName], params.value) ? 'greenCol' : 'redCol';\r\n        }\r\n        return;\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <td>{Name}</td>\r\n            {\r\n                cols.map(col => {\r\n                    const className = processResult(col) || '';\r\n                    return <td className={className} >{filters[col]}</td>;\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\nconst Rows = ({ stock, searchParams }) => {\r\n    return (\r\n        <>\r\n            <tr>\r\n                <Col stock={stock} searchParams={searchParams} />\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Tbl = ({ stocks, searchParams }) => {\r\n    return (\r\n        <>\r\n            <table border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <Heading stock={stocks[0]} />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {stocks.map((stock) => <Rows stock={stock} searchParams={searchParams} />)}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\nexport default Tbl;","import logo from './logo.svg';\nimport './App.css';\nimport Txt from './Txt';\nimport Filters from './Filters';\nimport { useState } from 'react';\nimport Tbl from './Tbl';\nfunction App() {\n  const [txt, setTxt] = useState('');\n  const [stocks, setStocks] = useState([]);\n  const [filtersList, setFilters] = useState([]);\n  const [searchParams, setSearch] = useState({});\n  const updFilter = (key, col, value) => {\n    const tmp = [...filtersList];\n    tmp[key][col] = value;\n    setFilters(tmp);\n  }\n\n  const addToSearch = (filters) => {\n    const searchObj = filters.reduce((acc, val) => {\n      if (val.checked) {\n        let tmp = {\n          [val.label]: {\n            value: val.value,\n            operator: val.operator,\n          }\n        };\n        return { ...acc, ...tmp };\n      }\n      return acc;\n    }, {});\n    setSearch(searchObj);\n  }\n  const createFilters = (stocks) => {\n    if (stocks?.length) {\n      const firstRow = Object.keys(stocks[0].filters);\n      const tmpFilters = firstRow.map((key) => {\n        return {\n          label: key,\n          value: '',\n          operator: '',\n          checked: false\n        }\n      });\n      setFilters(tmpFilters);\n    } else {\n      setFilters([]);\n    }\n  }\n  const parseStocks = () => {\n    try {\n      let tmpStocks = JSON.parse(txt);\n      if (!Array.isArray(tmpStocks)) { tmpStocks = [tmpStocks] }\n      setStocks(tmpStocks);\n      createFilters(tmpStocks);\n    } catch (e) {\n      alert(\"Invlaid JSON\")\n    }\n  }\n  return (\n    <div className=\"App\">\n      <Txt value={txt} setVal={setTxt} onSubmit={parseStocks} />\n      {stocks && stocks.length > 0 && <Filters filtersList={filtersList} updFilter={updFilter} addToSearch={addToSearch} />}\n      {stocks && stocks.length > 0 && <Tbl stocks={stocks} searchParams={searchParams} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}