{"version":3,"sources":["sort/index.js","store/action.js","store/store.js","store/index.js","store/util.js","Styles/Container.js","Styles/Txt.js","Txt.js","Filters.js","Tbl.js","PercentageDiff.js","Styles/Modal.js","modal.js","bestPick/index.js","Screener.js","charts/chart.js","charts/util.js","charts/hooks/useLoadFile.js","stats/style.js","stats/util.js","stats/component/style.js","stats/component/Position.js","stats/component/Row.js","stats/component/Tbl.js","stats/index.js","charts/index.js","fp/style.js","fp/index.js","App.js","reportWebVitals.js","index.js","bestPick/Style.js","sort/constants.js","operators.js","Styles/Table.js","constants.js","view/TblView.js"],"names":["round5","num","n","Math","abs","Number","diff","res","addRank","store","rankCols","fields","infi","val","isAsc","isNaN","parseFloat","Infinity","i","field","split","col","length","tmpStore","JSON","parse","stringify","stocks","sort","a","b","filters","allowNegative","includes","v1","v2","desc","nm","Name","forEach","st","k","sortStocks","sortByCol","avg","asc","isRound","map","colOrder","colList","cols","rm","order","join","eval","SortedStocks","useState","openSort","setSort","colsOrder","sortList","setSortList","sortBy","setSortBy","rankList","setRankList","rankBy","setRankBy","useStore","stocksRank","average","onClick","e","type","value","onChange","target","Array","isArray","dispatch","filtersCnt","searchParams","compare","action","ADD_TEXT","ADD_STOCKS","ADD_FILTERS","ADD_AVG","ADD_SEARCH","UPD_FILTERS","UPD_AVG","DELETE_STOCK","DELETE_STOCKS","UPD_HIGH_AVG","UPD_LOW_AVG","UPD_MAX_PER","UPD_STOCKS","ADD_TO_COMPARE","initialState","txt","highAvg","lowAvg","maxPer","filtersList","reducer","state","data","parseStocks","createFilters","getAvg","addToSearch","cnt","searchObj","updFilters","updFilter","key","updAverage","updAvg","updStock","deleteStock","updStocks","deleteStocks","ScreenContext","createContext","Provider","children","useReducer","useContext","tmpStocks","_","id","alert","Object","keys","label","operator","checked","exclude","hightAvg","valueAr","stock","filter","len","concat","removeOddVal","reduce","acc","tmp","updType","parseNum","slice","findPerDiff","newNum","orgNum","findPercentage","values","arr","max","ceil","firstChunk","reverse","lastChunk","firstPercentage","lastPercentage","firstPos","findIndex","fp","lastPos","Container","styled","div","props","showChart","Header","TextArea","textarea","Button","button","Avg","Txt","handleAvg","name","placeholder","CompareDropDown","handleChange","Rows","rowNum","isCompare","setCompare","round","style","display","flexDirection","justifyContent","width","margin","autoComplete","Filters","className","Tbl","TblView","DiffList","precentages","textAlign","percentage","PercentageDiff","vals","setVal","setPrecentages","v","per","AddDiff","cmps","setCmp","prompt","CmpName","flexWrap","cmp","ModalContainer","ModalContent","Modal","showModal","indexOf","getPercentage","col1","col2","findBest","findMaxMatch","position","avgPos","t","push","sortByBest","maxMatch","calc","epsAnnGrowthPercent","epsPrevAnnGrowthPercent","epsPreYearQtrPercent","epsPreQtrPercent","roePercent","rocePercent","addMetrics","filterStocks","roe","roce","saleGrowth","qtrSalesVar","npmCur","opmCur","currentMatch","currentBest","roePrevAnn","rocePrevYr","historyMatch","histBest","roe3","roce3","sales3","avg3Match","avg3Best","roe5","roce5","sales5","avg5Match","avg5Best","epsCmp12Mnth","epsCmp12MnthMatch","epsCmp12MnthBest","epsCmpLastYr","epsCmpLastYrMatch","epsCmpLastYrBest","epsCmpLastYrQtr","epsCmpLastYrQtrMatch","epsCmpLastYrQtrBest","epsCmpPrevQtr","epsCmpPrevQtrMatch","epsCmpPrevQtrBest","roePercentMatch","roePercentBest","rocePercentMatch","rocePercentBest","opmPercent","opmAnnPercent","opmPrevAnnPercent","opmQtrPercent","opmPrevQtrPercent","opmPrevYrQtrPercent","opmPercentMatch","opmPercentBest","npmAnnPercent","npmPrevAnnPercent","npmQtrPercent","npmPrevQtrPercent","npmPrevYrQtrPercent","npmPercentMatch","npmPercentBest","allMatch","finalBest","rows","border","row","BestPick","openBestPick","setBestPic","Screener","isModalOpen","setModalOpen","generateRandomColor","color","floor","random","Chart","uniqYear","yAxis","axis","parseInt","LineChart","height","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","Tooltip","Legend","year","Line","stroke","loadData","yr","index","reqIndex","axios","get","useLoadFile","setData","chartData","setChartDat","setYear","noOfDays","setNoOfDays","processData","dt","tmpChartData","tmpData","startingPrice","replace","trim","date","open","day","month","toFixed","clearLast","pop","StatsContainer","StatsItem","prepareObj","sectors","finalStat","sector","rtn","stat","PositionContainer","Position","points","revPoints","useMemo","point","Row","isLast","Stats","entries","from","obj","prepareState","Charts","selectedYear","setSelectedYear","setYAxis","setIndex","compareData","setCompareData","handleIndex","result","handleSelect","loadFile","preventDefault","reader","FileReader","onload","text","readAsText","files","isChecked","bind","columns","selector","match","srcDate","mtDate","mtSymbol","projOpen","projClose","fifth","tenth","fourteenth","conditionalRowStyles","when","backgroundColor","cursor","View","symbol","showSymb","setSymb","up","down","eq","checkPosition","LoadData","symbols","oldNum","ProcessDays","showData","setShowData","Fp","App","setChart","showFp","setFp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","ModalBody","ModalClose","Content","eps","npm","opm","sales","cashFlow","debt","pe","ey","qqp","qqs","yyp","yys","r","er","rr","search","find","table","COLOR","th","ABOVE_NINTY","background","ABOVE_EIGHTY","ABOVE_SEVENTY","ABOVE_SIXTY","ABOVE_FIFTY","BELOW_FIFTY","BANKS","FIN_SERVICE","INS","GOV","Heading","selectAll","isAscending","setAscending","sortTable","CheckCmp","setChecked","useEffect","Col","isHighlight","setHighlight","isFin","isGov","filterClass","colName","params","operators","processResult","matchCnt","calcPercent","selectedRow","selectedIds","setSelectedId","isSelectAll","setSelectAll","allIds","querySelectorAll","innerText","setTimeout","parentNode","firstChild","querySelector","click","bold"],"mappings":"47BAOMA,OAAS,SAACC,GACPA,IAAKA,EAAM,GAChB,IAAIC,EAAID,EAAM,EAAIE,KAAKC,IAAIH,GAAOI,OAAOJ,GACnCK,EAAOJ,EAAI,EACXK,EAAMD,GAAQ,EAAIJ,GAAK,EAAII,GAAQJ,EAAII,EAE7C,OADoBD,OAAVJ,EAAM,GAAYM,EAAcA,IAIxCC,QAAU,SAACC,EAAOC,GAYpB,IAXA,IAAMC,EAASD,EAETE,EAAO,SAACC,EAAKC,GACf,OAAIC,MAAMC,WAAWH,IACVC,EAAQG,KAAYA,IAExBJ,GAPsB,WAYxBK,GACL,IAAMC,EAAQR,EAAOO,GAAGE,MAAM,KACxBC,EAAMF,EAAM,GACZL,EAAQK,EAAMG,OAAS,EACvBC,EAAWC,KAAKC,MAAMD,KAAKE,UAAUjB,IAC3Cc,EAASI,OAAOC,MAAK,SAACC,EAAGC,GAAJ,OAAUhB,IAAWe,EAAEE,QAAQV,GAAO,GAAKS,EAAEC,QAAQV,GAAO,GAAMW,0CAAcC,SAASZ,KARrGa,EAQiHL,EAAEE,QAAQV,GARvHc,EAQ6HL,EAAEC,QAAQV,GARhIT,EAAKI,WAAWkB,IAAK,GAAQtB,EAAKI,WAAWmB,IAAK,IAC7D,SAACD,EAAIC,GAAL,OAAYvB,EAAKI,WAAWmB,IAAK,GAASvB,EAAKI,WAAWkB,IAAK,GAOoFE,CAAKP,EAAEE,QAAQV,GAAMS,EAAEC,QAAQV,IARnL,IAACa,EAAIC,KASb,IAlB6B,eAkBpBjB,GACL,IAAMmB,EAAKd,EAASI,OAAOT,GAAGoB,KAE9B7B,EAAMkB,OAAOY,SAAQ,SAAUC,EAAIC,GAC/B,GAAID,EAAGF,OAASD,EAGZ,OAFA5B,EAAMkB,OAAOc,GAAGV,QAAhB,MAAmCtB,EAAMkB,OAAOc,GAAGV,QAAhB,MAAmC,IAAMb,EAAI,QAChFT,EAAMkB,OAAOc,GAAGV,QAAQV,EAAM,QAAUH,EAAI,OAN/CA,EAAI,EAAGA,EAAIK,EAASI,OAAOL,OAAQJ,IAAM,EAAzCA,IANJA,EAAI,EAAGA,EAAIP,EAAOW,OAAQJ,IAAM,EAAhCA,GAmBT,OAAOT,GAGLiC,WAAa,SAAbA,WAAcf,OAAQgB,UAAWC,KACnC,IAAMC,IAAM,SAACX,EAAIC,EAAIW,GAAT,OAAqBA,EAAU9C,OAAOkC,GAAMlC,OAAOmC,GAAMD,EAAKC,GACpEC,KAAO,SAACF,EAAIC,EAAIW,GAAT,OAAqBA,EAAU9C,OAAOmC,GAAMnC,OAAOkC,GAAMC,EAAKD,GAE3E,OAAOP,OAAOC,MAAK,SAACC,EAAGC,GACnB,IAAMvB,IAAMoC,UAAUI,KAAI,SAACC,GACvB,IAAMC,EAAUC,0CAAKF,GACrB,OAAOC,EAAQC,KAAKH,KAAI,SAAC1B,GACrB,OAAIuB,IAAIvB,KACAuB,IAAIvB,GAAK8B,GAAGlB,SAASjB,WAAWa,EAAEE,QAAQV,MAAUuB,IAAIvB,GAAK8B,GAAGlB,SAASjB,WAAWc,EAAEC,QAAQV,MAC3F,EAEW,QAAlB4B,EAAQG,MACDP,IAAIhB,EAAEE,QAAQV,GAAMS,EAAEC,QAAQV,IAE9Be,KAAKP,EAAEE,QAAQV,GAAMS,EAAEC,QAAQV,OAE3CgC,KAAK,SAETA,KAAK,MAER,OAAOC,KAAK/C,SAIdgD,aAAe,WACjB,MAA4BC,qDAAS,GAArC,uKAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,oDAASG,2CAAzC,uKAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BL,oDAASG,2CAArC,uKAAOG,EAAP,KAAeC,EAAf,KACA,EAAgCP,oDAAS9C,2CAAzC,uKAAOsD,EAAP,KAAiBC,EAAjB,KACA,EAA4BT,oDAAS9C,2CAArC,uKAAOwD,EAAP,KAAeC,EAAf,KACA,EAAgBC,gDAAT3D,EAAP,wKACMc,EAAWC,KAAKC,MAAMD,KAAKE,UAAUjB,IACrC4D,EAAa7D,QAAQe,EAAU2C,GAC/BvC,EAASe,WAAW2B,EAAW1C,OAAQmC,EAAQO,EAAWC,SAKhE,OACI,+HACI,qEAAQC,QAAS,SAAAC,GAAC,OAAId,GAASD,IAA/B,kBAEIA,GAAa,2DAAC,+CAAD,UACT,4DAAC,+CAAD,WACI,2DAAC,+CAAD,CAAYc,QAAS,SAAAC,GAAC,OAAId,GAASD,IAAnC,eACA,2DAAC,+CAAD,UACI,6EACI,oEAAOgB,KAAK,OAAOC,MAAOd,EAAUe,SAb3C,SAAAH,GAAC,OAAIX,EAAYW,EAAEI,OAAOF,UAYvB,IACmE,qEAAQH,QAXpF,kBAAMR,EAAUc,MAAMC,QAAQlB,GAAYA,EAAWA,EAASxC,MAAM,OAWQ,kBAC/D,oEAAOqD,KAAK,OAAOC,MAAOV,EAAUW,SAb7C,SAAAH,GAAC,OAAIP,EAAYO,EAAEI,OAAOF,UAWrB,IAEiE,qEAAQH,QAXlF,kBAAMJ,EAAUU,MAAMC,QAAQd,GAAYA,EAAWA,EAAS5C,MAAM,OAWM,kBAC7D,2DAAC,6CAAD,CACIkD,QAASD,EAAWC,QACpB3C,OAAQA,EACRoD,SAAU,aACVC,WAAYX,EAAWW,WACvBC,aAAcZ,EAAWY,aACzBC,QAASb,EAAWa,wBAWzC3B,oC,43BCpGA4B,IAjBA,CACXC,SAAU,WACVC,WAAY,aACZC,YAAa,cACbC,QAAS,UACTC,WAAY,aACZC,YAAa,cACbC,QAAS,UACTC,aAAc,eACdC,cAAe,gBACfC,aAAc,eACdC,YAAa,cACbC,YAAa,cACbC,WAAY,aACZC,eAAgB,mB,uICJPC,EAAe,CACxBC,IAAK,GACLC,QAAS,IACTC,OAAQ,IACRC,OAAQ,GACR3E,OAAQ,GACR4E,YAAa,GACbjC,QAAS,GACTW,aAAc,GACdD,WAAY,EACZE,QAAS,IAIAsB,EAAU,SAACC,EAAOtB,GAAY,IAAD,EAC9BV,EAAeU,EAAfV,KAAMiC,EAASvB,EAATuB,KACd,OAAQjC,GACJ,IAAK,WACD,OAAO,2BAAKgC,GAAZ,IAAmBN,IAAKO,EAAKP,MACjC,IAAK,aACD,IAAMxE,EAASgF,YAAYF,EAAMN,KACjC,OAAO,2BACAM,GADP,OACc9E,OAAQA,EAAQ4E,YAAa,IAD3C,4BAC4D,IAD5D,wBAEa,IAFb,6BAGkB,IAHlB,2BAIgB,GAJhB,IAMJ,IAAK,cACD,IAAMxE,EAAU6E,YAAcH,EAAM9E,QACpC,OAAO,2BAAK8E,GAAZ,IAAmBF,YAAaxE,IACpC,IAAK,UACD,IAAMa,EAAMiE,YAAOJ,EAAM9E,OAAQ8E,EAAMH,OAAQG,EAAML,QAASK,EAAMJ,QACpE,OAAO,2BAAKI,GAAZ,IAAmBnC,QAAS1B,IAChC,IAAK,aACD,MAA2BkE,YAAYL,EAAMF,aAArCQ,EAAR,EAAQA,IAAKC,EAAb,EAAaA,UACb,OAAO,2BAAKP,GAAZ,IAAmBxB,aAAc+B,EAAWhC,WAAY+B,IAC5D,IAAK,cACD,IAAME,EAAaC,YAAUT,EAAMF,YAAaG,EAAKS,IAAKT,EAAKrF,IAAKqF,EAAKhC,OACzE,OAAO,2BAAK+B,GAAZ,IAAmBF,YAAaU,IACpC,IAAK,UACD,IAAMG,EAAaC,YAAO,2BAAKX,GAAN,IAAYpC,QAASmC,EAAMnC,WACpD,OAAO,2BAAKmC,GAAZ,IAAmBnC,QAAS8C,IAChC,IAAK,eACD,IAAME,EAAWC,YAAYb,EAAKS,IAAKV,EAAM9E,QAC7C,OAAO,2BAAK8E,GAAZ,IAAmB9E,OAAQ2F,IAC/B,IAAK,gBACD,IAAME,EAAYC,YAAaf,EAAKS,IAAKV,EAAM9E,QAC/C,OAAO,2BAAK8E,GAAZ,IAAmB9E,OAAQ6F,IAC/B,IAAK,eACD,OAAO,2BAAKf,GAAZ,IAAmBL,QAASM,EAAKhC,QACrC,IAAK,cACD,OAAO,2BAAK+B,GAAZ,IAAmBJ,OAAQK,EAAKhC,QACpC,IAAK,cACD,OAAO,2BAAK+B,GAAZ,IAAmBH,OAAQI,EAAKhC,QACpC,IAAK,aACD,OAAO,2BAAK+B,GAAZ,IAAmB9E,OAAQ+E,EAAK/E,SACpC,IAAK,iBACD,OAAO,2BAAK8E,GAAZ,IAAmBvB,QAASwB,EAAKxB,UACrC,QACI,OAAOuB,I,OCnERiB,EAAgBC,wBAAc,IAC5BC,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnBpH,EAAQqH,qBAAWtB,EAASN,GAChC,OACI,cAACwB,EAAcE,SAAf,CAAwBlD,MAAOjE,EAA/B,SACKoH,KAMAzD,EAAW,WAEpB,OADY2D,qBAAWL,K,6WCddf,EAAc,SAACR,GACxB,IACI,IAAI6B,EAAYxG,KAAKC,MAAM0E,GAG3B,OAFKtB,MAAMC,QAAQkD,KAAcA,EAAY,CAACA,IAC9CA,EAAUzF,SAAQ,SAAC0F,EAAGxF,GAAJ,OAAUuF,EAAUvF,GAAGyF,GAAKzF,EAAI,KAC3CuF,EACT,MAAOxD,GACL2D,MAAM,kBAIDvB,EAAgB,SAACjF,GAC1B,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAQL,QACS8G,OAAOC,KAAK1G,EAAO,GAAGI,SACXgB,KAAI,SAACoE,GAC7B,MAAO,CACHmB,MAAOnB,EACPzC,MAAO,GACP6D,SAAU,GACVC,SAAS,EACTC,QAAS,OAKV,IAIF5B,EAAS,SAAClF,GAAuD,IAA/C2E,EAA8C,uDAArC,GAAIoC,EAAiC,uDAAtB,IAAKrC,EAAiB,uDAAR,IACjE,GAAIxB,MAAMC,QAAQnD,KAAd,OAAyBA,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAQL,QAAQ,CACzC,IAAIsB,EAAM,GACN+F,EAAU,GAqBd,OApBAhH,EAAOY,SAAQ,SAAAqG,GACX,IAAQ7G,EAAY6G,EAAZ7G,QACRqG,OAAOC,KAAKtG,GAASQ,SAAQ,SAAAsG,GAAW,IAAD,MAC7BhI,EAAMG,YAAW,UAAA4B,EAAIiG,UAAJ,eAAahI,MAAO,GAAKG,WAAWe,EAAQ8G,IAAW,GACxEC,EAAyB,IAAnB/G,EAAQ8G,KAAiB,UAAAjG,EAAIiG,UAAJ,eAAaC,MAAO,GAAK,EAAlD,UAAsDlG,EAAIiG,UAA1D,aAAsD,EAAaC,IACxD,IAAnB/G,EAAQ8G,KACRF,EAAQE,IAAWF,EAAQE,IAAW,IAAIE,OAAO/H,WAAWe,EAAQ8G,MAExEjG,EAAIiG,GAAU,CAAEhI,MAAKiI,aAG7BV,OAAOC,KAAKM,GAASpG,SAAQ,SAAAsG,GACzBF,EAAQE,GAAQjH,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KACnC,IAAMqB,EAAK6F,EAAaL,EAAQE,GAASvC,EAAQoC,EAAUrC,GAC3DlD,EAAGZ,SAAQ,SAAA1B,GACP+B,EAAIiG,GAAQhI,KAAOA,EACnB+B,EAAIiG,GAAQC,SAEhBlG,EAAIiG,GAAQ1F,GAAKA,KAEdP,IAIFkE,EAAc,SAAC/E,GACxB,IAAIgF,EAAM,EACJC,EAAYjF,EAAQkH,QAAO,SAACC,EAAKrI,GACnC,GAAIA,EAAI2H,QAAS,CACbzB,IACA,IAAIoC,EAAG,eACFtI,EAAIyH,MAAQ,CACT5D,MAAO7D,EAAI6D,MACX6D,SAAU1H,EAAI0H,WAGtB,OAAO,2BAAKW,GAAQC,GAExB,OAAOD,IACR,IACH,MAAO,CACHnC,MACAC,cAIKE,EAAY,SAACX,EAAaY,EAAK9F,EAAKqD,GAC7C,IAAMyE,EAAG,YAAO5C,GAEhB,OADA4C,EAAIhC,GAAK9F,GAAOqD,EACTyE,GAGE9B,EAAS,SAAC,GAAuC,IAArC+B,EAAoC,EAApCA,QAASP,EAA2B,EAA3BA,OAAQ5I,EAAmB,EAAnBA,IAAKqE,EAAc,EAAdA,QACrC+E,EAAWrI,WAAWf,IAAQ,EAChCkJ,EAAM3H,KAAKC,MAAMD,KAAKE,UAAU4C,IAGpC,OAFA6E,EAAIN,GAAQhI,IAAkB,QAAZuI,EAAqBD,EAAIN,GAAQhI,IAAOwI,EAAcrI,WAAWmI,EAAIN,GAAQhI,KAAOwI,EACtGF,EAAIN,GAAQC,IAAkB,QAAZM,EAAqBD,EAAIN,GAAQC,IAAM,EAAM9H,WAAWmI,EAAIN,GAAQC,KAAO,EACtFK,GAGE5B,EAAc,SAACJ,EAAKxF,GAE7B,MADe,sBAAOA,EAAO2H,MAAM,EAAGnC,IAAvB,YAAgCxF,EAAO2H,MAAMnC,EAAM,MAIzDM,EAAe,SAACY,EAAM1G,GAO/B,OANkBA,EAAOsH,QAAO,SAACC,EAAKN,GAClC,OAAIP,EAAKpG,SAAS2G,EAAMV,IACbgB,EAEL,GAAN,mBAAWA,GAAX,CAAgBN,MACjB,KAIMW,EAAc,SAACC,EAAQC,GAChC,OAASD,EAASC,GAAUA,EAAU,KAGpCC,EAAiB,SAACC,GACpB,OAAOA,EAAOV,QAAO,SAACC,EAAKrI,EAAKsG,GAC5B,IAAIgC,EAAM,CACN7I,KAAM,EACNO,OAEJ,OAAY,IAARsG,EAAkB,CAACgC,IACvBA,EAAI7I,KAAOiJ,EAAY1I,EAAK8I,EAAOxC,EAAM,IACnC,GAAN,mBAAW+B,GAAX,CAAgBC,OACjB,KAIMH,EAAe,SAACY,GAAmD,IAA9CtD,EAA6C,uDAApC,GAAIF,EAAgC,uDAAtB,IAAKC,EAAiB,uDAAR,IACnEuD,EAAIhI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KACvB,IAAMgH,EAAMc,EAAItI,OACVuI,EAAM1J,KAAK2J,KAAMhB,EAAM,IAAOxC,GAC9ByD,EAAaH,EAAIN,MAAM,EAAGO,GAAKG,UAC/BC,EAAYL,EAAIN,MAAMR,EAAMe,GAC5BK,EAAkBR,EAAeK,GACjCI,EAAiBT,EAAeO,GAChCG,EAAWF,EAAgBG,WAAU,SAAAC,GAAE,OAAIA,EAAGhK,KAAO+F,KACrDkE,EAAUJ,EAAeE,WAAU,SAAAC,GAAE,OAAIA,EAAGhK,KAAO8F,KAEnDjD,EAAE,sBACAiH,GAAY,EAAIL,EAAWT,MAAMc,GAAY,IAD7C,YAEAG,GAAW,EAAIN,EAAUX,MAAMiB,GAAW,KAElD,OAAOpH,I,sICxILqH,EAAYC,UAAOC,IAAV,8DACN,SAAAC,GAAK,OAAIA,EAAMC,UAAY,IAAM,sBAIpCC,EAASJ,UAAOC,IAAV,6H,QCLNI,EAAWL,UAAOM,SAAV,+CAIRC,EAASP,UAAOQ,OAAV,wEAKNJ,EAASJ,UAAOC,IAAV,4FAMNQ,EAAMT,UAAOC,IAAV,+I,eC0BMS,EAzCH,WACR,MAA0B/G,cAA1B,mBAAO3D,EAAP,KAAcsE,EAAd,KACQoB,EAAS1F,EAAT0F,IAMFiF,EAAY,SAAC5G,GACf,IAGIC,EAHEC,EAAQF,EAAEI,OAAOF,MACjB2G,EAAO7G,EAAEI,OAAOyG,KAIlB5G,EADS,YAAT4G,EACOlG,IAAOU,aACE,WAATwF,EACAlG,IAAOY,YAEPZ,IAAOW,YAElBf,EAAS,CAAE2B,KAAM,CAAEhC,SAASD,UAOhC,OACI,mCACI,eAAC,EAAD,WACI,cAACqG,EAAD,CAAUpG,MAAOyB,EAAKxB,SA3Bb,SAACH,GAClB,IAAM2B,EAAM3B,EAAEI,OAAOF,MACfD,EAAOU,IAAOC,SACpBL,EAAS,CAAE2B,KAAM,CAAEP,OAAO1B,UAwB4B6G,YAAY,oBAC1D,eAACJ,EAAD,WACI,4CAAsB,uBAAOzG,KAAK,OAAO4G,KAAK,UAAU3G,MAAOjE,EAAM2F,QAASzB,SAAUyG,IACxF,2CAAqB,uBAAO3G,KAAK,OAAO4G,KAAK,SAAS3G,MAAOjE,EAAM4F,OAAQ1B,SAAUyG,IACrF,yCAAmB,uBAAO3G,KAAK,OAAO4G,KAAK,SAAS3G,MAAOjE,EAAM6F,OAAQ3B,SAAUyG,OAEvF,cAACJ,EAAD,CAAQzG,QAdC,WACjBQ,EAAS,CAAEN,KAAMU,IAAOE,aACxBN,EAAS,CAAEN,KAAMU,IAAOG,cACxBP,EAAS,CAAEN,KAAMU,IAAOI,WAWhB,uBClCVgG,EAAkB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACvB,EAAgBpH,cAAT3D,EAAP,oBACA,OACI,mCACI,yBAAQ4K,KAAK,QAAQ1G,SAAU6G,EAA/B,UACI,wBAAQ9G,MAAM,GAAd,oBAEIjE,EAAM8F,YAAYxD,KAAI,SAAA8F,GAAM,OAAI,wBAAQnE,MAAOmE,EAAOP,MAAtB,SAA8BO,EAAOP,iBAMnFmD,EAAO,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,OAAQpD,EAA4B,EAA5BA,MAAO5D,EAAqB,EAArBA,MAAO8D,EAAc,EAAdA,QAClC,EAA0BpE,cAA1B,mBAAO3D,EAAP,KAAcsE,EAAd,KACA,EAAgCvB,oBAAS,GAAzC,mBAAOmI,EAAP,KAAkBC,EAAlB,KACMJ,EAAe,SAAChH,GAClB,IAAIE,EAAQF,EAAEI,OAAOF,MACf2G,EAAO7G,EAAEI,OAAOyG,KAET,YAATA,IACA3G,GAAS8D,GAEA,aAAT6C,IAEIO,EADU,OAAVlH,GAA4B,OAAVA,GAMlBK,EADU,QAAVL,GAA6B,QAAVA,EACV,CAAED,KAAMU,IAAOM,YAAaiB,KAAM,CAAES,IAAKuE,EAAQrK,IAAK,QAASqD,MAAOvE,KAAK0L,MAAMpL,EAAM6D,QAAQgE,GAAOzH,IAAMJ,EAAM6D,QAAQgE,GAAOQ,OAEjI,CAAErE,KAAMU,IAAOM,YAAaiB,KAAM,CAAES,IAAKuE,EAAQrK,IAAK,QAASqD,MAAO,OAGvFK,EAAS,CAAEN,KAAMU,IAAOM,YAAaiB,KAAM,CAAES,IAAKuE,EAAQrK,IAAKgK,EAAM3G,MAAOA,KAC9D,aAAT2G,GAAgC,UAATA,IAAqB3G,GAC7CK,EAAS,CAAEN,KAAMU,IAAOM,YAAaiB,KAAM,CAAES,IAAKuE,EAAQrK,IAAK,UAAWqD,OAAO,MAGzF,OACI,sBAAKoH,MAAO,CAAEC,QAAS,OAAQC,cAAe,MAAOC,eAAgB,gBAAiBC,MAAO,MAAOC,OAAQ,QAA5G,UACI,8BACI,uBAAO1H,KAAK,WAAWE,SAAU6G,EAAcH,KAAK,UAAU7C,QAASA,MAE3E,sBAAKsD,MAAO,CAAEI,MAAO,OAArB,UACI,gCAAQ5D,IADZ,UAGA,qBAAKwD,MAAO,CAAEI,MAAO,OAArB,SACI,yBAAQb,KAAK,WAAW1G,SAAU6G,EAAlC,UACI,wBAAQ9G,MAAM,GAAd,oBACA,wBAAQA,MAAM,IAAd,qBACA,wBAAQA,MAAM,KAAd,6BACA,wBAAQA,MAAM,IAAd,kBACA,wBAAQA,MAAM,KAAd,0BACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,mBACA,wBAAQA,MAAM,KAAd,0BACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,MAAd,8BACA,wBAAQA,MAAM,MAAd,2BACA,wBAAQA,MAAM,OAAd,4BAGR,qBAAKoH,MAAO,CAAEI,MAAO,OAArB,SACMP,EAOG,cAAC,EAAD,CAAiBH,aAAcA,IAPtB,uBACV/G,KAAK,OACL6G,YAAY,QACZD,KAAK,QACL3G,MAAOA,EACPC,SAAU6G,EACVY,aAAa,cA2BlBC,EArBC,WACZ,MAA0BjI,cAA1B,mBAAO3D,EAAP,KAAcsE,EAAd,KAIA,OACI,qCACI,0CACA,sBAAKuH,UAAU,UAAf,UAGQ7L,EAAM8F,YAAYxD,KAAI,SAAC8F,EAAQ1B,GAAT,OAAiB,cAAC,EAAD,CAAMmB,MAAOO,EAAOP,MAAOC,SAAUM,EAAON,SAAU7D,MAAOmE,EAAOnE,MAAO8D,QAASK,EAAOL,QAAmBkD,OAAQvE,GAAbA,MAGpJ,0BAEJ,cAAC6D,EAAD,CAAQzG,QAdI,WAChBQ,EAAS,CAAEN,KAAMU,IAAOK,cAapB,wB,QChFG+G,EAfH,WACR,MAA0BnI,cAA1B,mBAAO3D,EAAP,KAAcsE,EAAd,KACA,OACI,mCACI,cAACyH,EAAA,EAAD,CACIlI,QAAS7D,EAAM6D,QACf3C,OAAQlB,EAAMkB,OACdoD,SAAUA,EACVC,WAAYvE,EAAMuE,WAClBC,aAAcxE,EAAMwE,aACpBC,QAASzE,EAAMyE,a,eCVzBuH,EAAW,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAChB,OACI,uBAAOZ,MAAO,CAAEI,MAAO,QAASS,UAAW,QAA3C,SAGQD,EAAY3J,KAAI,SAAC6J,GACb,OACI,+BACI,6BAAKA,EAAW/L,MAChB,+BAAKV,KAAK0L,MAAMe,EAAWtM,MAA3B,gBAWtBuM,EAAiB,SAAC,GAAe,IAAbvE,EAAY,EAAZA,MACtB,EAAuB9E,mBAAS,IAAhC,mBAAOsJ,EAAP,KAAaC,EAAb,KACA,EAAsCvJ,mBAAS,IAA/C,mBAAOkJ,EAAP,KAAoBM,EAApB,KACMrD,EAASmD,EAAK1L,MAAM,QAAQyH,QAAO,SAAAoE,GAAC,OAAIA,KAAGlK,KAAI,SAAAkK,GAAC,OAAIA,EAAE7L,MAAM,KAAKiC,KAAK,OAe5E,OACI,mCACI,sBAAKyI,MAAO,CAAEK,OAAQ,cAAtB,UACI,6BAAK7D,IACL,uBAAO7D,KAAK,OAAOE,SAAU,SAAAH,GAAC,OAAIuI,EAAOvI,EAAEI,OAAOF,UAClD,wBAAQH,QAnBL,WACX,IAAM2I,EAAMvD,EAAOV,QAAO,SAACC,EAAKrI,EAAKsG,GACjC,IAAIgC,EAAM,CACN7I,KAAM,EACNO,OAEJ,OAAY,IAARsG,EAAkB,CAACgC,IACvBA,EAAI7I,KAAOiJ,YAAY1I,EAAK8I,EAAOxC,EAAM,IACnC,GAAN,mBAAW+B,GAAX,CAAgBC,OACjB,IAEH6D,EAAeE,IAQP,kBACA,cAAC,EAAD,CAAUR,YAAaA,UA2BxBS,EApBC,WACZ,MAAuB3J,mBAAS,IAAhC,mBAAO4J,EAAP,KAAaC,EAAb,KAMA,OACI,gCACI,iDACA,wBAAQ9I,QARD,WACX,IAAM+D,EAAQgF,OAAO,mBAChBhF,GACL+E,EAAO,GAAD,mBAAKD,GAAL,CAAW,CAAEG,QAASV,EAAgBvE,aAKxC,iBACA,qBAAKwD,MAAO,CAAEC,QAAS,OAAQG,MAAO,MAAOsB,SAAU,QAAvD,SACKJ,EAAKrK,KAAI,SAAA0K,GACN,IAAQF,EAAmBE,EAAnBF,QAASjF,EAAUmF,EAAVnF,MACjB,OAAO,cAACiF,EAAD,CAASjF,MAAOA,aCjErCoF,EAAiBjD,UAAOC,IAAV,gIASdiD,EAAelD,UAAOC,IAAV,4BCiBHkD,EAzBD,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACb,EAA0BzJ,cAA1B,mBAAO3D,EAAP,KAAcsE,EAAd,KACMpD,EAASlB,EAAMkB,OAAOkH,QAAO,SAACD,EAAOzB,GACvC,OAAO1G,EAAMyE,QAAQ4I,QAAQ3G,IAAQ,KAEzC,OACI,mCACI,cAACuG,EAAD,UACI,eAACC,EAAD,WACI,wBAAQpJ,QAASsJ,EAAjB,mBACA,cAACrB,EAAA,EAAD,CACIlI,QAAS7D,EAAM6D,QACf3C,OAAQA,EACRoD,SAAUA,EACVC,WAAYvE,EAAMuE,WAClBC,aAAcxE,EAAMwE,aACpBC,QAASzE,EAAMyE,kB,QChBjC6I,EAAgB,SAACnF,EAAOoF,EAAMC,GAChC,OAAO1E,YAAYX,EAAMoF,GAAOpF,EAAMqF,KAEpCC,EAAW,SAACvM,EAAQ8C,GAItB,OAHgB9C,EAAOC,MAAK,SAACC,EAAGC,GAC5B,OAAOd,WAAWc,EAAEC,QAAQ0C,IAASzD,WAAWa,EAAEE,QAAQ0C,OAE/C6E,MAAM,EAAG,IAEtB6E,EAAe,WAAa,IAAD,uBAARvE,EAAQ,yBAARA,EAAQ,gBAC7B,OAAOA,EAAIX,QAAO,SAACC,EAAKrI,EAAKsG,GACzB,IAAMiH,GAAYjH,EAAM,GAAK,EACvBkH,EAAsB,IAAbD,EAAiB,EAAIA,EAQpC,OAPIlF,EAAIrI,EAAIyB,OACR4G,EAAIrI,EAAIyB,MAAMyE,KAAO,EACrBmC,EAAIrI,EAAIyB,MAAM+L,QAAUA,EACxBnF,EAAIrI,EAAIyB,MAAMgM,EAAEC,KAAKF,IAErBnF,EAAIrI,EAAIyB,MAAQ,CAAEyE,IAAK,EAAGsH,OAAQA,EAAQC,EAAG,CAACF,GAAW/C,KAAMxK,EAAIyB,MAEhE4G,IACR,KAGDsF,EAAa,SAACC,GAEhB,OADgBrG,OAAOuB,OAAO8E,GACf7M,MAAK,SAAUC,EAAGC,GAC7B,OAAOA,EAAEiF,IAAMlF,EAAEkF,KAAOlF,EAAEwM,OAASvM,EAAEuM,UACtC/E,MAAM,EAAG,IAkCVoF,EAAO,SAAC/M,GACV,IAEMgF,EAnCS,SAAUhF,GAUzB,OATAA,EAAOY,SAAQ,SAACqG,EAAOzB,GACnBxF,EAAOwF,GAAKpF,QAAQ4M,oBAAsBZ,EAAcpM,EAAOwF,GAAKpF,QAAS,SAAU,YACvFJ,EAAOwF,GAAKpF,QAAQ6M,wBAA0Bb,EAAcpM,EAAOwF,GAAKpF,QAAS,WAAY,gBAC7FJ,EAAOwF,GAAKpF,QAAQ8M,qBAAuBd,EAAcpM,EAAOwF,GAAKpF,QAAS,WAAY,cAC1FJ,EAAOwF,GAAKpF,QAAQ+M,iBAAmBf,EAAcpM,EAAOwF,GAAKpF,QAAS,WAAY,gBACtFJ,EAAOwF,GAAKpF,QAAQgN,WAAahB,EAAcpM,EAAOwF,GAAKpF,QAAS,MAAO,cAC3EJ,EAAOwF,GAAKpF,QAAQiN,YAAcjB,EAAcpM,EAAOwF,GAAKpF,QAAS,OAAQ,iBAG1EJ,EAyBasN,CAtBH,SAACtN,GAOlB,OANYA,EAAOkH,QAAO,SAACD,GAIvB,OAAO,KAgBYsG,CADR1N,KAAKC,MAAMD,KAAKE,UAAUC,MAKnCwN,EAAMjB,EAASvH,EAAa,OAC5ByI,EAAOlB,EAASvH,EAAa,QAE7B0I,EAAanB,EAASvH,EAAa,eACnC2I,EAAcpB,EAASvH,EAAa,eACpC4I,EAASrB,EAASvH,EAAa,UAC/B6I,EAAStB,EAASvH,EAAa,OAG/B8I,EAAetB,EAAY,WAAZ,cACdgB,GADc,mBAEdC,GAFc,YAGdC,GAHc,YAIdC,GAJc,YAKdC,GALc,YAMdC,KAEDE,EAAclB,EAAWiB,GAGzBE,EAAazB,EAASvH,EAAa,cACnCiJ,EAAa1B,EAASvH,EAAa,cAEnCkJ,EAAe1B,EAAY,WAAZ,cACdwB,GADc,mBAEdC,KAEDE,EAAWtB,EAAWqB,GAoBtBE,EAAO7B,EAASvH,EAAa,UAC7BqJ,EAAQ9B,EAASvH,EAAa,WAC9BsJ,EAAS/B,EAASvH,EAAa,gBAC/BuJ,EAAY/B,EAAY,WAAZ,cACX4B,GADW,mBAEXC,GAFW,YAGXC,KAEDE,EAAW3B,EAAW0B,GAGtBE,EAAOlC,EAASvH,EAAa,UAC7B0J,EAAQnC,EAASvH,EAAa,WAC9B2J,EAASpC,EAASvH,EAAa,gBAC/B4J,EAAYpC,EAAY,WAAZ,cACXiC,GADW,mBAEXC,GAFW,YAGXC,KAEDE,EAAWhC,EAAW+B,GAEtBE,EAAevC,EAASvH,EAAa,uBACrC+J,EAAoBvC,EAAY,WAAZ,cACnBsC,IAEDE,EAAmBnC,EAAWkC,GAE9BE,EAAe1C,EAASvH,EAAa,oBACrCkK,EAAoB1C,EAAY,WAAZ,cACnByC,IAEDE,EAAmBtC,EAAWqC,GAE9BE,EAAkB7C,EAASvH,EAAa,iBACxCqK,EAAuB7C,EAAY,WAAZ,cACtB4C,IAEDE,EAAsBzC,EAAWwC,GAEjCE,EAAgBhD,EAASvH,EAAa,oBACtCwK,EAAqBhD,EAAY,WAAZ,cACpB+C,IAEDE,EAAoB5C,EAAW2C,GAE/BpC,EAAab,EAASvH,EAAa,cACnC0K,EAAkBlD,EAAY,WAAZ,cACjBY,IAEDuC,EAAiB9C,EAAW6C,GAE5BrC,EAAcd,EAASvH,EAAa,eACpC4K,EAAmBpD,EAAY,WAAZ,cAClBa,IAEDwC,EAAkBhD,EAAW+C,GAG7BE,EAAavD,EAASvH,EAAa,OACnC+K,EAAgBxD,EAASvH,EAAa,UACtCgL,EAAoBzD,EAASvH,EAAa,cAC1CiL,EAAgB1D,EAASvH,EAAa,UACtCkL,EAAoB3D,EAASvH,EAAa,cAC1CmL,EAAsB5D,EAASvH,EAAa,YAC5CoL,EAAkB5D,EAAY,WAAZ,cACjBsD,GADiB,mBAEjBC,GAFiB,YAGjBC,GAHiB,YAIjBC,GAJiB,YAKjBC,GALiB,YAMjBC,KAEDE,GAAiBxD,EAAWuD,GAG5BE,GAAgB/D,EAASvH,EAAa,UACtCuL,GAAoBhE,EAASvH,EAAa,cAC1CwL,GAAgBjE,EAASvH,EAAa,UACtCyL,GAAoBlE,EAASvH,EAAa,cAC1C0L,GAAsBnE,EAASvH,EAAa,YAC5C2L,GAAkBnE,EAAY,WAAZ,cACjB8D,IADiB,mBAEjBC,IAFiB,YAGjBC,IAHiB,YAIjBC,IAJiB,YAKjBC,MAEDE,GAAiB/D,EAAW8D,IAE5BE,GAAWrE,EAAY,WAAZ,cACVgB,GADU,mBAEVC,GAFU,YAGVC,GAHU,YAIVC,GAJU,YAKVK,GALU,YAMVC,GANU,YAOVG,GAPU,YAQVC,GARU,YASVC,GATU,YAUVG,GAVU,YAWVC,GAXU,YAYVC,GAZU,YAaVG,GAbU,YAcVG,GAdU,YAeVG,GAfU,YAgBVG,GAhBU,YAiBVnC,GAjBU,YAkBVC,GAlBU,YAmBVyC,GAnBU,YAoBVC,GApBU,YAqBVC,GArBU,YAsBVC,GAtBU,YAuBVC,GAvBU,YAwBVC,GAxBU,YAyBVG,IAzBU,YA0BVC,IA1BU,YA2BVC,IA3BU,YA4BVC,IA5BU,YA6BVC,MAGP,MAAO,CACH3C,cACAI,WACAK,WACAK,WACAG,mBACAG,mBACAG,sBACAG,oBACAE,iBACAE,kBACAQ,kBACAO,kBACAE,UAdcjE,EAAWgE,MAqB3BjG,EAAM,SAAC,GAAc,IAAZmG,EAAW,EAAXA,KACX,OACI,wBAAOC,OAAO,IAAd,UACI,gCACI,+BACI,sCACA,qCACA,+CAGR,gCACKD,EAAK3P,KAAI,SAAC6P,GACP,OACI,mCACI,+BACI,6BAAKA,EAAIvH,OACT,6BAAKuH,EAAI7L,MACT,6BAAK6L,EAAIvE,uBAyG1BwE,EAhGE,WACb,MAAmCrP,oBAAS,GAA5C,mBAAOsP,EAAP,KAAqBC,EAArB,KACA,EAAgB3O,cAAT3D,EAAP,oBACA,EAcIiO,EAAKjO,EAAMkB,QAbX+N,EADJ,EACIA,YACAI,EAFJ,EAEIA,SACAK,EAHJ,EAGIA,SACAK,EAJJ,EAIIA,SACAiC,EALJ,EAKIA,UACA9B,EANJ,EAMIA,iBACAG,EAPJ,EAOIA,iBACAG,EARJ,EAQIA,oBACAG,EATJ,EASIA,kBACAE,EAVJ,EAUIA,eACAE,EAXJ,EAWIA,gBACAQ,EAZJ,EAYIA,eACAO,EAbJ,EAaIA,eAGJ,OACI,qCACI,wBAAQhO,QAAS,SAAAC,GAAC,OAAIuO,GAAYD,IAAlC,sBAEIA,GAAiB,cAAC,IAAD,UACb,eAAC,IAAD,WACI,cAAC,IAAD,CAAYvO,QAAS,SAAAC,GAAC,OAAIuO,GAAYD,IAAtC,eACA,eAAC,IAAD,WACI,gCACI,yCACA,cAAC,EAAD,CAAKJ,KAAMhD,OAEf,gCACI,yCACA,cAAC,EAAD,CAAKgD,KAAM5C,OAEf,gCACI,6CACA,cAAC,EAAD,CAAK4C,KAAMvC,OAEf,gCACI,6CACA,cAAC,EAAD,CAAKuC,KAAMlC,OAIf,gCACI,mDACA,cAAC,EAAD,CAAKkC,KAAM/B,OAEf,gCACI,wDACA,cAAC,EAAD,CAAK+B,KAAM5B,OAGf,gCACI,0DACA,cAAC,EAAD,CAAK4B,KAAMtB,OAGf,gCACI,iDACA,cAAC,EAAD,CAAKsB,KAAMzB,OAGf,gCACI,gDACA,cAAC,EAAD,CAAKyB,KAAMpB,OAGf,gCACI,iDACA,cAAC,EAAD,CAAKoB,KAAMlB,OAGf,gCACI,qCACA,cAAC,EAAD,CAAKkB,KAAMV,OAGf,gCACI,qCACA,cAAC,EAAD,CAAKU,KAAMH,OAEf,gCACI,8CACA,cAAC,EAAD,CAAKG,KAAMD,mB,SCjV5BO,MAxBf,WACI,MAAgB5O,cAAT3D,EAAP,oBACA,EAAoC+C,oBAAS,GAA7C,mBAAOyP,EAAP,KAAoBC,EAApB,KACMrF,EAAY,WACdqF,GAAcD,IAGlB,OACI,qCACI,cAAC,EAAD,IACCxS,EAAMkB,QAAUlB,EAAMkB,OAAOL,OAAS,GAAK,cAAC,EAAD,IAC3Cb,EAAMkB,QAAUlB,EAAMkB,OAAOL,OAAS,GAAK,iDAAoBb,EAAMuE,cACrEvE,EAAMyE,SAAWzE,EAAMyE,QAAQ5D,OAAS,GAAK,wBAAQiD,QAASsJ,EAAjB,qBAC7CpN,EAAMkB,QAAUlB,EAAMkB,OAAOL,OAAS,GAAK,cAAC,EAAD,IAC3Cb,EAAMkB,QAAUlB,EAAMkB,OAAOL,OAAS,GAAK,cAAC,IAAD,IAC3Cb,EAAMkB,QAAUlB,EAAMkB,OAAOL,OAAS,GAAK,cAAC,EAAD,IAC3C2R,GAAe,cAAC,EAAD,CAAOpF,UAAWA,IAClC,cAAC,EAAD,Q,sGCjBZ,SAASsF,KAGL,IAFA,IACIC,EAAQ,IACHlS,EAAI,EAAGA,EAAI,EAAGA,IACnBkS,GAHU,mBAGOjT,KAAKkT,MAAsB,GAAhBlT,KAAKmT,WAErC,OAAOF,EAEX,I,YAsBeG,GAtBD,SAAC,GAA8C,IAAD,IAA3C7M,YAA2C,MAApC,GAAoC,MAAhC8M,gBAAgC,MAArB,GAAqB,MAAjBC,aAAiB,MAAT,GAAS,EAClDC,EAAOD,EAAQA,EAAMrS,MAAM,KAAK2B,KAAI,SAAAkK,GAAC,OAAI0G,SAAS1G,MAAM,GAC9D,OACI,mCAEQvG,EAAKpF,OAAS,eAACsS,GAAA,EAAD,CAAW1H,MAAO,KAAM2H,OAAQ,IAAMnN,KAAMA,EAA5C,UAEV,cAACoN,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,GAAA,EAAD,CAAOC,QAAQ,SACf,cAACC,GAAA,EAAD,CAAOC,OAAQT,IACf,cAACU,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IAEIb,EAASzQ,KAAI,SAACuR,GAAD,OAAU,cAACC,GAAA,EAAD,CAAM9P,KAAK,WAAWwP,QAASK,EAAME,OAAQrB,aAG7D,Q,qBCrBhBsB,GAVD,wCAAG,WAAOC,EAAIC,GAAX,iBAAA9S,EAAA,sEAEH+S,EAAWD,GAAS,MAFjB,SAGSE,KAAMC,IAAN,2BAA8BF,EAA9B,YAA0CF,IAHnD,cAGHnU,EAHG,yBAIFA,GAJE,gCAMT4H,MAAM,kBANG,yDAAH,wDC4DC4M,GA5DK,WAChB,MAAwBvR,mBAAS,IAAjC,mBAAOkD,EAAP,KAAasO,EAAb,KACA,EAAiCxR,mBAAS,IAA1C,mBAAOyR,EAAP,KAAkBC,EAAlB,KACA,EAA4B1R,mBAAS,IAArC,mBAAOgQ,EAAP,KAAiB2B,EAAjB,KACA,EAAgC3R,mBAAS,GAAzC,mBAAO4R,EAAP,KA0CA,MAAO,CACHC,YA3CJ,KA4CIL,UACAE,cACAC,UACAG,YA9CgB,SAACC,EAAI9Q,EAAMkH,GAC3B,IAAM6J,EAAY,YAAOP,GACnBQ,EAAUF,EAAGnU,MAAM,MAAMkI,MAAM,GAC/BoL,EAAE,YAAOlB,GACXtS,EAAI,EACR,EAAwBuU,EAAQ,GAAGrU,MAAM,KAAlCsU,EAAP,oBACAA,EAAgBA,EAAcC,QAAQ,KAAM,IAAIC,OAChDH,EAAQlT,SAAQ,SAAC1B,EAAK8T,GAClB,KAAIhB,SAASyB,GAAY,GAAKT,EAAQhB,SAASyB,IAAa,GAA5D,CACA,MAA4BvU,EAAIO,MAAM,KAAtC,mBAAKyU,EAAL,KAAWC,EAAX,KAEA,GADAA,EADA,KAEoB,kBAATD,GAAqC,kBAATC,EAAmB,CACtDD,EAAOA,EAAKF,QAAQ,KAAM,IAAIC,OAC9BE,EAAOA,EAAKH,QAAQ,KAAM,IAAIC,OAC9B,MAA2BC,EAAKzU,MAAM,KAAtC,mBAAO2U,EAAP,KAAYC,EAAZ,KAAmB1B,EAAnB,KACKkB,EAAatU,KACdsU,EAAatU,GAAK,CACdmK,KAAK,GAAD,OAAK0K,EAAL,YAAYC,KAGxB,IAAMrB,EAAQhJ,EAAYlH,EAAO6P,EAE7BkB,EAAatU,GAAGyT,GADhBhJ,EACyBtL,QAASyV,EAAOJ,GAAiBA,EAAiB,KAAKO,QAAQ,GAE/DH,EAExBpB,EAAGzS,SAAS0S,IACbD,EAAGnG,KAAKoG,GAEZzT,SAGRgU,EAAYM,GACZL,EAAQT,IAcRwB,UAZc,WACd,IAAM/M,EAAG,YAAOqK,GAChBrK,EAAIgN,MACJhB,EAAQhM,IAURqK,WACA4B,WACAH,YACAvO,S,SCxDF0P,GAAiB3L,UAAOC,IAAV,8HAQd2L,GAAY5L,UAAOC,IAAV,wDCVT4L,GAAa,SAACC,EAAS5B,GAA2B,IAApB6B,EAAmB,uDAAP,GAC5C,OAAOD,EAAQtN,QAAO,SAACC,EAAKuN,GACxB,IAAMC,EAAMhQ,GAAK+P,GAAQ9B,GACzB,IAAK+B,EAAK,OAAOxN,EACjB,IAAMC,EAAM,CACRiF,SAAUoI,EAAU3N,QAAO,SAAA8N,GAAI,OAAIA,EAAK,KAAOF,KAAQ,GACvDA,SACAC,OAEJ,MAAM,GAAN,mBAAWxN,GAAX,CAAgBC,MACjB,IAAIvH,MAAK,SAACC,EAAGC,GAAJ,OAAWA,EAAE4U,IAAM7U,EAAE6U,Q,SCV/BE,GAAoBnM,UAAOC,IAAV,ycCoBRmM,GAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAYC,mBAAQ,kBAAMF,EAAOxN,QAAQU,YAAW,IAC1D,OACI,mCACI,cAAC4M,GAAD,UAEQG,EAAUhU,KAAI,SAACkU,GACX,IAAM3K,EAAsB,IAAV2K,EAAc,UAAYA,GAAS,EAAI,OAAS,MAClE,OACI,qBAAK3K,UAAS,uBAAkBA,GAAhC,SAA8C2K,YCa3DC,GAtBH,SAAC,GAA2C,IAAzCX,EAAwC,EAAxCA,QAAS5B,EAA+B,EAA/BA,MAAOwC,EAAwB,EAAxBA,OAAQX,EAAgB,EAAhBA,UAC7B9D,EAAO4D,GAAWC,EAAS5B,EAAO6B,GACxC,OACI,mCACK9D,EAAK3P,KAAI,SAAC6P,GACP,OACI,mCACI,+BACI,6BAAKA,EAAI6D,SACT,6BAAK7D,EAAI8D,MAELS,GAAW,6BAAI,cAAC,GAAD,CAAUL,OAAQlE,EAAIxE,SAAS,kBCK/D7B,GAjBH,SAAC5B,GACT,OACI,kCACI,kCACI,yCACA,wCAEIA,EAAMwM,QAAW,6CAGzB,gCACI,cAAC,GAAD,gBAASxM,UCqBVyM,GA1BD,WACV,IAAMb,EAAUnO,OAAOC,KAAK3B,IACtB8P,EAAYpO,OAAOiP,QLKR,SAACd,GAClB,IAAIhW,EAAM,GAQV,OAPAsE,MAAMyS,KAAK,CAAEhW,OAAQ,KAAM,SAAC2G,EAAG0M,GAC3B,IAAM4C,EAAMjB,GAAWC,EAAS5B,GAChC4B,EAAQhU,SAAQ,SAACkU,GACb,IAAMtN,EAAOoO,EAAIlN,WAAU,SAAA4C,GAAC,OAAIA,EAAEwJ,SAAWA,KAAU,EACvDlW,EAAIkW,IAAWlW,EAAIkW,IAAW,IAAI1N,OAAOI,SAG1C5I,EKd0BiX,CAAajB,IAE9C,OACI,mCACI,cAACH,GAAD,UACKvR,MAAMyS,KAAK,CAAEhW,OAAQ,KAAM,SAAC2G,EAAG0M,GAC5B,OACI,eAAC0B,GAAD,WACI,6BAAK1B,IACL,cAAC,GAAD,CACI4B,QAASA,EACT5B,MAAOA,EACP6B,UAAWA,EACXW,OAAkB,KAAVxC,eC8HzB8C,GA/IA,WAAO,IAAD,EACjB,EAWI1C,KAVAM,EADJ,EACIA,YACAL,EAFJ,EAEIA,QACAE,EAHJ,EAGIA,YACAC,EAJJ,EAIIA,QACAG,EALJ,EAKIA,YACAY,EANJ,EAMIA,UACA1C,EAPJ,EAOIA,SACA4B,EARJ,EAQIA,SACAH,EATJ,EASIA,UACAvO,EAVJ,EAUIA,KAEJ,EAAwClD,mBAAS,IAAjD,mBAAOkU,EAAP,KAAqBC,EAArB,KACA,EAA0BnU,mBAAS,cAAnC,mBAAOiQ,EAAP,KAAcmE,EAAd,KACA,EAAgCpU,oBAAS,GAAzC,mBAAOmI,EAAP,KAAkBC,EAAlB,KACA,EAA0BpI,mBAAS,IAAnC,mBAAOmR,EAAP,KAAckD,EAAd,KACA,EAAsCrU,mBAAS,IAA/C,mBAAOsU,EAAP,KAAoBC,EAApB,KAwBMC,EAAW,wCAAG,WAAOxT,GAAP,iBAAA3C,EAAA,yDACVhB,EAAM2D,EAAEI,OAAOF,MADL,iEAIK+P,GAASiD,EAAc7W,GAJ5B,QAMhB,QAFMoX,EAJU,cAMhB,IAAIA,OAAJ,EAAIA,EAAQvR,OACRqR,EAAeE,EAAOvR,MAE1BmR,EAAShX,GATO,2CAAH,sDAWXqX,EAAY,wCAAG,WAAOzT,EAAMD,GAAb,iBAAA3C,EAAA,yDACXhB,EAAM2D,EAAEI,OAAOF,MADJ,iEAGI+P,GAAS5T,EAAK4D,GAHlB,QAKjB,QAFMwT,EAHW,cAKjB,IAAIA,OAAJ,EAAIA,EAAQvR,QACI,SAARjC,EACAuQ,EAAQiD,EAAOvR,MAEfqR,EAAeE,EAAOvR,OAG9BiR,EAAgB9W,GAZC,2CAAH,wDAoBZsX,EAAW,WACb,OAAIxM,GACA2J,EAAY5O,EAAM,MAAOiF,QACrBmM,GACAxC,EAAYwC,EAAanD,EAAOhJ,KAIjC2J,EAAY5O,EAAM,GAAIiF,IAEjC,OACI,qCACI,cAAC,GAAD,IACA,uBAAOlH,KAAK,OAAOE,SArDR,SAACH,GAChBA,EAAE4T,iBACF,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAP,wCAAgB,WAAO/T,GAAP,eAAA3C,EAAA,sDACN2W,EAAQhU,EAAEI,OAAOqT,OACvBjD,EAAQwD,GAFI,2CAAhB,sDAIAH,EAAOI,WAAWjU,EAAEI,OAAO8T,MAAM,OA+C7B,uBAAOjU,KAAK,WAAWE,SAhER,SAACH,GACpB,IAAMmU,EAAYnU,EAAEI,OAAO4D,QAE3BoP,EADsBe,EAAY,WAAa,cAE/C/M,EAAW+M,MAyDX,WAKI,0BAAOlU,KAAK,QAAZ,qBAAwB,UAAxB,sBAAwC2Q,GAAxC,0BAtEa,SAAC5Q,GAClB,IAAM3D,EAAM2D,EAAEI,OAAOF,MACrB2Q,EAAYxU,MAoER,IACA,uBAAO4D,KAAK,OAAOC,MAAO+O,EAAO9O,SA7DhB,SAACH,GACtB,IAAM3D,EAAM2D,EAAEI,OAAOF,MACrBkT,EAAS/W,MA4DL,yBAAQ8D,SAAUuT,EAAaU,KAAK,KAAM,OAA1C,UACI,wBAAQlU,MAAM,GAAd,oBACCG,MAAMyS,KAAK,CAAEhW,OAAQ,KAAM,SAAC2G,EAAGd,GAC5B,OACI,wBAAQzC,MAAOyC,EAAf,SAAqBA,UAIjC,wBAAQ5C,QAAS4T,EAAjB,kBAGKxM,EACG,qCACI,yBAAQhH,SAAUqT,EAAlB,UACI,wBAAQtT,MAAM,GAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,KAAd,0BACA,wBAAQA,MAAM,OAAd,sBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,uBAWJ,wBAAQH,QAAS4T,EAAjB,wBAzBK,KA+BjB,wBAAQ5T,QAAS2R,EAAjB,yBACA,wBAAQ3R,QAnEG,WACfyQ,EAAQ,IACRE,EAAY,IACZC,EAAQ,KAgEJ,uBACA,cAAC,GAAD,CACIzO,KAAMuO,EACNzB,SAAUA,EACVC,MAAOA,Q,UC5IjBjJ,GAAYsB,UAAMpB,IAAT,mV,qBCITmO,GAAU,CACZ,CACIxN,KAAM,OACNyN,SAAU,SAAAlG,GAAG,OAAIA,EAAImG,MAAM,GAAGC,UAErC,CACC3N,KAAM,QACAyN,SAAU,SAAAlG,GAAG,OAAIA,EAAImG,MAAM,GAAGE,SAElC,CACI5N,KAAM,SACNyN,SAAU,SAAAlG,GAAG,OAAIA,EAAImG,MAAM,GAAGG,WAElC,CACI7N,KAAM,OACNyN,SAAU,SAAAlG,GAAG,OAAIA,EAAImG,MAAM,GAAGI,WAElC,CACI9N,KAAM,QACNyN,SAAU,SAAAlG,GAAG,OAAIA,EAAImG,MAAM,GAAGK,YAErC,CACO/N,KAAM,OACNyN,SAAU,SAAAlG,GAAG,OAAIA,EAAImG,MAAM,GAAGzY,OAGrC,CACO+K,KAAM,OACNyN,SAAU,SAAAlG,GAAG,OAAIA,EAAImG,MAAM,GAAGM,QAErC,CACOhO,KAAM,MACNyN,SAAU,SAAAlG,GAAG,OAAIA,EAAImG,MAAM,GAAGO,QAErC,CACOjO,KAAM,WACNyN,SAAU,SAAAlG,GAAG,OAAIA,EAAImG,MAAM,GAAGQ,cAIhCC,GAAuB,CAC3B,CACEC,KAAM,SAAA7G,GAAG,OAAIA,EAAImG,MAAM,GAAGI,SAAWvG,EAAImG,MAAM,GAAGK,WAClDtN,MAAO,CACL4N,gBAAiB,WACjBtG,MAAO,QACP,UAAW,CACTuG,OAAQ,cAwCVC,GAAO,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,OAAOnT,EAAQ,EAARA,KACrB,EAA4BlD,oBAAS,GAArC,mBAAOsW,EAAP,KAAiBC,EAAjB,KACA,EAnCqB,SAACrT,GACtB,IAAIsT,EAAI,EACJC,EAAO,EACPC,EAAG,EAYP,OAXAxT,EAAKnE,SAAQ,SAAAgT,GACTA,EAAGwD,MAAM,GAAGI,SAAW5D,EAAGwD,MAAM,GAAGK,UACrCa,IAEO1E,EAAGwD,MAAM,GAAGI,SAAW5D,EAAGwD,MAAM,GAAGK,UAC1CY,IAGAE,OAGK,CACNF,KAAGC,OAAKC,MAmBYC,CAAczT,EAAKmT,IAAjCG,EAAP,EAAOA,GAAGC,EAAV,EAAUA,KAAKC,EAAf,EAAeA,GAIf,OACC,qCACC,sBAAK5N,UAAW,mBAAmB/H,QALlB,WAClBwV,GAASD,IAIR,UACC,qBAAKxN,UAAY,QAAjB,SAA0BuN,IAC1B,sBAAKvN,UAAS,gBAAa0N,EAAGC,EAAO,KAAMA,EAAOC,EAAK,OAAQ,MAA/D,iBAA4EF,EAA5E,SAAsFC,EAAtF,OAAgGC,QAGjGJ,GAAY,cAAC,KAAD,CACXjB,QAASA,GACTnS,KAAMA,EAAKmT,GACXL,qBAAsBA,SAMpBY,GAAU,SAAC,GAAU,IAAT1T,EAAQ,EAARA,KACX2T,EAAUjS,OAAOC,KAAK3B,GAC5B,OACC,cAAC,GAAD,UAEE2T,EAAQtX,KAAI,SAAA8W,GACX,GAAGnT,EAAKmT,GAAQvY,OAAO,EAnCT,SAACoF,GACZA,EAAK3D,KAAI,SAAAwS,GACf,IARsB+E,EAQhBha,GARgBga,EAQM/E,EAAGwD,MAAM,GAAGI,WAAS5D,EAAGwD,MAAM,GAAGK,UAP9CkB,KAEoB,KAAKrE,QAAQ,IAMhDV,EAAGwD,MAAM,GAAGzY,KAAOA,MAkCJgV,CAAY5O,EAAKmT,IAC5B,OACC,mCACC,cAAC,GAAD,CAAMA,OAASA,EAAQnT,KAAMA,aAU/B6T,GAAc,SAAC,GAAc,IAAbxE,EAAY,EAAZA,IAAIrP,EAAQ,EAARA,KACzB,EAAgClD,oBAAS,GAAzC,mBAAOgX,EAAP,KAAiBC,EAAjB,KAIA,OACC,qCACC,qBAAKnO,UAAW,mBAAmB/H,QALjB,WACnBkW,GAAaD,IAIZ,SAA4DzE,IAC3DyE,GAAY,cAAC,GAAD,CAAU9T,KAAOA,EAAKqP,SAoBvB2E,GAfL,WAET,OACC,cAAC,GAAD,UAEEna,GAAIwC,KAAI,SAAA2D,GACN,IAAMqP,EAAM3N,OAAOC,KAAK3B,GAExB,QADY0B,OAAOC,KAAK3B,EAAKqP,EAAI,KAAKzU,QACtB,cAAC,GAAD,CAAayU,IAAQA,EAAMrP,KAAMA,UCrJvD,SAASiU,KACP,MAA8BnX,oBAAS,GAAvC,mBAAOoH,EAAP,KAAkBgQ,EAAlB,KACA,EAAwBpX,oBAAS,GAAjC,mBAAOqX,EAAP,KAAeC,EAAf,KAOA,OACE,qCACE,eAACjQ,EAAD,WACE,gCACE,wBAAQtG,QAVI,WAClBqW,GAAUhQ,IASJ,wBADF,QAEJ,wBAAQrG,QARO,WACfuW,GAAOD,IAOP,mBAEI,6CAEF,cAACrQ,EAAD,CAAWI,UAAWA,GAAaiQ,EAAnC,SACGjQ,EAAY,cAAC,GAAD,IAAaiQ,EAAS,cAAC,GAAD,IAAQ,cAAC,EAAD,SAOpC,kBACb,OACE,cAAC,IAAD,UACE,cAAC,GAAD,OCzBSE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,M,oMCdMrN,EAAiBjD,UAAOC,IAAV,oRAedmR,EAAYpR,UAAOC,IAAV,4JASToR,EAAarR,UAAOC,IAAV,gGAOVqR,EAAUtR,UAAOC,IAAV,oN,gCCjCb,wIAAO,IAAMxH,EAAO,CAChB8Y,IAAK,CAAE9Y,KAAM,CAAC,WAAY,eAAgB,SAAU,WAAY,eAAgB,cAAeE,MAAO,OAAQN,SAAS,GACvHmZ,IAAK,CAAE/Y,KAAM,CAAC,SAAU,aAAc,SAAU,aAAc,YAAaE,MAAO,OAAQN,SAAS,GACnGoZ,IAAK,CAAEhZ,KAAM,CAAC,MAAO,SAAU,aAAc,SAAU,aAAc,YAAaE,MAAO,OAAQN,SAAS,GAC1GqZ,MAAO,CAAEjZ,KAAM,CAAC,cAAe,eAAgBE,MAAO,OAAQN,SAAS,GACvEqM,IAAK,CAAEjM,KAAM,CAAC,MAAO,cAAeE,MAAO,OAAQN,SAAS,GAC5DsM,KAAM,CAAElM,KAAM,CAAC,OAAQ,cAAeE,MAAO,OAAQN,SAAS,GAC9DsZ,SAAU,CAAElZ,KAAM,CAAC,mBAAoB,kBAAmBE,MAAO,OAAQN,SAAS,GAClFuZ,KAAM,CAAEnZ,KAAM,CAAC,cAAeE,MAAO,MAAON,SAAS,GACrDwZ,GAAI,CAAEpZ,KAAM,CAAC,WAAYE,MAAO,MAAON,SAAS,GAChDyZ,GAAI,CAAErZ,KAAM,CAAC,iBAAkBE,MAAO,OAAQN,SAAS,GACvD0Z,IAAK,CAAEtZ,KAAM,CAAC,cAAeE,MAAO,OAAQN,SAAS,GACrD2Z,IAAK,CAAEvZ,KAAM,CAAC,YAAaE,MAAO,OAAQN,SAAS,GACnD4Z,IAAK,CAAExZ,KAAM,CAAC,gBAAiBE,MAAO,OAAQN,SAAS,GACvD6Z,IAAK,CAAEzZ,KAAM,CAAC,eAAgBE,MAAO,OAAQN,SAAS,GACtD8Z,EAAG,CAAE1Z,KAAM,CAAC,QAASE,MAAO,MAAON,SAAS,GAC5C+Z,GAAI,CAAE3Z,KAAM,CAAC,qBAAsBE,MAAO,MAAON,SAAS,GAC1Dga,GAAI,CAAE5Z,KAAM,CAAC,YAAaE,MAAO,MAAON,SAAS,IAExCa,EAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QAAS,MAAO,OAAQ,WAAY,OAAQ,KAAM,MAEhHjD,EAAW,CAAC,gBAAiB,QAE7BsB,EAAgB,CAAC,OAAQ,SAAU,QAAS,YAAa,MAAO,O,iFCL9D+a,EAdA,CACX,IAAK,SAAClb,EAAGC,GAAJ,OAAWd,WAAWa,GAAKb,WAAWc,IAC3C,KAAM,SAACD,EAAGC,GAAJ,OAAWd,WAAWa,IAAMb,WAAWc,IAC7C,IAAK,SAACD,EAAGC,GAAJ,OAAYd,WAAWa,GAAKb,WAAWc,IAAOD,GAAK,GACxD,KAAM,SAACA,EAAGC,GAAJ,OAAYd,WAAWa,IAAMb,WAAWc,IAAOD,GAAK,GAC1D,KAAM,SAACA,EAAGC,GAAJ,OAAWd,WAAWa,IAAMb,WAAWc,IAC7C,KAAM,SAACD,EAAGC,GAAJ,OAAWd,WAAWa,IAAMb,WAAWc,IAC7C,GAAM,SAACD,EAAGC,GAAJ,OAAWd,WAAWa,IAAMb,WAAWc,IAC7C,GAAM,SAACD,EAAGC,GAAJ,OAAWd,WAAWa,IAAMb,WAAWc,IAC7C,IAAO,SAACD,EAAGC,GAAJ,OAAWd,WAAWa,IAAMb,WAAWc,IAC9C,IAAO,SAACD,EAAGC,GAAJ,OAAYd,WAAWa,IAAMb,WAAWc,IAAOD,GAAK,GAC3D,KAfe,SAACA,EAAGC,GAEnB,OADoBA,EAAEV,MAAM,KACT4b,MAAK,SAAA/P,GAAC,OAAIpL,IAAMoL,EAAE2I,Y,gBCKnC1K,GAJQT,UAAOwS,MAAV,+CAICxS,UAAOC,IAAV,mGCPIwS,GDYFzS,UAAO0S,GAAV,0BACG1S,UAAO0S,GAAV,0BCZI,CACJC,YAAa,CAAEC,WAAY,QAASjK,MAAO,oBAC3CkK,aAAc,CAAED,WAAY,aAAcjK,MAAO,oBACjDmK,cAAe,CAAEF,WAAY,UAAWjK,MAAO,oBAC/CoK,YAAa,CAAEH,WAAY,SAAUjK,MAAO,oBAC5CqK,YAAa,CAAEJ,WAAY,SAAUjK,MAAO,oBAC5CsK,YAAa,CAAEL,WAAY,MAAOjK,MAAO,sBAKpCuK,EAAQ,CACjB,YACA,aACA,iBACA,kBACA,YACA,gBACA,iBACA,YACA,eACA,cACA,mBACA,mBACA,QACA,WACA,iBACA,kBACA,eACA,gBACA,cACA,eACA,WACA,eACA,kBACA,WACA,mBACA,mBACA,mBACA,WACA,aACA,gBACA,gBACA,WACA,iBACA,iBACA,iBACA,kBAGSC,EAAc,CACvB,UACA,gBACA,gBACA,YACA,mBACA,iBACA,kBACA,WACA,iBACA,mBACA,UACA,gBACA,mBACA,UACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,aACA,kBACA,UACA,mBACA,mBACA,YACA,eACA,kBACA,eACA,mBACA,kBACA,UACA,gBACA,mBACA,kBACA,YACA,cACA,mBACA,eACA,gBACA,iBACA,eACA,iBACA,gBACA,mBACA,mBACA,mBACA,iBACA,mBACA,iBACA,kBACA,kBACA,OACA,gBACA,mBACA,mBACA,iBACA,mBACA,eACA,mBACA,mBACA,mBACA,eACA,iBACA,iBACA,mBACA,YACA,eACA,gBACA,kBACA,mBACA,gBACA,gBACA,mBACA,iBACA,mBACA,gBACA,gBACA,kBACA,mBACA,kBACA,MACA,kBACA,mBACA,kBACA,mBACA,mBACA,eACA,cACA,mBACA,mBACA,kBACA,iBACA,mBACA,mBACA,kBACA,iBACA,gBACA,gBACA,mBACA,kBACA,mBACA,mBACA,eACA,mBACA,kBACA,mBACA,kBACA,cACA,mBACA,cACA,eACA,kBACA,iBACA,iBACA,mBACA,mBACA,mBACA,eACA,mBACA,cACA,iBACA,iBACA,mBACA,iBACA,mBACA,gBACA,iBACA,mBACA,gBACA,eACA,mBACA,gBACA,gBACA,cACA,gBACA,eACA,gBACA,mBACA,mBACA,mBACA,mBACA,mBACA,gBACA,MACA,iBACA,gBACA,cACA,iBACA,MACA,eACA,gBACA,mBACA,cACA,cACA,iBACA,mBACA,mBACA,gBACA,kBACA,gBACA,mBACA,kBACA,gBACA,iBACA,mBACA,kBACA,mBACA,gBACA,mBACA,kBACA,gBACA,iBACA,mBACA,mBACA,cACA,iBACA,cACA,eACA,kBACA,eACA,gBACA,iBACA,mBACA,kBACA,gBACA,mBACA,mBACA,eACA,iBACA,cACA,gBACA,mBACA,gBACA,mBACA,kBACA,iBACA,kBACA,mBACA,iBACA,OACA,iBACA,mBACA,gBACA,mBACA,iBACA,mBACA,mBACA,iBACA,mBACA,kBACA,mBACA,iBACA,gBACA,gBACA,iBACA,iBACA,iBACA,kBACA,kBACA,mBACA,eACA,kBACA,kBACA,kBACA,iBACA,kBACA,iBACA,iBACA,gBACA,iBACA,iBACA,mBACA,eACA,gBACA,kBACA,mBACA,kBACA,eACA,eACA,iBACA,gBACA,mBACA,aACA,eACA,iBACA,kBACA,kBACA,iBACA,mBACA,eACA,gBACA,iBACA,WACA,kBACA,iBACA,mBACA,iBACA,mBACA,kBACA,gBACA,iBACA,gBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,gBACA,iBACA,gBACA,iBACA,iBACA,eACA,iBACA,gBACA,eACA,kBACA,mBACA,kBACA,iBACA,cACA,gBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBACA,gBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,iBACA,mBACA,kBACA,iBACA,mBACA,cACA,mBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,mBACA,kBACA,kBACA,mBACA,cACA,gBACA,gBACA,gBACA,kBACA,iBACA,mBACA,gBACA,mBACA,mBACA,mBACA,mBACA,YACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,iBACA,mBACA,iBACA,kBACA,mBACA,eACA,kBACA,mBACA,iBACA,iBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,cACA,mBACA,gBACA,iBACA,kBACA,kBACA,mBACA,iBACA,cACA,gBACA,gBACA,mBACA,gBACA,gBACA,kBACA,mBACA,gBACA,mBACA,mBACA,mBACA,iBACA,mBACA,mBACA,mBACA,cACA,cACA,gBACA,mBACA,iBACA,eACA,kBACA,iBACA,mBACA,kBACA,gBACA,mBACA,gBACA,gBACA,cACA,gBACA,gBACA,mBACA,kBACA,iBACA,mBACA,mBACA,iBACA,mBACA,kBACA,kBACA,YACA,mBACA,cACA,mBACA,cACA,mBACA,kBACA,mBACA,cACA,iBACA,kBACA,iBACA,mBACA,kBACA,mBACA,iBACA,mBACA,kBACA,gBACA,iBACA,eACA,mBACA,iBACA,kBACA,iBACA,mBACA,kBACA,gBACA,mBACA,iBACA,iBACA,kBACA,cACA,cACA,mBACA,mBACA,mBACA,mBACA,mBACA,gBACA,iBACA,mBACA,iBACA,kBACA,eACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,eACA,kBACA,mBACA,kBACA,mBACA,gBACA,mBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,cACA,cACA,iBACA,iBACA,eACA,mBACA,gBACA,iBACA,iBACA,mBACA,iBACA,kBACA,kBACA,mBACA,eACA,gBACA,eACA,kBACA,kBACA,kBACA,eACA,mBACA,gBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,gBACA,mBACA,iBACA,YACA,iBACA,iBACA,cACA,mBACA,oBAGSC,EAAM,CACf,mBACA,mBACA,iBACA,gBACA,mBACA,mBACA,oBAGSC,EAAM,CAAC,mBAChB,iBACA,mBACA,mBACA,iBACA,gBACA,eACA,WACA,kBACA,kBACA,UACA,mBACA,UACA,cACA,eACA,mBACA,aACA,kBACA,mBACA,YACA,kBACA,kBACA,eACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,UACA,iBACA,MACA,YACA,YACA,kBACA,UACA,OACA,UACA,cACA,UACA,QACA,YACA,kBACA,cACA,MACA,QACA,UACA,eACA,mBACA,OACA,OACA,OACA,kBACA,kBACA,OACA,WACA,YACA,OACA,OACA,UACA,YACA,gBACA,mBAC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","file":"static/js/main.b732ae32.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useStore } from './../store';\r\nimport TblView from './../view/TblView';\r\nimport { cols, colsOrder, rankCols, allowNegative } from './constants'\r\nimport { ModalContainer, ModalBody, ModalClose, Content } from './../bestPick/Style';\r\n\r\n\r\nconst round5 = (num) => {\r\n    if (!num) num = 0;\r\n    let n = num < 0 ? Math.abs(num) : Number(num);\r\n    const diff = n % 5;\r\n    const res = diff >= 3 ? n + (5 - diff) : n - diff;\r\n    const a = num < 0 ? Number(-res) : Number(res);\r\n    return a;\r\n}\r\n\r\nconst addRank = (store, rankCols) => {\r\n    const fields = rankCols;\r\n\r\n    const infi = (val, isAsc) => {\r\n        if (isNaN(parseFloat(val))) {\r\n            return isAsc ? Infinity : -Infinity;\r\n        }\r\n        return val;\r\n    }\r\n    const asc = (v1, v2) => infi(parseFloat(v1), true) - infi(parseFloat(v2), true);\r\n    const desc = (v1, v2) => infi(parseFloat(v2), false) - infi(parseFloat(v1), false);\r\n\r\n    for (let i = 0; i < fields.length; i++) {\r\n        const field = fields[i].split('#');\r\n        const col = field[0];\r\n        const isAsc = field.length > 1 ? true : false;\r\n        const tmpStore = JSON.parse(JSON.stringify(store));\r\n        tmpStore.stocks.sort((a, b) => isAsc && ((a.filters[col] > 0 && b.filters[col] > 0) || allowNegative.includes(col)) ? asc(a.filters[col], b.filters[col]) : desc(a.filters[col], b.filters[col]));\r\n        for (let i = 0; i < tmpStore.stocks.length; i++) {\r\n            const nm = tmpStore.stocks[i].Name;\r\n\r\n            store.stocks.forEach(function (st, k) {\r\n                if (st.Name === nm) {\r\n                    store.stocks[k].filters['Rank'] = (store.stocks[k].filters['Rank'] || 0) + (i + 1);\r\n                    store.stocks[k].filters[col + 'Rank'] = i + 1;\r\n                    return;\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return store;\r\n}\r\n\r\nconst sortStocks = (stocks, sortByCol, avg) => {\r\n    const asc = (v1, v2, isRound) => isRound ? round5(v1) - round5(v2) : v1 - v2;\r\n    const desc = (v1, v2, isRound) => isRound ? round5(v2) - round5(v1) : v2 - v1;\r\n\r\n    return stocks.sort((a, b) => {\r\n        const res = sortByCol.map((colOrder) => {\r\n            const colList = cols[colOrder];\r\n            return colList.cols.map((col) => {\r\n                if (avg[col]\r\n                    && (avg[col].rm.includes(parseFloat(a.filters[col])) || avg[col].rm.includes(parseFloat(b.filters[col])))) {\r\n                    return 0;\r\n                }\r\n                if (colList.order === \"asc\") {\r\n                    return asc(a.filters[col], b.filters[col]);\r\n                } else {\r\n                    return desc(a.filters[col], b.filters[col]);\r\n                }\r\n            }).join('||');\r\n\r\n        }).join('||');\r\n\r\n        return eval(res);\r\n    });\r\n}\r\n\r\nconst SortedStocks = () => {\r\n    const [openSort, setSort] = useState(false);\r\n    const [sortList, setSortList] = useState(colsOrder);\r\n    const [sortBy, setSortBy] = useState(colsOrder);\r\n    const [rankList, setRankList] = useState(rankCols);\r\n    const [rankBy, setRankBy] = useState(rankCols);\r\n    const [store] = useStore();\r\n    const tmpStore = JSON.parse(JSON.stringify(store));\r\n    const stocksRank = addRank(tmpStore, rankBy);\r\n    const stocks = sortStocks(stocksRank.stocks, sortBy, stocksRank.average);\r\n    const handleChange = e => setSortList(e.target.value);\r\n    const handleRank = e => setRankList(e.target.value);\r\n    const onSort = () => setSortBy(Array.isArray(sortList) ? sortList : sortList.split(','));\r\n    const onRank = () => setRankBy(Array.isArray(rankList) ? rankList : rankList.split(','));\r\n    return (\r\n        <>\r\n            <button onClick={e => setSort(!openSort)} >Sort</button>\r\n            {\r\n                openSort && (<ModalContainer>\r\n                    <ModalBody>\r\n                        <ModalClose onClick={e => setSort(!openSort)} >X</ModalClose>\r\n                        <Content>\r\n                            <div>\r\n                                <input type=\"text\" value={sortList} onChange={handleChange} /> <button onClick={onSort} >Sort</button>\r\n                                <input type=\"text\" value={rankList} onChange={handleRank} /> <button onClick={onRank} >Rank</button>\r\n                                <TblView\r\n                                    average={stocksRank.average}\r\n                                    stocks={stocks}\r\n                                    dispatch={() => { }}\r\n                                    filtersCnt={stocksRank.filtersCnt}\r\n                                    searchParams={stocksRank.searchParams}\r\n                                    compare={stocksRank.compare}\r\n                                />\r\n                            </div>\r\n                        </Content>\r\n                    </ModalBody>\r\n                </ModalContainer>)\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SortedStocks;\r\n","const action = {\r\n    ADD_TEXT: 'ADD_TEXT',\r\n    ADD_STOCKS: 'ADD_STOCKS',\r\n    ADD_FILTERS: 'ADD_FILTERS',\r\n    ADD_AVG: 'ADD_AVG',\r\n    ADD_SEARCH: 'ADD_SEARCH',\r\n    UPD_FILTERS: 'UPD_FILTERS',\r\n    UPD_AVG: 'UPD_AVG',\r\n    DELETE_STOCK: 'DELETE_STOCK',\r\n    DELETE_STOCKS: 'DELETE_STOCKS',\r\n    UPD_HIGH_AVG: 'UPD_HIGH_AVG',\r\n    UPD_LOW_AVG: 'UPD_LOW_AVG',\r\n    UPD_MAX_PER: 'UPD_MAX_PER',\r\n    UPD_STOCKS: 'UPD_STOCKS',\r\n    ADD_TO_COMPARE: 'ADD_TO_COMPARE'\r\n}\r\n\r\nexport default action;","import {\r\n    parseStocks,\r\n    createFilters,\r\n    getAvg,\r\n    addToSearch,\r\n    updFilter,\r\n    updAvg,\r\n    deleteStock,\r\n    deleteStocks\r\n} from './util';\r\nexport const initialState = {\r\n    txt: '',\r\n    highAvg: 100,\r\n    lowAvg: 100,\r\n    maxPer: 10,\r\n    stocks: [],\r\n    filtersList: [],\r\n    average: {},\r\n    searchParams: {},\r\n    filtersCnt: 0,\r\n    compare: []\r\n};\r\n\r\n\r\nexport const reducer = (state, action) => {\r\n    const { type, data } = action;\r\n    switch (type) {\r\n        case \"ADD_TEXT\":\r\n            return { ...state, txt: data.txt };\r\n        case \"ADD_STOCKS\":\r\n            const stocks = parseStocks(state.txt);\r\n            return {\r\n                ...state, stocks: stocks, filtersList: [], filtersList: [],\r\n                average: {},\r\n                searchParams: {},\r\n                filtersCnt: 0\r\n            };\r\n        case \"ADD_FILTERS\":\r\n            const filters = createFilters(state.stocks);\r\n            return { ...state, filtersList: filters };\r\n        case \"ADD_AVG\":\r\n            const avg = getAvg(state.stocks, state.maxPer, state.highAvg, state.lowAvg);\r\n            return { ...state, average: avg };\r\n        case \"ADD_SEARCH\":\r\n            const { cnt, searchObj } = addToSearch(state.filtersList);\r\n            return { ...state, searchParams: searchObj, filtersCnt: cnt };\r\n        case \"UPD_FILTERS\":\r\n            const updFilters = updFilter(state.filtersList, data.key, data.col, data.value);\r\n            return { ...state, filtersList: updFilters };\r\n        case \"UPD_AVG\":\r\n            const updAverage = updAvg({ ...data, average: state.average });\r\n            return { ...state, average: updAverage };\r\n        case \"DELETE_STOCK\":\r\n            const updStock = deleteStock(data.key, state.stocks);\r\n            return { ...state, stocks: updStock };\r\n        case \"DELETE_STOCKS\":\r\n            const updStocks = deleteStocks(data.key, state.stocks);\r\n            return { ...state, stocks: updStocks };\r\n        case \"UPD_HIGH_AVG\":\r\n            return { ...state, highAvg: data.value };\r\n        case \"UPD_LOW_AVG\":\r\n            return { ...state, lowAvg: data.value };\r\n        case \"UPD_MAX_PER\":\r\n            return { ...state, maxPer: data.value };\r\n        case \"UPD_STOCKS\":\r\n            return { ...state, stocks: data.stocks };\r\n        case \"ADD_TO_COMPARE\":\r\n            return { ...state, compare: data.compare };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer, useContext, createContext } from 'react';\r\nimport { reducer, initialState } from './store';\r\nexport let ScreenContext = createContext({});\r\nexport const Provider = ({ children }) => {\r\n    let store = useReducer(reducer, initialState);\r\n    return (\r\n        <ScreenContext.Provider value={store}>\r\n            {children}\r\n        </ScreenContext.Provider>\r\n    )\r\n};\r\n\r\n\r\nexport const useStore = () => {\r\n    let store = useContext(ScreenContext);\r\n    return store;\r\n}","export const parseStocks = (txt) => {\r\n    try {\r\n        let tmpStocks = JSON.parse(txt);\r\n        if (!Array.isArray(tmpStocks)) { tmpStocks = [tmpStocks] }\r\n        tmpStocks.forEach((_, k) => tmpStocks[k].id = k + 1);\r\n        return tmpStocks;\r\n    } catch (e) {\r\n        alert(\"Invlaid JSON\")\r\n    }\r\n}\r\n\r\nexport const createFilters = (stocks) => {\r\n    if (stocks?.length) {\r\n        const firstRow = Object.keys(stocks[0].filters);\r\n        const tmpFilters = firstRow.map((key) => {\r\n            return {\r\n                label: key,\r\n                value: '',\r\n                operator: '',\r\n                checked: false,\r\n                exclude: []\r\n            }\r\n        });\r\n        return tmpFilters;\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\nexport const getAvg = (stocks, maxPer = 10, hightAvg = 100, lowAvg = 100) => {\r\n    if (Array.isArray(stocks) && stocks?.length) {\r\n        let avg = {};\r\n        let valueAr = {};\r\n        stocks.forEach(stock => {\r\n            const { filters } = stock;\r\n            Object.keys(filters).forEach(filter => {\r\n                const val = parseFloat(avg[filter]?.val || 0) + parseFloat(filters[filter] || 0);\r\n                const len = filters[filter] != '' ? (avg[filter]?.len || 0) + 1 : avg[filter]?.len;\r\n                if (filters[filter] != '') {\r\n                    valueAr[filter] = (valueAr[filter] || []).concat(parseFloat(filters[filter]));\r\n                }\r\n                avg[filter] = { val, len };\r\n            });\r\n        });\r\n        Object.keys(valueAr).forEach(filter => {\r\n            valueAr[filter].sort((a, b) => a - b);\r\n            const rm = removeOddVal(valueAr[filter], maxPer, hightAvg, lowAvg);\r\n            rm.forEach(val => {\r\n                avg[filter].val -= val\r\n                avg[filter].len--;\r\n            });\r\n            avg[filter].rm = rm;\r\n        });\r\n        return avg;\r\n    }\r\n}\r\n\r\nexport const addToSearch = (filters) => {\r\n    let cnt = 0;\r\n    const searchObj = filters.reduce((acc, val) => {\r\n        if (val.checked) {\r\n            cnt++;\r\n            let tmp = {\r\n                [val.label]: {\r\n                    value: val.value,\r\n                    operator: val.operator,\r\n                }\r\n            };\r\n            return { ...acc, ...tmp };\r\n        }\r\n        return acc;\r\n    }, {});\r\n    return {\r\n        cnt,\r\n        searchObj\r\n    };\r\n}\r\n\r\nexport const updFilter = (filtersList, key, col, value) => {\r\n    const tmp = [...filtersList];\r\n    tmp[key][col] = value;\r\n    return tmp;\r\n}\r\n\r\nexport const updAvg = ({ updType, filter, num, average }) => {\r\n    const parseNum = parseFloat(num) || 0;\r\n    let tmp = JSON.parse(JSON.stringify(average));\r\n    tmp[filter].val = updType === 'sub' ? (tmp[filter].val - (parseNum)) : (parseFloat(tmp[filter].val) + parseNum);\r\n    tmp[filter].len = updType === 'sub' ? (tmp[filter].len - 1) : (parseFloat(tmp[filter].len) + 1);\r\n    return tmp;\r\n}\r\n\r\nexport const deleteStock = (key, stocks) => {\r\n    const newStocks = [...stocks.slice(0, key), ...stocks.slice(key + 1)]\r\n    return newStocks;\r\n};\r\n\r\nexport const deleteStocks = (keys, stocks) => {\r\n    const newStocks = stocks.reduce((acc, stock) => {\r\n        if (keys.includes(stock.id)) {\r\n            return acc;\r\n        }\r\n        return [...acc, stock]\r\n    }, [])\r\n    return newStocks;\r\n};\r\n\r\nexport const findPerDiff = (newNum, orgNum) => {\r\n    return ((newNum - orgNum) / orgNum) * 100;\r\n}\r\n\r\nconst findPercentage = (values) => {\r\n    return values.reduce((acc, val, key) => {\r\n        let tmp = {\r\n            diff: 0,\r\n            val\r\n        };\r\n        if (key === 0) return [tmp];\r\n        tmp.diff = findPerDiff(val, values[key - 1]);\r\n        return [...acc, tmp];\r\n    }, []);\r\n\r\n\r\n}\r\nexport const removeOddVal = (arr, maxPer = 10, highAvg = 100, lowAvg = 100) => {\r\n    arr.sort((a, b) => a - b)\r\n    const len = arr.length;\r\n    const max = Math.ceil((len / 100) * maxPer);\r\n    const firstChunk = arr.slice(0, max).reverse();\r\n    const lastChunk = arr.slice(len - max);\r\n    const firstPercentage = findPercentage(firstChunk);\r\n    const lastPercentage = findPercentage(lastChunk);\r\n    const firstPos = firstPercentage.findIndex(fp => fp.diff > lowAvg);\r\n    const lastPos = lastPercentage.findIndex(fp => fp.diff > highAvg);\r\n\r\n    const rm = [\r\n        ...(firstPos > -1 ? firstChunk.slice(firstPos) : []),\r\n        ...(lastPos > -1 ? lastChunk.slice(lastPos) : [])\r\n    ]\r\n    return rm;\r\n}\r\n","import styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\nmargin:${props => props.showChart ? \"0\" : \"0 40px 40px 40px\"};\r\nposition: relative;\r\n`;\r\n\r\nconst Header = styled.div`\r\ndisplay: flex;\r\njustify-content:space-between;\r\nmargin: 10px 40px 10px 40px;\r\nfont-weight:bold;\r\n`;\r\nexport {\r\n    Container,\r\n    Header\r\n}","import styled from 'styled-components';\r\n\r\n\r\nconst TextArea = styled.textarea`\r\n    height:100px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    width:10%;\r\n    margin:10px 0 0 0;    \r\n`;\r\n\r\nconst Header = styled.div`\r\n    width:100%;\r\n    display:flex;\r\n    flex-direction:column;\r\n`;\r\n\r\nconst Avg = styled.div`\r\nmargin: 5px 0 0 0;\r\ninput{\r\n    margin:0 5px 0 5px;\r\n}\r\nlabel{\r\n    font-weight:bold;\r\n    font-size:0.9rem;\r\n}\r\n\r\n`;\r\nexport {\r\n    TextArea,\r\n    Button,\r\n    Header,\r\n    Avg\r\n}","import { TextArea, Button, Header, Avg } from './Styles/Txt'\r\nimport action from './store/action';\r\nimport { useStore } from './store';\r\nconst Txt = () => {\r\n    const [store, dispatch] = useStore();\r\n    const { txt, } = store;\r\n    const handleChange = (e) => {\r\n        const txt = e.target.value;\r\n        const type = action.ADD_TEXT;\r\n        dispatch({ data: { txt }, type });\r\n    }\r\n    const handleAvg = (e) => {\r\n        const value = e.target.value;\r\n        const name = e.target.name;\r\n        //const type = name === 'highAvg' ? action.UPD_HIGH_AVG : action.UPD_LOW_AVG;\r\n        let type;\r\n        if (name === 'highAvg') {\r\n            type = action.UPD_HIGH_AVG\r\n        } else if (name === 'maxPer') {\r\n            type = action.UPD_MAX_PER;\r\n        } else {\r\n            type = action.UPD_LOW_AVG;\r\n        }\r\n        dispatch({ data: { value }, type });\r\n    }\r\n    const handleSubmit = () => {\r\n        dispatch({ type: action.ADD_STOCKS });\r\n        dispatch({ type: action.ADD_FILTERS });\r\n        dispatch({ type: action.ADD_AVG });\r\n    }\r\n    return (\r\n        <>\r\n            <Header>\r\n                <TextArea value={txt} onChange={handleChange} placeholder='Enter your JSON' />\r\n                <Avg>\r\n                    <label>HighAvg</label><input type='text' name='highAvg' value={store.highAvg} onChange={handleAvg} />\r\n                    <label>LowAvg</label><input type='text' name='lowAvg' value={store.lowAvg} onChange={handleAvg} />\r\n                    <label>Diff</label><input type='text' name='maxPer' value={store.maxPer} onChange={handleAvg} />\r\n                </Avg>\r\n                <Button onClick={handleSubmit} >Add</Button>\r\n            </Header>\r\n        </>\r\n    )\r\n};\r\nexport default Txt;","import { useState } from 'react';\r\nimport { Button } from './Styles/Txt';\r\nimport { useStore } from './store'\r\nimport action from './store/action';\r\n\r\nconst CompareDropDown = ({ handleChange }) => {\r\n    const [store] = useStore();\r\n    return (\r\n        <>\r\n            <select name='value' onChange={handleChange}>\r\n                <option value=''>Select</option>\r\n                {\r\n                    store.filtersList.map(filter => <option value={filter.label}>{filter.label}</option>)\r\n                }\r\n            </select>\r\n        </>\r\n    )\r\n}\r\nconst Rows = ({ rowNum, label, value, checked }) => {\r\n    const [store, dispatch] = useStore();\r\n    const [isCompare, setCompare] = useState(false);\r\n    const handleChange = (e) => {\r\n        let value = e.target.value;\r\n        const name = e.target.name;\r\n\r\n        if (name === \"checked\") {\r\n            value = !checked;\r\n        }\r\n        if (name === 'operator') {\r\n            if (value === 'GT' || value === 'LT') {\r\n                setCompare(true);\r\n            } else {\r\n                setCompare(false);\r\n            }\r\n            if (value === 'GTA' || value === 'LTA') {\r\n                dispatch({ type: action.UPD_FILTERS, data: { key: rowNum, col: 'value', value: Math.round(store.average[label].val / store.average[label].len) } })\r\n            } else {\r\n                dispatch({ type: action.UPD_FILTERS, data: { key: rowNum, col: 'value', value: '' } })\r\n            }\r\n        }\r\n        dispatch({ type: action.UPD_FILTERS, data: { key: rowNum, col: name, value: value } })\r\n        if ((name === 'operator' || name === 'value') && value) {\r\n            dispatch({ type: action.UPD_FILTERS, data: { key: rowNum, col: 'checked', value: true } })\r\n        }\r\n    }\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", width: \"50%\", margin: \"10px\" }}>\r\n            <div>\r\n                <input type=\"checkbox\" onChange={handleChange} name='checked' checked={checked} />\r\n            </div>\r\n            <div style={{ width: '33%' }}>\r\n                <label>{label}</label>&nbsp;\r\n            </div>\r\n            <div style={{ width: '33%' }}>\r\n                <select name='operator' onChange={handleChange}>\r\n                    <option value=''>Select</option>\r\n                    <option value='>'>Greater</option>\r\n                    <option value='>='>Greater & Equal</option>\r\n                    <option value='<'>Less</option>\r\n                    <option value='<='>Less & equal</option>\r\n                    <option value='!='>Not equal</option>\r\n                    <option value='=='>Equal</option>\r\n                    <option value='GT'>Greater than</option>\r\n                    <option value='LT'>Less than</option>\r\n                    <option value='GTA'>Greater than AVG</option>\r\n                    <option value='LTA'>Less than AVG</option>\r\n                    <option value='SYMB'>Find Symb</option>\r\n                </select>\r\n            </div>\r\n            <div style={{ width: '33%' }}>\r\n                {!isCompare ? <input\r\n                    type=\"text\"\r\n                    placeholder='Value'\r\n                    name='value'\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    autoComplete='off'\r\n                /> : <CompareDropDown handleChange={handleChange} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst Filters = () => {\r\n    const [store, dispatch] = useStore();\r\n    const addToSearch = () => {\r\n        dispatch({ type: action.ADD_SEARCH });\r\n    }\r\n    return (\r\n        <>\r\n            <h5>Filters:</h5>\r\n            <div className='filters'>\r\n\r\n                {\r\n                    store.filtersList.map((filter, key) => <Rows label={filter.label} operator={filter.operator} value={filter.value} checked={filter.checked} key={key} rowNum={key}\r\n                    />)\r\n                }\r\n                <br />\r\n            </div>\r\n            <Button onClick={addToSearch} >Filter</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filters;","import { useStore } from './store';\r\nimport TblView from './view/TblView';\r\n\r\nconst Tbl = () => {\r\n    const [store, dispatch] = useStore();\r\n    return (\r\n        <>\r\n            <TblView\r\n                average={store.average}\r\n                stocks={store.stocks}\r\n                dispatch={dispatch}\r\n                filtersCnt={store.filtersCnt}\r\n                searchParams={store.searchParams}\r\n                compare={store.compare}\r\n            />\r\n        </>\r\n    )\r\n}\r\nexport default Tbl;","import { useState } from \"react\";\r\nimport { findPerDiff } from './store/util';\r\n\r\nconst DiffList = ({ precentages }) => {\r\n    return (\r\n        <table style={{ width: \"10rem\", textAlign: \"left\" }}>\r\n\r\n            {\r\n                precentages.map((percentage) => {\r\n                    return (\r\n                        <tr>\r\n                            <td>{percentage.val}</td>\r\n                            <td>{Math.round(percentage.diff)}%</td>\r\n                        </tr>\r\n                    );\r\n                })\r\n            }\r\n\r\n\r\n        </table>\r\n    )\r\n}\r\n\r\nconst PercentageDiff = ({ label }) => {\r\n    const [vals, setVal] = useState('');\r\n    const [precentages, setPrecentages] = useState([]);\r\n    const values = vals.split(/\\s|%/).filter(v => v).map(v => v.split(',').join(''));\r\n    const onCalc = () => {\r\n        const per = values.reduce((acc, val, key) => {\r\n            let tmp = {\r\n                diff: 0,\r\n                val\r\n            };\r\n            if (key === 0) return [tmp];\r\n            tmp.diff = findPerDiff(val, values[key - 1]);\r\n            return [...acc, tmp];\r\n        }, []);\r\n\r\n        setPrecentages(per);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{ margin: \"0 20px 0 0\" }}>\r\n                <h6>{label}</h6>\r\n                <input type=\"text\" onChange={e => setVal(e.target.value)} />\r\n                <button onClick={onCalc} >Calc</button>\r\n                <DiffList precentages={precentages} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst AddDiff = () => {\r\n    const [cmps, setCmp] = useState([])\r\n    const addCmp = () => {\r\n        const label = prompt(`Enter diff name`);\r\n        if (!label) return;\r\n        setCmp([...cmps, { CmpName: PercentageDiff, label }])\r\n    }\r\n    return (\r\n        <div>\r\n            <h5>Calculate Diff:</h5>\r\n            <button onClick={addCmp}>Add</button>\r\n            <div style={{ display: \"flex\", width: '90%', flexWrap: \"wrap\" }}>\r\n                {cmps.map(cmp => {\r\n                    const { CmpName, label } = cmp;\r\n                    return <CmpName label={label} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddDiff;","import styled from 'styled-components';\r\n\r\n\r\nconst ModalContainer = styled.div`\r\n    position:absolute;\r\n    top:0;    \r\n    width:auto;\r\n    height:auto;\r\n    background:white;\r\n\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n`;\r\n\r\nexport {\r\n    ModalContainer,\r\n    ModalContent\r\n}","import { useStore } from './store';\r\nimport { ModalContainer, ModalContent } from './Styles/Modal';\r\nimport TblView from './view/TblView';\r\n\r\nconst Modal = ({ showModal }) => {\r\n    const [store, dispatch] = useStore();\r\n    const stocks = store.stocks.filter((stock, key) => {\r\n        return store.compare.indexOf(key) > -1 ? true : false;\r\n    })\r\n    return (\r\n        <>\r\n            <ModalContainer>\r\n                <ModalContent>\r\n                    <button onClick={showModal}>Close</button>\r\n                    <TblView\r\n                        average={store.average}\r\n                        stocks={stocks}\r\n                        dispatch={dispatch}\r\n                        filtersCnt={store.filtersCnt}\r\n                        searchParams={store.searchParams}\r\n                        compare={store.compare}\r\n                    />\r\n\r\n                </ModalContent>\r\n            </ModalContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Modal;","import { useStore } from './../store';\r\nimport { useState } from 'react';\r\nimport { ModalContainer, ModalBody, ModalClose, Content } from './Style';\r\nimport { findPerDiff } from './../store/util';\r\nconst getPercentage = (stock, col1, col2) => {\r\n    return findPerDiff(stock[col1], stock[col2]);\r\n}\r\nconst findBest = (stocks, type) => {\r\n    const sortRoe = stocks.sort((a, b) => {\r\n        return parseFloat(b.filters[type]) - parseFloat(a.filters[type]);\r\n    });\r\n    return sortRoe.slice(0, 5);\r\n}\r\nconst findMaxMatch = (...arr) => {\r\n    return arr.reduce((acc, val, key) => {\r\n        const position = (key + 1) % 5;\r\n        const avgPos = position === 0 ? 5 : position;\r\n        if (acc[val.Name]) {\r\n            acc[val.Name].cnt += 1;\r\n            acc[val.Name].avgPos += avgPos;\r\n            acc[val.Name].t.push(avgPos);\r\n        } else {\r\n            acc[val.Name] = { cnt: 1, avgPos: avgPos, t: [position], name: val.Name };\r\n        }\r\n        return acc;\r\n    }, {});\r\n}\r\n\r\nconst sortByBest = (maxMatch) => {\r\n    const matches = Object.values(maxMatch);\r\n    return matches.sort(function (a, b) {\r\n        return b.cnt - a.cnt || a.avgPos - b.avgPos;\r\n    }).slice(0, 5);\r\n}\r\nconst addMetrics = function (stocks) {\r\n    stocks.forEach((stock, key) => {\r\n        stocks[key].filters.epsAnnGrowthPercent = getPercentage(stocks[key].filters, 'EPS12M', 'EPSAnnRs');\r\n        stocks[key].filters.epsPrevAnnGrowthPercent = getPercentage(stocks[key].filters, 'EPSAnnRs', 'EPSPrevAnnRs');\r\n        stocks[key].filters.epsPreYearQtrPercent = getPercentage(stocks[key].filters, 'EPSQtrRs', 'EPSPYQtrRs');\r\n        stocks[key].filters.epsPreQtrPercent = getPercentage(stocks[key].filters, 'EPSQtrRs', 'EPSPrevQtrRs');\r\n        stocks[key].filters.roePercent = getPercentage(stocks[key].filters, 'ROE', 'ROEPrevAnn');\r\n        stocks[key].filters.rocePercent = getPercentage(stocks[key].filters, 'ROCE', 'ROCEPrevYr');\r\n\r\n    });\r\n    return stocks;\r\n};\r\n\r\nconst filterStocks = (stocks) => {\r\n    const tmp = stocks.filter((stock) => {\r\n        /* if (stock.filters['MarkCap'] >= 10) {\r\n             return true;\r\n         }*/\r\n        return true;\r\n    });\r\n    return tmp;\r\n}\r\n\r\nconst grpBest = (stocks, cols) => {\r\n    const best = cols.map(col => {\r\n        return findBest(stocks, col);\r\n    });\r\n    const match = findMaxMatch(...best);\r\n    const sortByBest = sortByBest(match);\r\n    return [match, sortByBest];\r\n}\r\n\r\nconst calc = (stocks) => {\r\n    let stockObj = JSON.parse(JSON.stringify(stocks));\r\n    const filteredStocks = filterStocks(stockObj);\r\n    const parseStocks = addMetrics(filteredStocks);\r\n\r\n    //Current\r\n    const roe = findBest(parseStocks, 'ROE');\r\n    const roce = findBest(parseStocks, 'ROCE');\r\n    //const eps = findBest(parseStocks, 'EPS12M');\r\n    const saleGrowth = findBest(parseStocks, 'Salesgrowth');\r\n    const qtrSalesVar = findBest(parseStocks, 'QtrSalesVar'); // yoySales growth\r\n    const npmCur = findBest(parseStocks, 'NPMAnn'); // yoySales growth\r\n    const opmCur = findBest(parseStocks, 'OPM'); // yoySales growth\r\n\r\n\r\n    const currentMatch = findMaxMatch(\r\n        ...roe,\r\n        ...roce,\r\n        ...saleGrowth,\r\n        ...qtrSalesVar,\r\n        ...npmCur,\r\n        ...opmCur\r\n    );\r\n    const currentBest = sortByBest(currentMatch);\r\n    //const [currentMatch, currentBest] = grpBest(parseStocks, ['ROE', 'ROCE', 'EPS12M', 'Salesgrowth', 'QtrSalesVar']);\r\n    //History prev\r\n    const roePrevAnn = findBest(parseStocks, 'ROEPrevAnn');\r\n    const rocePrevYr = findBest(parseStocks, 'ROCEPrevYr');\r\n\r\n    const historyMatch = findMaxMatch(\r\n        ...roePrevAnn,\r\n        ...rocePrevYr\r\n    );\r\n    const histBest = sortByBest(historyMatch);\r\n\r\n    //EPS\r\n    /*  const eps12M = findBest(parseStocks, 'EPS12M'); // last 12 months.\r\n      const epsAnnPercent = findBest(parseStocks, 'EPSAnnRs'); // last fin year.\r\n      const epsPrevAnnPercent = findBest(parseStocks, 'EPSPrevAnnRs'); // prev fin year.\r\n      const epsQtr = findBest(parseStocks, 'EPSQtrRs'); // latest qtr\r\n      const epsPrevQtrPercent = findBest(parseStocks, 'EPSPrevQtrRs'); // prev qtr\r\n      const epsPrevYrQtrPercent = findBest(parseStocks, 'EPSPYQtrRs'); // prev yr qtr\r\n      const epsMatch = findMaxMatch(\r\n          ...eps12M,\r\n          ...epsAnnPercent,\r\n          ...epsPrevAnnPercent,\r\n          ...epsQtr,\r\n          ...epsPrevQtrPercent,\r\n          ...epsPrevYrQtrPercent\r\n      );\r\n      const epsBest = sortByBest(epsMatch);*/\r\n\r\n    //3Year avg\r\n    const roe3 = findBest(parseStocks, 'ROE3Yr');\r\n    const roce3 = findBest(parseStocks, 'ROCE3Yr');\r\n    const sales3 = findBest(parseStocks, 'SalesVar3Yrs');\r\n    const avg3Match = findMaxMatch(\r\n        ...roe3,\r\n        ...roce3,\r\n        ...sales3\r\n    );\r\n    const avg3Best = sortByBest(avg3Match);\r\n\r\n    //5Year avg\r\n    const roe5 = findBest(parseStocks, 'ROE5Yr');\r\n    const roce5 = findBest(parseStocks, 'ROCE5Yr');\r\n    const sales5 = findBest(parseStocks, 'SalesVar5Yrs');\r\n    const avg5Match = findMaxMatch(\r\n        ...roe5,\r\n        ...roce5,\r\n        ...sales5\r\n    );\r\n    const avg5Best = sortByBest(avg5Match);\r\n\r\n    const epsCmp12Mnth = findBest(parseStocks, 'epsAnnGrowthPercent'); // comparing last 12 months with last year\r\n    const epsCmp12MnthMatch = findMaxMatch(\r\n        ...epsCmp12Mnth\r\n    );\r\n    const epsCmp12MnthBest = sortByBest(epsCmp12MnthMatch);\r\n\r\n    const epsCmpLastYr = findBest(parseStocks, 'epsPrevAnnGrowth'); // comparing last year vs prev year\r\n    const epsCmpLastYrMatch = findMaxMatch(\r\n        ...epsCmpLastYr\r\n    );\r\n    const epsCmpLastYrBest = sortByBest(epsCmpLastYrMatch);\r\n\r\n    const epsCmpLastYrQtr = findBest(parseStocks, 'epsPreYearQtr');  // comparing latest qtr vs prev year qtr\r\n    const epsCmpLastYrQtrMatch = findMaxMatch(\r\n        ...epsCmpLastYrQtr\r\n    );\r\n    const epsCmpLastYrQtrBest = sortByBest(epsCmpLastYrQtrMatch);\r\n\r\n    const epsCmpPrevQtr = findBest(parseStocks, 'epsPreQtrPercent');  // comparing latest qtr vs prev qtr    \r\n    const epsCmpPrevQtrMatch = findMaxMatch(\r\n        ...epsCmpPrevQtr\r\n    );\r\n    const epsCmpPrevQtrBest = sortByBest(epsCmpPrevQtrMatch);\r\n\r\n    const roePercent = findBest(parseStocks, 'roePercent');\r\n    const roePercentMatch = findMaxMatch(\r\n        ...roePercent\r\n    );\r\n    const roePercentBest = sortByBest(roePercentMatch);\r\n\r\n    const rocePercent = findBest(parseStocks, 'rocePercent');\r\n    const rocePercentMatch = findMaxMatch(\r\n        ...rocePercent\r\n    );\r\n    const rocePercentBest = sortByBest(rocePercentMatch);\r\n\r\n    /* OPM */\r\n    const opmPercent = findBest(parseStocks, 'OPM'); // last 12 months\r\n    const opmAnnPercent = findBest(parseStocks, 'OPMAnn'); // last fin year\r\n    const opmPrevAnnPercent = findBest(parseStocks, 'OPMPrevAnn'); // prev fin year\r\n    const opmQtrPercent = findBest(parseStocks, 'OPMQtr'); // latest qtr\r\n    const opmPrevQtrPercent = findBest(parseStocks, 'OPMPrevQtr'); // prev qtr\r\n    const opmPrevYrQtrPercent = findBest(parseStocks, 'OPMPYQtr'); // prev yr qtr\r\n    const opmPercentMatch = findMaxMatch(\r\n        ...opmPercent,\r\n        ...opmAnnPercent,\r\n        ...opmPrevAnnPercent,\r\n        ...opmQtrPercent,\r\n        ...opmPrevQtrPercent,\r\n        ...opmPrevYrQtrPercent\r\n    );\r\n    const opmPercentBest = sortByBest(opmPercentMatch);\r\n\r\n    /* NPM */\r\n    const npmAnnPercent = findBest(parseStocks, 'NPMAnn'); // last fin year\r\n    const npmPrevAnnPercent = findBest(parseStocks, 'NPMPrevAnn'); // prev fin year\r\n    const npmQtrPercent = findBest(parseStocks, 'NPMQtr'); // latest qtr\r\n    const npmPrevQtrPercent = findBest(parseStocks, 'NPMPrevQtr'); // prev qtr\r\n    const npmPrevYrQtrPercent = findBest(parseStocks, 'NPMPYQtr'); // prev yr qtr\r\n    const npmPercentMatch = findMaxMatch(\r\n        ...npmAnnPercent,\r\n        ...npmPrevAnnPercent,\r\n        ...npmQtrPercent,\r\n        ...npmPrevQtrPercent,\r\n        ...npmPrevYrQtrPercent\r\n    );\r\n    const npmPercentBest = sortByBest(npmPercentMatch);\r\n\r\n    const allMatch = findMaxMatch(\r\n        ...roe,\r\n        ...roce,\r\n        ...saleGrowth,\r\n        ...qtrSalesVar,\r\n        ...roePrevAnn,\r\n        ...rocePrevYr,\r\n        ...roe3,\r\n        ...roce3,\r\n        ...sales3,\r\n        ...roe5,\r\n        ...roce5,\r\n        ...sales5,\r\n        ...epsCmp12Mnth,\r\n        ...epsCmpLastYr,\r\n        ...epsCmpLastYrQtr,\r\n        ...epsCmpPrevQtr,\r\n        ...roePercent,\r\n        ...rocePercent,\r\n        ...opmPercent,\r\n        ...opmAnnPercent,\r\n        ...opmPrevAnnPercent,\r\n        ...opmQtrPercent,\r\n        ...opmPrevQtrPercent,\r\n        ...opmPrevYrQtrPercent,\r\n        ...npmAnnPercent,\r\n        ...npmPrevAnnPercent,\r\n        ...npmQtrPercent,\r\n        ...npmPrevQtrPercent,\r\n        ...npmPrevYrQtrPercent\r\n    );\r\n    const finalBest = sortByBest(allMatch);\r\n    return {\r\n        currentBest,\r\n        histBest,\r\n        avg3Best,\r\n        avg5Best,\r\n        epsCmp12MnthBest,\r\n        epsCmpLastYrBest,\r\n        epsCmpLastYrQtrBest,\r\n        epsCmpPrevQtrBest,\r\n        roePercentBest,\r\n        rocePercentBest,\r\n        opmPercentBest,\r\n        npmPercentBest,\r\n        finalBest\r\n    };\r\n\r\n    //5Year avg\r\n    // Historic growth\r\n    // sales roe roce, cash\r\n}\r\nconst Tbl = ({ rows }) => {\r\n    return (\r\n        <table border=\"1\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Cnt</th>\r\n                    <th>Position</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {rows.map((row) => {\r\n                    return (\r\n                        <>\r\n                            <tr>\r\n                                <td>{row.name}</td>\r\n                                <td>{row.cnt}</td>\r\n                                <td>{row.avgPos}</td>\r\n                            </tr>\r\n                        </>\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\nconst BestPick = () => {\r\n    const [openBestPick, setBestPic] = useState(false);\r\n    const [store] = useStore();\r\n    const {\r\n        currentBest,\r\n        histBest,\r\n        avg3Best,\r\n        avg5Best,\r\n        finalBest,\r\n        epsCmp12MnthBest,\r\n        epsCmpLastYrBest,\r\n        epsCmpLastYrQtrBest,\r\n        epsCmpPrevQtrBest,\r\n        roePercentBest,\r\n        rocePercentBest,\r\n        opmPercentBest,\r\n        npmPercentBest\r\n    } = calc(store.stocks);\r\n\r\n    return (\r\n        <>\r\n            <button onClick={e => setBestPic(!openBestPick)} >BestPick</button>\r\n            {\r\n                openBestPick && (<ModalContainer>\r\n                    <ModalBody>\r\n                        <ModalClose onClick={e => setBestPic(!openBestPick)} >X</ModalClose>\r\n                        <Content>\r\n                            <div>\r\n                                <h5>Current</h5>\r\n                                <Tbl rows={currentBest} />\r\n                            </div>\r\n                            <div>\r\n                                <h5>History</h5>\r\n                                <Tbl rows={histBest} />\r\n                            </div>\r\n                            <div>\r\n                                <h5>Avg 3 Years</h5>\r\n                                <Tbl rows={avg3Best} />\r\n                            </div>\r\n                            <div>\r\n                                <h5>Avg 5 Years</h5>\r\n                                <Tbl rows={avg5Best} />\r\n                            </div>\r\n\r\n\r\n                            <div>\r\n                                <h5>EPS12M vs Last yr</h5>\r\n                                <Tbl rows={epsCmp12MnthBest} />\r\n                            </div>\r\n                            <div>\r\n                                <h5>EPS last yr vs prev yr</h5>\r\n                                <Tbl rows={epsCmpLastYrBest} />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h5>Eps last qtr vs prev qtr</h5>\r\n                                <Tbl rows={epsCmpPrevQtrBest} />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h5>EPS prev yr qtr</h5>\r\n                                <Tbl rows={epsCmpLastYrQtrBest} />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h5>Roe vs prev yr</h5>\r\n                                <Tbl rows={roePercentBest} />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h5>Roce vs prev yr</h5>\r\n                                <Tbl rows={rocePercentBest} />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h5>OPM</h5>\r\n                                <Tbl rows={opmPercentBest} />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h5>NPM</h5>\r\n                                <Tbl rows={npmPercentBest} />\r\n                            </div>\r\n                            <div>\r\n                                <h5>Consolidated</h5>\r\n                                <Tbl rows={finalBest} />\r\n                            </div>\r\n                        </Content>\r\n                    </ModalBody>\r\n\r\n                </ModalContainer>)\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BestPick;","import { useState } from 'react';\r\nimport './App.css';\r\nimport Txt from './Txt';\r\nimport Filters from './Filters';\r\nimport Tbl from './Tbl';\r\nimport PercentageDiff from './PercentageDiff';\r\nimport { useStore } from './store';\r\nimport Modal from './modal';\r\nimport BestPick from './bestPick';\r\nimport SortedStocks from './sort';\r\nfunction Screener() {\r\n    const [store] = useStore();\r\n    const [isModalOpen, setModalOpen] = useState(false);\r\n    const showModal = () => {\r\n        setModalOpen(!isModalOpen);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Txt />\r\n            {store.stocks && store.stocks.length > 0 && <Filters />}\r\n            {store.stocks && store.stocks.length > 0 && <h5>Filters added: {store.filtersCnt}</h5>}\r\n            {store.compare && store.compare.length > 1 && <button onClick={showModal} >Compare</button>}\r\n            {store.stocks && store.stocks.length > 0 && <BestPick />}\r\n            {store.stocks && store.stocks.length > 0 && <SortedStocks />}\r\n            {store.stocks && store.stocks.length > 0 && <Tbl />}\r\n            {isModalOpen && <Modal showModal={showModal} />}\r\n            <PercentageDiff />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Screener;","import {\r\n    LineChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Line\r\n} from 'recharts'\r\n\r\nfunction generateRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\nconst Chart = ({ data = [], uniqYear = [], yAxis = '' }) => {\r\n    const axis = yAxis ? yAxis.split(',').map(v => parseInt(v)) : [];\r\n    return (\r\n        <>\r\n            {\r\n                data.length ? <LineChart width={1350} height={1000} data={data}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"1 1\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis domain={axis} />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    {\r\n                        uniqYear.map((year) => <Line type=\"monotone\" dataKey={year} stroke={generateRandomColor()} />)\r\n                    }\r\n\r\n                </LineChart> : null\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Chart;","import axios from 'axios';\r\n\r\n\r\nconst loadData = async (yr, index) => {\r\n    try {\r\n        const reqIndex = index || 'n50';\r\n        const res = await axios.get(`/screener/points/${reqIndex}/${yr}`);\r\n        return res;\r\n    } catch (e) {\r\n        alert('Failed to load');\r\n    }\r\n}\r\n\r\nexport default loadData;","import { useState } from 'react';\r\n\r\n\r\nconst useLoadFile = () => {\r\n    const [data, setData] = useState('');\r\n    const [chartData, setChartDat] = useState([]);\r\n    const [uniqYear, setYear] = useState([]);\r\n    const [noOfDays, setNoOfDays] = useState(5);\r\n    const processData = (dt, type, isCompare) => {\r\n        const tmpChartData = [...chartData];\r\n        const tmpData = dt.split('\\n').slice(1);\r\n        const yr = [...uniqYear];\r\n        let i = 0;\r\n        let [, startingPrice] = tmpData[0].split(',');\r\n        startingPrice = startingPrice.replace(/\"/g, '').trim();\r\n        tmpData.forEach((val, index) => {\r\n            if (parseInt(noOfDays) > 0 && index % parseInt(noOfDays) != 0) return;\r\n            let [date, open, , close] = val.split(',');\r\n            open = close;\r\n            if (typeof date === 'string' && typeof open === 'string') {\r\n                date = date.replace(/\"/g, '').trim();\r\n                open = open.replace(/\"/g, '').trim();\r\n                const [day, month, year] = date.split('-');\r\n                if (!tmpChartData[i]) {\r\n                    tmpChartData[i] = {\r\n                        name: `${day}-${month}`\r\n                    };\r\n                }\r\n                const index = isCompare ? type : year;\r\n                if (isCompare) {\r\n                    tmpChartData[i][index] = Number(((open - startingPrice) / startingPrice) * 100).toFixed(2);\r\n                } else {\r\n                    tmpChartData[i][index] = open;\r\n                }\r\n                if (!yr.includes(index)) {\r\n                    yr.push(index);\r\n                }\r\n                i++;\r\n            }\r\n        });\r\n        setChartDat(tmpChartData);\r\n        setYear(yr);\r\n    }\r\n    const clearLast = () => {\r\n        const tmp = [...uniqYear];\r\n        tmp.pop();\r\n        setYear(tmp);\r\n    }\r\n\r\n    return {\r\n        setNoOfDays,\r\n        setData,\r\n        setChartDat,\r\n        setYear,\r\n        processData,\r\n        clearLast,\r\n        uniqYear,\r\n        noOfDays,\r\n        chartData,\r\n        data\r\n    };\r\n}\r\n\r\nexport default useLoadFile;","import styled from 'styled-components';\r\n\r\n\r\nconst StatsContainer = styled.div`\r\n    display:flex;\r\n    flex-direction:row;\r\n    flex-wrap:wrap;\r\n    width:100%;\r\n    gap:5px;\r\n`;\r\n\r\nconst StatsItem = styled.div`\r\n    max-width:15%;\r\n    \r\n`;\r\n\r\n\r\nexport {\r\n    StatsContainer,\r\n    StatsItem\r\n}","import data from './data.json';\r\nconst prepareObj = (sectors, index, finalStat = []) => {\r\n    return sectors.reduce((acc, sector) => {\r\n        const rtn = data[sector][index];\r\n        if (!rtn) return acc;\r\n        const tmp = {\r\n            position: finalStat.filter(stat => stat[0] === sector)[0],\r\n            sector,\r\n            rtn\r\n        };\r\n        return [...acc, tmp];\r\n    }, []).sort((a, b) => (b.rtn - a.rtn))\r\n};\r\n\r\nconst prepareState = (sectors) => {\r\n    let res = {};\r\n    Array.from({ length: 23 }, (_, index) => {\r\n        const obj = prepareObj(sectors, index);\r\n        sectors.forEach((sector) => {\r\n            const tmp = (obj.findIndex(v => v.sector === sector) + 1);\r\n            res[sector] = (res[sector] || []).concat(tmp);\r\n        });\r\n    });\r\n    return res;\r\n}\r\n\r\nexport {\r\n    prepareObj,\r\n    prepareState\r\n};","import styled from 'styled-components';\r\nconst PositionContainer = styled.div`\r\n    display:flex;\r\n    gap:4px;\r\n    .positionItem{\r\n        border:0.5px solid gray;\r\n        min-width:12px;\r\n        font-size:11px;\r\n        color:white;\r\n        font-weight:bold;\r\n    }\r\n    .positionItem:nth-child(-n+6){\r\n        border-radius:50%;\r\n    }\r\n    .good{\r\n        background:green;\r\n    }\r\n    .avg{\r\n        background:tomato;\r\n        color:white;\r\n    }\r\n    .invalid{\r\n        background:black;\r\n    }\r\n`;\r\n\r\nexport {\r\n    PositionContainer\r\n}","import { useMemo } from 'react';\r\nimport { PositionContainer } from './style';\r\nconst Position = ({ points }) => {\r\n    const revPoints = useMemo(() => points.slice().reverse(), []);\r\n    return (\r\n        <>\r\n            <PositionContainer>\r\n                {\r\n                    revPoints.map((point) => {\r\n                        const className = point === 0 ? 'invalid' : point <= 6 ? 'good' : 'avg';\r\n                        return (\r\n                            <div className={`positionItem ${className}`}>{point}</div>\r\n                        )\r\n                    })\r\n                }\r\n            </PositionContainer>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Position;","import Position from './Position';\r\nimport { prepareObj } from './../util';\r\nconst Row = ({ sectors, index, isLast, finalStat }) => {\r\n    const rows = prepareObj(sectors, index, finalStat);\r\n    return (\r\n        <>\r\n            {rows.map((row) => {\r\n                return (\r\n                    <>\r\n                        <tr>\r\n                            <td>{row.sector}</td>\r\n                            <td>{row.rtn}</td>\r\n                            {\r\n                                isLast && (<td><Position points={row.position[1]} /></td>)\r\n                            }\r\n                        </tr>\r\n                    </>\r\n                )\r\n            })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Row;","import Row from './Row';\r\nconst Tbl = (props) => {\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <th>Sectors</th>\r\n                <th>Return</th>\r\n                {\r\n                    props.isLast && (<th>Position</th>)\r\n                }\r\n            </thead>\r\n            <tbody>\r\n                <Row {...props} />\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Tbl;","import data from './data.json';\r\nimport { StatsContainer, StatsItem } from './style'\r\nimport { prepareState } from './util';\r\nimport Tbl from './component/Tbl';\r\n\r\n\r\n\r\nconst Stats = () => {\r\n    const sectors = Object.keys(data);\r\n    const finalStat = Object.entries(prepareState(sectors));\r\n\r\n    return (\r\n        <>\r\n            <StatsContainer>\r\n                {Array.from({ length: 23 }, (_, index) => {\r\n                    return (\r\n                        <StatsItem>\r\n                            <h3>{index}</h3>\r\n                            <Tbl\r\n                                sectors={sectors}\r\n                                index={index}\r\n                                finalStat={finalStat}\r\n                                isLast={index === 22}\r\n                            />\r\n                        </StatsItem>\r\n                    )\r\n                })}\r\n\r\n            </StatsContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Stats;","import React, { useState } from 'react';\r\nimport Chart from './chart';\r\nimport loadData from './util';\r\nimport useLoadFile from './hooks/useLoadFile';\r\nimport Stats from './../stats';\r\nconst Charts = () => {\r\n    const {\r\n        setNoOfDays,\r\n        setData,\r\n        setChartDat,\r\n        setYear,\r\n        processData,\r\n        clearLast,\r\n        uniqYear,\r\n        noOfDays,\r\n        chartData,\r\n        data\r\n    } = useLoadFile();\r\n    const [selectedYear, setSelectedYear] = useState('');\r\n    const [yAxis, setYAxis] = useState('5000,20000');\r\n    const [isCompare, setCompare] = useState(false);\r\n    const [index, setIndex] = useState('');\r\n    const [compareData, setCompareData] = useState('');\r\n    const handleChange = (e) => {\r\n        const val = e.target.value;\r\n        setNoOfDays(val);\r\n    }\r\n    const handleCheckbox = (e) => {\r\n        const isChecked = e.target.checked;\r\n        const yAxisDefaults = isChecked ? '-100,200' : '5000,20000';\r\n        setYAxis(yAxisDefaults);\r\n        setCompare(isChecked);\r\n    }\r\n    const handleAxisChange = (e) => {\r\n        const val = e.target.value;\r\n        setYAxis(val);\r\n    };\r\n    const handleFile = (e) => {\r\n        e.preventDefault()\r\n        const reader = new FileReader()\r\n        reader.onload = async (e) => {\r\n            const text = (e.target.result)\r\n            setData(text)\r\n        };\r\n        reader.readAsText(e.target.files[0])\r\n    }\r\n    const handleIndex = async (e) => {\r\n        const val = e.target.value;\r\n        if (!val) return;\r\n\r\n        const result = await loadData(selectedYear, val);\r\n\r\n        if (result?.data) {\r\n            setCompareData(result.data);\r\n        }\r\n        setIndex(val);\r\n    }\r\n    const handleSelect = async (type, e) => {\r\n        const val = e.target.value;\r\n        if (!val) return;\r\n        const result = await loadData(val, type);\r\n\r\n        if (result?.data) {\r\n            if (type != 'other') {\r\n                setData(result.data);\r\n            } else {\r\n                setCompareData(result.data);\r\n            }\r\n        }\r\n        setSelectedYear(val);\r\n    }\r\n    const clearChart = () => {\r\n        setData('');\r\n        setChartDat([]);\r\n        setYear([]);\r\n    }\r\n\r\n    const loadFile = () => {\r\n        if (isCompare) {\r\n            processData(data, 'n50', isCompare);\r\n            if (compareData) {\r\n                processData(compareData, index, isCompare);\r\n            }\r\n            return;\r\n        }\r\n        return processData(data, '', isCompare);\r\n    }\r\n    return (\r\n        <>\r\n            <Stats />\r\n            <input type=\"file\" onChange={handleFile} />\r\n            <input type=\"checkbox\" onChange={handleCheckbox} /> Compare\r\n\r\n            <input type=\"text\" type=\"number\" value={noOfDays} onChange={handleChange} />\r\n            <input type=\"text\" value={yAxis} onChange={handleAxisChange} />\r\n            <select onChange={handleSelect.bind(null, 'n50')} >\r\n                <option value=''>Select</option>\r\n                {Array.from({ length: 23 }, (_, key) => {\r\n                    return (\r\n                        <option value={key}>{key}</option>\r\n                    )\r\n                })}\r\n            </select>\r\n            <button onClick={loadFile} >Load</button>\r\n\r\n            {\r\n                !isCompare ? null : (\r\n                    <>\r\n                        <select onChange={handleIndex} >\r\n                            <option value=''>Select</option>\r\n                            <option value=\"auto\">Auto</option>\r\n                            <option value=\"bank\">Bank</option>\r\n                            <option value=\"pb\">Private Bank</option>\r\n                            <option value=\"psub\">PSU Bank</option>\r\n                            <option value=\"fs\">FS</option>\r\n                            <option value=\"pharma\">Pharma</option>\r\n                            <option value=\"fmcg\">FMCG</option>\r\n                            <option value=\"it\">IT</option>\r\n                            <option value=\"media\">Media</option>\r\n                            <option value=\"metal\">Metal</option>\r\n                            <option value=\"realty\">Realty</option>\r\n                        </select>\r\n\r\n                        {/*<select onChange={handleSelect.bind(null, 'other')} >\r\n                            <option value=''>Select</option>\r\n                            {Array.from({ length: 22 }, (_, key) => {\r\n                                return (\r\n                                    <option value={key}>{key}</option>\r\n                                )\r\n                            })}\r\n                        </select>*/}\r\n                        <button onClick={loadFile} >Compare</button>\r\n                    </>\r\n                )\r\n\r\n            }\r\n\r\n            <button onClick={clearLast} >Clear Index</button>\r\n            <button onClick={clearChart} >Clear All</button>\r\n            <Chart\r\n                data={chartData}\r\n                uniqYear={uniqYear}\r\n                yAxis={yAxis}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Charts;","import style from 'styled-components';\r\n\r\nconst Container = style.div`\r\n\tmargin:15px;\r\n\t>\r\n\t.headingContainer{\r\n\t\tfont-weight:bold;\r\n\t\tmargin-top:10px;\r\n\t\tdisplay:flex;\t\t\r\n\t}\r\n\t\r\n\t.headingContainer .title{\r\n\t\twidth:150px;\r\n\t}\r\n\t.headingContainer .stats{\r\n\t\tfont-weight:normal;\r\n\t}\r\n\t.headingContainer .stats.up{\r\n\t\tfont-weight:bold;\r\n\t\tcolor:green;\r\n\t}\r\n`;\r\n\r\nexport {\r\n    Container\r\n}","import React,{useState} from 'react';\r\nimport res from './res.json';\r\nimport {Container} from './style.js';\r\nimport DataTable from 'react-data-table-component';\r\n\r\n\r\nconst columns = [\r\n    {\r\n        name: 'Date',\r\n        selector: row => row.match[0].srcDate,\r\n    },\r\n\t{\r\n\t\tname: 'MDate',\r\n        selector: row => row.match[0].mtDate,\r\n\t},\r\n    {\r\n        name: 'Symbol',\r\n        selector: row => row.match[0].mtSymbol,\r\n    },\r\n    {\r\n        name: 'Open',\r\n        selector: row => row.match[0].projOpen,\r\n    },\r\n    {\r\n        name: 'Close',\r\n        selector: row => row.match[0].projClose,\r\n    },\r\n\t{\r\n        name: 'Diff',\r\n        selector: row => row.match[0].diff,\r\n    },\r\n\t\r\n\t{\r\n        name: 'Five',\r\n        selector: row => row.match[0].fifth,\r\n    },\r\n\t{\r\n        name: 'Ten',\r\n        selector: row => row.match[0].tenth,\r\n    },\r\n\t{\r\n        name: 'Fourteen',\r\n        selector: row => row.match[0].fourteenth,\r\n    }\r\n];\r\n\r\nconst conditionalRowStyles = [\r\n  {\r\n    when: row => row.match[0].projOpen < row.match[0].projClose,\r\n    style: {\r\n      backgroundColor: 'seagreen',\r\n      color: 'white',\r\n      '&:hover': {\r\n        cursor: 'pointer',\r\n      },\r\n    },\r\n  },\r\n  \r\n];\r\n\r\nconst checkPosition = (data)=>{\r\n\tlet up= 0;\r\n\tlet down = 0;\r\n\tlet eq=0;\r\n\tdata.forEach(dt=>{\r\n\t\tif(dt.match[0].projOpen > dt.match[0].projClose){\r\n\t\t\tdown++; \r\n\t\t}\r\n\t\telse if(dt.match[0].projOpen < dt.match[0].projClose){\r\n\t\t\tup++; \r\n\t\t}\r\n\t\telse {\r\n\t\t\teq++;\r\n\t\t}\r\n\t})\r\n\treturn {\r\n\t\tup,down,eq\r\n\t}\r\n}\r\n\r\nconst calcPercentage = (oldNum, newNum) => {\r\n    const num1 = oldNum;\r\n    const num2 = newNum;\r\n    return (((num2 - num1) / num1) * 100).toFixed(2);\r\n}\r\n\r\nconst processData =(data)=>{\r\n\treturn data.map(dt=>{\r\n\t\tconst diff = calcPercentage(dt.match[0].projOpen,dt.match[0].projClose);\r\n\t\tdt.match[0].diff = diff;\r\n\t})\r\n}\r\n\r\nconst View = ({symbol,data})=>{\r\n\tconst [showSymb, setSymb] = useState(false);\r\n\tconst {up,down,eq} = checkPosition(data[symbol]);\r\n\tconst handleClick =()=>{\r\n\t\tsetSymb(!showSymb);\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className ='headingContainer' onClick = {handleClick} >\r\n\t\t\t\t<div className = 'title'>{symbol}</div>\r\n\t\t\t\t<div className = {`stats ${up>down ? 'up': down > eq ? 'down': 'eq'}`}> UP:{up} Down:{down} EQ:{eq}</div>\r\n\t\t\t</div>\t\t\t\t\t\t\r\n\t\t\t{\r\n\t\t\tshowSymb && <DataTable\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdata={data[symbol]}\r\n\t\t\t\tconditionalRowStyles={conditionalRowStyles}\r\n\t\t\t/>\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\nconst LoadData =({data})=>{\r\n\tconst symbols = Object.keys(data);\r\n\treturn(\r\n\t\t<Container>\r\n\t\t\t{\r\n\t\t\t\tsymbols.map(symbol=>{\r\n\t\t\t\t\tif(data[symbol].length){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst dt = processData(data[symbol]);\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<View symbol= {symbol} data={data} />\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nconst ProcessDays = ({day,data})=>{\r\n\tconst [showData, setShowData] = useState(false);\r\n\tconst handleClick = ()=>{\r\n\t\tsetShowData(!showData);\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className ='headingContainer' onClick = {handleClick}>{day}</div>\r\n\t\t\t{showData && <LoadData data= {data[day]} />} \r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst Fp =()=>{\r\n\t\r\n\treturn(\r\n\t\t<Container>\r\n\t\t\t{\r\n\t\t\t\tres.map(data=>{\r\n\t\t\t\t\t\tconst day = Object.keys(data);\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst len = Object.keys(data[day[0]]).length;\r\n\t\t\t\t\t\treturn !!len && <ProcessDays day = { day } data={data}/>\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default Fp;","import { useState } from 'react';\r\nimport './App.css';\r\nimport { Container, Header } from './Styles/Container'\r\nimport { Provider } from './store';\r\n\r\nimport Screener from './Screener';\r\nimport Charts from './charts';\r\nimport Fp from './fp';\r\nfunction App() {\r\n  const [showChart, setChart] = useState(false);\r\n  const [showFp, setFp] = useState(false);\r\n  const handleChart = () => {\r\n    setChart(!showChart);\r\n  }\r\n  const handleFP = () => {\r\n    setFp(!showFp);\r\n  }\r\n  return (\r\n    <>\r\n      <Header>\r\n        <div>\r\n          <button onClick={handleChart} >Show Chart</button> &nbsp;\r\n\t\t  <button onClick={handleFP} >FP</button>\r\n        </div>\r\n        <div>v2.1.25</div>\r\n      </Header>\r\n      <Container showChart={showChart || showFp}>\r\n        {showChart ? <Charts /> : showFp ? <Fp />: <Screener />}\t\t\r\n      </Container>\t  \r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <Provider>\r\n      <App />\r\n    </Provider>\r\n  )\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import styled from 'styled-components';\r\n\r\nconst ModalContainer = styled.div`\r\n    position:fixed;\r\n    width:100%;\r\n    height:100%;\r\n    right:0;\r\n    left:0;\r\n    top:0;\r\n    z-index:1000;\r\n    background:rgb(0, 0, 0, 0.4);\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;    \r\n    overflow:hidden;\r\n`;\r\n\r\nconst ModalBody = styled.div`\r\n    position:relative;\r\n    background:white;\r\n    max-width:100%;\r\n    max-height:100%;\r\n    padding:5px;\r\n    overflow:auto;\r\n`;\r\n\r\nconst ModalClose = styled.div`\r\n    position:absolute;\r\n    top:0;\r\n    right:0;\r\n    padding:5px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display:flex;\r\n    flex-wrap: wrap;\r\n    \r\n    >\r\n    div{\r\n        margin:5px;\r\n        max-width:20%;        \r\n    }\r\n    table tr th{\r\n        position:relative;\r\n    }\r\n    \r\n`;\r\nexport {\r\n    ModalContainer,\r\n    ModalBody,\r\n    ModalClose,\r\n    Content\r\n}","export const cols = {\r\n    eps: { cols: ['EPSQtrRs', 'EPSPrevQtrRs', 'EPS12M', 'EPSAnnRs', 'EPSPrevAnnRs', 'EPSPYQtrRs'], order: 'desc', isRound: true },\r\n    npm: { cols: ['NPMAnn', 'NPMPrevAnn', 'NPMQtr', 'NPMPrevQtr', 'NPMPYQtr'], order: 'desc', isRound: true },\r\n    opm: { cols: ['OPM', 'OPMAnn', 'OPMPrevAnn', 'OPMQtr', 'OPMPrevQtr', 'OPMPYQtr'], order: 'desc', isRound: true },\r\n    sales: { cols: ['Salesgrowth', 'QtrSalesVar'], order: 'desc', isRound: true },\r\n    roe: { cols: ['ROE', 'ROEPrevAnn'], order: 'desc', isRound: true },\r\n    roce: { cols: ['ROCE', 'ROCEPrevYr'], order: 'desc', isRound: true },\r\n    cashFlow: { cols: ['FreeCashFlowRsCr', 'FCFPrevAnnRsCr'], order: 'desc', isRound: true },\r\n    debt: { cols: ['Debt to Eq'], order: 'asc', isRound: true },\r\n    pe: { cols: ['PERatio'], order: 'asc', isRound: true },\r\n    ey: { cols: ['EarningsYield'], order: 'desc', isRound: true },\r\n    qqp: { cols: ['QoQProfits'], order: 'desc', isRound: true },\r\n    qqs: { cols: ['QoQSales'], order: 'desc', isRound: true },\r\n    yyp: { cols: ['QtrProfitVar'], order: 'desc', isRound: true },\r\n    yys: { cols: ['QtrSalesVar'], order: 'desc', isRound: true },\r\n    r: { cols: ['Rank'], order: 'asc', isRound: false },\r\n    er: { cols: ['EarningsYieldRank'], order: 'asc', isRound: false },\r\n    rr: { cols: ['ROCERank'], order: 'asc', isRound: false }\r\n};\r\nexport const colsOrder = ['qqp', 'qqs', 'yyp', 'yys', 'eps', 'npm', 'opm', 'sales', 'roe', 'roce', 'cashFlow', 'debt', 'pe', 'ey'];\r\n\r\nexport const rankCols = ['EarningsYield', 'ROCE'];\r\n\r\nexport const allowNegative = ['mc50', 'mcpd50', 'mc200', 'mc200Diff', 'mc1', 'GN'];\r\n\r\n\r\n","const findSymbol = (a, b) => {\r\n    const splitString = b.split(',');\r\n    return splitString.find(v => a === v.trim());\r\n}\r\nconst search = {\r\n    '>': (a, b) => (parseFloat(a) > parseFloat(b)),\r\n    '>=': (a, b) => (parseFloat(a) >= parseFloat(b)),\r\n    '<': (a, b) => ((parseFloat(a) < parseFloat(b)) && a >= 0),\r\n    '<=': (a, b) => ((parseFloat(a) <= parseFloat(b)) && a >= 0),\r\n    '!=': (a, b) => (parseFloat(a) != parseFloat(b)),\r\n    '==': (a, b) => (parseFloat(a) == parseFloat(b)),\r\n    'GT': (a, b) => (parseFloat(a) >= parseFloat(b)),\r\n    'LT': (a, b) => (parseFloat(a) <= parseFloat(b)),\r\n    'GTA': (a, b) => (parseFloat(a) >= parseFloat(b)),\r\n    'LTA': (a, b) => ((parseFloat(a) <= parseFloat(b)) && a >= 0),\r\n    'SYMB': findSymbol\r\n}\r\n\r\nexport default search","import styled from 'styled-components';\r\n\r\n\r\nconst Table = styled.table`\r\nborder:1px solid;\r\n`;\r\n\r\nconst Avg = styled.div`\r\n    background: skyblue;\r\n    border-radius:50%;\r\n    font-size:9px;\r\n`\r\nconst Th = styled.th``;\r\nconst TD = styled.th``;\r\n\r\nexport {\r\n    Table,\r\n    Avg\r\n\r\n}","export const COLOR = {\r\n    RESULT: {\r\n        ABOVE_NINTY: { background: 'green', color: 'rgb(255,255,255)' },\r\n        ABOVE_EIGHTY: { background: 'lightgreen', color: 'rgb(255,255,255)' },\r\n        ABOVE_SEVENTY: { background: 'skyblue', color: 'rgb(255,255,255)' },\r\n        ABOVE_SIXTY: { background: 'orange', color: 'rgb(255,255,255)' },\r\n        ABOVE_FIFTY: { background: 'yellow', color: 'rgb(255,255,255)' },\r\n        BELOW_FIFTY: { background: 'red', color: 'rgb(255,255,255)' }\r\n    }\r\n}\r\n\r\n\r\nexport const BANKS = [\r\n    'HDFC Bank',\r\n    'ICICI Bank',\r\n    'St Bk of India',\r\n    'Kotak Mah. Bank',\r\n    'Axis Bank',\r\n    'IndusInd Bank',\r\n    'Bank of Baroda',\r\n    'IDBI Bank',\r\n    'Bandhan Bank',\r\n    'Canara Bank',\r\n    'Punjab Natl.Bank',\r\n    'AU Small Finance',\r\n    'I O B',\r\n    'Yes Bank',\r\n    'Union Bank (I)',\r\n    'IDFC First Bank',\r\n    'Federal Bank',\r\n    'Bank of India',\r\n    'Indian Bank',\r\n    'Central Bank',\r\n    'UCO Bank',\r\n    'Bank of Maha',\r\n    'City Union Bank',\r\n    'RBL Bank',\r\n    'Equitas Sma. Fin',\r\n    'Pun. & Sind Bank',\r\n    'Karur Vysya Bank',\r\n    'CSB Bank',\r\n    'J & K Bank',\r\n    'Ujjivan Small',\r\n    'Fino Payments',\r\n    'DCB Bank',\r\n    'Karnataka Bank',\r\n    'South Ind.Bank',\r\n    'Suryoday Small',\r\n    'Dhanlaxmi Bank'\r\n]\r\n\r\nexport const FIN_SERVICE = [\r\n    'H D F C',\r\n    'Bajaj Finance',\r\n    'Bajaj Finserv',\r\n    'SBI Cards',\r\n    'Cholaman.Inv.&Fn',\r\n    'Bajaj Holdings',\r\n    'Muthoot Finance',\r\n    'HDFC AMC',\r\n    'Shriram Trans.',\r\n    'Power Fin.Corpn.',\r\n    'I R F C',\r\n    'Max Financial',\r\n    'Aditya Birla Cap',\r\n    'REC Ltd',\r\n    'Sundaram Finance',\r\n    'Nippon Life Ind.',\r\n    'AAVAS Financiers',\r\n    'ICICI Securities',\r\n    'LIC Housing Fin.',\r\n    'Aptus Value Hou.',\r\n    'M & M Fin. Serv.',\r\n    'Poonawalla Fin',\r\n    'L&T Fin.Holdings',\r\n    'Aditya AMC',\r\n    'IIFL Wealth Mgt',\r\n    'UTI AMC',\r\n    'Motil.Oswal.Fin.',\r\n    'CreditAcc. Gram.',\r\n    'Angel One',\r\n    'IIFL Finance',\r\n    'Chola Financial',\r\n    'Capri Global',\r\n    'Shri.City Union.',\r\n    'Manappuram Fin.',\r\n    'I D F C',\r\n    'Can Fin Homes',\r\n    'Indiabulls Hous.',\r\n    'Tata Inv.Corpn.',\r\n    'H U D C O',\r\n    'PNB Housing',\r\n    'Home First Finan',\r\n    'JM Financial',\r\n    'Kama Holdings',\r\n    'Edelweiss.Fin.',\r\n    'JSW Holdings',\r\n    'Dhani Services',\r\n    'Mah. Scooters',\r\n    'Religare Enterp.',\r\n    'Equitas Holdings',\r\n    'Share India Sec.',\r\n    'MAS FINANC SER',\r\n    'Indostar Capital',\r\n    'Bengal & Assam',\r\n    'IIFL Securities',\r\n    'Paisalo Digital',\r\n    'IFCI',\r\n    'Authum Invest',\r\n    'Spandana Sphoort',\r\n    'Anand Rathi Wea.',\r\n    'Pilani Invest.',\r\n    'Sundaram Fin.Hol',\r\n    'Max Ventures',\r\n    'Kirloskar Indus.',\r\n    'Ujjivan Fin.Ser.',\r\n    'Dolat Investment',\r\n    'Ugro Capital',\r\n    'Repco Home Fin',\r\n    'Vardhman Hold.',\r\n    'Sastasundar Ven.',\r\n    'PNB Gilts',\r\n    'Choice Intl.',\r\n    'BF Investment',\r\n    'Centrum Capital',\r\n    'Dhanvarsha Finv.',\r\n    'Nahar Capital',\r\n    'PTC India Fin',\r\n    'Magellanic Cloud',\r\n    '5Paisa Capital',\r\n    'Balmer Law. Inv.',\r\n    'Rane Holdings',\r\n    'Capital India',\r\n    'SMC Global Sec.',\r\n    'Nalwa Sons Invst',\r\n    'Arman Financial',\r\n    'GFL',\r\n    'GIC Housing Fin',\r\n    'Satin Creditcare',\r\n    'Kalyani Invest.',\r\n    'Mangalam Industr',\r\n    'Summit Securitie',\r\n    'Delphi World',\r\n    'VLS Finance',\r\n    'Monarch Networth',\r\n    'Oswal Green Tech',\r\n    'Niyogin Fintech',\r\n    'NBI Indl. Fin.',\r\n    'The Invest.Trust',\r\n    'Tour. Fin. Corp.',\r\n    'Indian Infotech',\r\n    'Crest Ventures',\r\n    'Finkurve Fin.',\r\n    'Cons. Finvest',\r\n    'Muthoot Cap.Serv',\r\n    'Vaarad Ventures',\r\n    'Systematix Corp.',\r\n    'Oswal Agro Mills',\r\n    'Kiran Vyapar',\r\n    'Dhunseri Invest.',\r\n    'SIL Investments',\r\n    'Reliance Capital',\r\n    'Inventure Grow.',\r\n    'CSL Finance',\r\n    'Saraswati Commer',\r\n    'PMC Fincorp',\r\n    'Master Trust',\r\n    'IKAB Securities',\r\n    'Indo Thai Sec.',\r\n    'Apollo Finvest',\r\n    'Prime Securities',\r\n    'Wealth First Por',\r\n    'SREI Infra. Fin.',\r\n    'Jindal Photo',\r\n    'A.K.Capital Serv',\r\n    'BNK Capital',\r\n    'Almondz Global',\r\n    'Moneyboxx Fin.',\r\n    'Jindal Poly Inve',\r\n    'KIFS Financial',\r\n    'Indl.& Prud.Inv.',\r\n    'STEL Holdings',\r\n    'Swiss Military',\r\n    'IL&FS Inv.Manag.',\r\n    'Reliance Home',\r\n    'Baid Leasing',\r\n    'Avonmore Capital',\r\n    'Bombay Oxygen',\r\n    'Mangal Credit',\r\n    'SRG Housing',\r\n    'Capital Trust',\r\n    'Shardul Sec.',\r\n    'A R C Finance',\r\n    'BFL Asset Finves',\r\n    'Star Housing Fin',\r\n    'Indl. Inv. Trust',\r\n    'Coral India Fin.',\r\n    'Guj. Credit Corp',\r\n    'U. Y. Fincorp',\r\n    'ISF',\r\n    'Sakthi Finance',\r\n    'Banas Finance',\r\n    'APM Finvest',\r\n    'McDowell Hold.',\r\n    'BLB',\r\n    'SPS Finquest',\r\n    'Naga Dhunseri',\r\n    'Maha Rashtra Apx',\r\n    'RSD Finance',\r\n    'LKP Finance',\r\n    'Paul Merchants',\r\n    'Ganges Securitie',\r\n    'Pan India Corpor',\r\n    'Yamini Invest',\r\n    'Smartlink Hold.',\r\n    'Startech Fin.',\r\n    'Vibrant Glo. Cap',\r\n    'Motor & Gen Fin',\r\n    'Biogen Pharma',\r\n    'LKP Securities',\r\n    'NCl Res. & Finl.',\r\n    'Pro Fin Capital',\r\n    'Salem Erode Inv.',\r\n    'Assam Entrade',\r\n    'Welspun Investme',\r\n    'Guj. State Fin.',\r\n    'Flomic Global',\r\n    'Palash Securi.',\r\n    'Shalibhadra Fin.',\r\n    'Sharp Investment',\r\n    'Saumya Cons',\r\n    'Available Fin.',\r\n    'Shriram AMC',\r\n    'Ausom Enter.',\r\n    'Apoorva Leasing',\r\n    'GCM Securit.',\r\n    'Advik Capital',\r\n    'Keynote Finan.',\r\n    'Capital Trade Lk',\r\n    'Upsurge Invest.',\r\n    'Stampede Cap.',\r\n    'Lohia Securities',\r\n    'Mukesh Babu Fin.',\r\n    'India Finsec',\r\n    'Inditrade Cap.',\r\n    'IndiaNivesh',\r\n    'Gogia Capital',\r\n    'Aryaman Fin.Serv',\r\n    'Shree Worstex',\r\n    'Sulabh Engineers',\r\n    'Tamboli Capital',\r\n    'Munoth Capital',\r\n    'Emerald Leasing',\r\n    'Stampade Cap-DVR',\r\n    'Times Guaranty',\r\n    'ICDS',\r\n    'Alfred Herbert',\r\n    'Galactico Corpo.',\r\n    'Wallfort Fin.',\r\n    'India Home Loans',\r\n    'Bhartia Bachat',\r\n    'Innovassynth Inv',\r\n    'Suchitra Finance',\r\n    'Acme Resources',\r\n    'Sonal Mercantile',\r\n    'Morarka Finance',\r\n    'Kreon Finnancial',\r\n    'Pioneer Invest',\r\n    'Intec Capital',\r\n    'Ashika Credit',\r\n    'Luharuka Media',\r\n    'Sumedha Fiscal',\r\n    'Utique Enterp.',\r\n    'BCL Enterprises',\r\n    'Dhanlaxmi Cotex',\r\n    'Leading Lea. Fin',\r\n    'TCFC Finance',\r\n    'Arnold Holdings',\r\n    'Joindre Capital',\r\n    'Futuristic Solu',\r\n    'ISL Consulting',\r\n    'Aryaman Capital',\r\n    'Anupam Finserv',\r\n    'TTI Enterprise',\r\n    'P. H. Capital',\r\n    'Ceejay Finance',\r\n    'Odyssey Corpn.',\r\n    'Som Datt Finance',\r\n    'HB Portfolio',\r\n    'Ashirwad Cap.',\r\n    'Akashdeep Metal',\r\n    'HB Stockholdings',\r\n    'Stanrose Mafat.',\r\n    'Viji Finance',\r\n    'CNI Research',\r\n    'Sainik Finance',\r\n    'Oracle Credit',\r\n    'Asit C Mehta Fin',\r\n    'Mega Corp.',\r\n    'West Leisure',\r\n    'Comfort Fincap',\r\n    'Morgan Ventures',\r\n    'Abhinav Capital',\r\n    'Sahara Housing',\r\n    'Premier Cap Serv',\r\n    'IM+ Capitals',\r\n    '3P Land Hold.',\r\n    'B N Rathi Sec.',\r\n    'Key Corp',\r\n    'Ascom Leasing &',\r\n    'Haryana Capfin',\r\n    'Lak. Fin. & Indl',\r\n    'Gilada Finance',\r\n    'Stephanotis Fin.',\r\n    'Escorts Finance',\r\n    'Supra Pacific',\r\n    'SKP Securities',\r\n    'Garbi Finvest',\r\n    'Real Touch Fin',\r\n    'Ind Bank Housing',\r\n    '21st Cent. Mgmt.',\r\n    'Kapashi Commerc.',\r\n    'Wall Street Fin.',\r\n    'Onesource Ideas',\r\n    'Greencrest Finan',\r\n    'AD Manum Finance',\r\n    'Panafic Industri',\r\n    'Khandwala Sec.',\r\n    'Intellivate Capi',\r\n    'Williamson Magor',\r\n    'Alacrity Sec.',\r\n    'Goldline Intl.',\r\n    'Prism Finance',\r\n    'Elixir Capital',\r\n    'Monotype India',\r\n    'Smart Finsec',\r\n    'Bervin Invest.',\r\n    'Transwar.Fin.',\r\n    'Kiduja India',\r\n    'India Cem. Cap.',\r\n    'Nalin Lease Fin.',\r\n    'SMIFS Cap. Mkt.',\r\n    'Jindal Capital',\r\n    'Visco Trade',\r\n    'Cubical Finan',\r\n    'Charter. Capital',\r\n    'Meenakshi Enter.',\r\n    'Intelli.Capital.',\r\n    'Trishakti Elect.',\r\n    'Canopy Finance',\r\n    'Sunshine Capital',\r\n    'Moongipa Sec.',\r\n    'Karnavati Financ',\r\n    'Comfort Comtrade',\r\n    'Econo Trade Indi',\r\n    'Worth Investment',\r\n    'India Lease Dev.',\r\n    'Octal Credit Cap',\r\n    'Optimus Finance',\r\n    'Roselabs Finance',\r\n    'Nam Securities',\r\n    'Indo Asia Financ',\r\n    'Abhishek Finle.',\r\n    'Glance Finance',\r\n    'Easun Capital Ma',\r\n    'Qgo Finance',\r\n    'Oasis Securities',\r\n    'Onelife Capital',\r\n    'Abhinav Leasing',\r\n    'Disha Resources',\r\n    'Sellwin Traders',\r\n    'Srestha Finvest',\r\n    'Ontic Finserve',\r\n    'Franklin Leasing',\r\n    'Goenka Business',\r\n    'Siel Fin. Serv.',\r\n    'Daulat Securitie',\r\n    'BAMPSL Sec.',\r\n    'Vertex Secur.',\r\n    'Nagreeka Cap.',\r\n    'Indus Finance',\r\n    'Global Cap.Mkt.',\r\n    'Libord Finance',\r\n    'Amrapali Capital',\r\n    'Margo Finance',\r\n    'Gemstone Invest.',\r\n    'MPIL Corporation',\r\n    'Shreevatsaa Fin.',\r\n    'Purshottam Inves',\r\n    'KBS India',\r\n    'Cont. Securities',\r\n    'Voltaire Leasing',\r\n    'S P Capital Fin.',\r\n    'Goyal Associates',\r\n    'Dynamic Portfol',\r\n    'Prime Industries',\r\n    'KJMC Corporate',\r\n    'Vishvprabha Ven.',\r\n    'KJMC Financial',\r\n    'Neil Industries',\r\n    'Spark. (I) Finsh',\r\n    'Wagend Infra',\r\n    'Inter Globe Fin',\r\n    'Adinath Exim Res',\r\n    'Naysaa Securi.',\r\n    'Sugal & Damani',\r\n    'Aravali Sec.&Fin',\r\n    'Avasara Finance',\r\n    'MASK INVESTMENTS',\r\n    'Northlink Fiscal',\r\n    'Indo-City Info.',\r\n    'Superior Finleas',\r\n    'Stellar Capital',\r\n    'GCM Capital',\r\n    'Inani Securities',\r\n    'Rapid Invest.',\r\n    'J Taparia Proj',\r\n    'Amerise BioScie',\r\n    'Integra Capital',\r\n    'Mehta Securities',\r\n    'Bharat Bhushan',\r\n    'NPR Finance',\r\n    'Polytex India',\r\n    'Esaar (India)',\r\n    'S R G Securities',\r\n    'DCM Financial',\r\n    'United Credit',\r\n    'S I Cap. & Fin.',\r\n    'Sujala Trading &',\r\n    'Amforge Inds.',\r\n    'J J Finance Corp',\r\n    'Mehta Housg. Fin',\r\n    'Essar Securities',\r\n    'Nidhi Granites',\r\n    'Helpage Finlease',\r\n    'Dalal Street Inv',\r\n    'Mansi Fin.(Chen)',\r\n    'TCI Finance',\r\n    'Enbee Trade',\r\n    'Amarnath Sec.',\r\n    'Manipal Fin. Cor',\r\n    'Shyamkamal Inv',\r\n    'Arunis Abode',\r\n    'Paragon Finance',\r\n    'Focus Business',\r\n    'Seven Hill Inds.',\r\n    'First Custodian',\r\n    'Tokyo Finance',\r\n    'Thirani Projects',\r\n    'Hasti Finance',\r\n    'Money Masters',\r\n    'Sai Capital',\r\n    'Gowra Leasing',\r\n    'Shree Salasar',\r\n    'Decillion Financ',\r\n    'Guj. Lease Fin.',\r\n    'Anjani Finance',\r\n    'Moongipa Capital',\r\n    'Parsharti Invest',\r\n    'NDA Securities',\r\n    'Modern Engineer.',\r\n    'Manraj Hsg.Fin.',\r\n    'Upasana Finance',\r\n    'Trimurthi',\r\n    'Marg Techno-Proj',\r\n    'K K Fincorp',\r\n    'Kanungo Financi.',\r\n    'KD Leisures',\r\n    'Bridge Securitie',\r\n    'Regency Fincorp',\r\n    'Savani Financial',\r\n    'K Z Leasing',\r\n    'Alps Motor Fin',\r\n    'Shiv Om Invst &',\r\n    'Ushakiran Fin.',\r\n    'Shivansh Finserv',\r\n    'Williamson Fin.',\r\n    'Anna Infrastruct',\r\n    'Photon Capital',\r\n    'Libord Securitie',\r\n    'Gallops Enterp.',\r\n    'Modern Shares',\r\n    'SW Investments',\r\n    'Asia Capital',\r\n    'Beryl Securities',\r\n    'Unishire Urban',\r\n    'Classic Leasing',\r\n    'V B Desai Fin.',\r\n    'Golech.Glob.Fin.',\r\n    'Quest Financial',\r\n    'GCM Commodity',\r\n    'SHRI NIWAS L& F.',\r\n    'Trinity League',\r\n    'Galada Finance',\r\n    'G K Consultants',\r\n    'B P Capital',\r\n    'GSB Finance',\r\n    'Multipurpose Trd',\r\n    'Kapil Raj Financ',\r\n    'HB Leasing &Fin.',\r\n    'Bazel Internatio',\r\n    'Sita Enterprises',\r\n    'Adcon Capital',\r\n    'Thirdwave Fin.',\r\n    'Ramsons Projects',\r\n    'Cindrella Fin.',\r\n    'Minolta Finance',\r\n    'Kumbhat Fin.',\r\n    'Madhusudan Sec.',\r\n    'Mehta Integrat.',\r\n    'Ramchandra Leas.',\r\n    'Munoth Fin.Serv.',\r\n    'Krishna Capital',\r\n    'Dharani Finance',\r\n    'Sterling Guaran.',\r\n    'Nikki Glob.Fin.',\r\n    'SSPN FINANCE',\r\n    'Systematix Sec.',\r\n    'Fruition Venture',\r\n    'Ganesh Holdings',\r\n    'Lead Financial S',\r\n    'Regency Trust',\r\n    'Prem Somani Fin.',\r\n    'Gujarat Investa',\r\n    'Step Two Corp.',\r\n    'Harmony Capital',\r\n    'Jagsonpal Fin.',\r\n    'Sungold Capital',\r\n    'Pacheli Indust.',\r\n    'Vani Commercials',\r\n    'Jayabharat Cred.',\r\n    'MILGREY FIN.&INV',\r\n    'KLG Capital',\r\n    'Maruti Sec.',\r\n    'Nicco Uco All.',\r\n    'Mid East Port.',\r\n    'Ekam Leasing',\r\n    'F Mec Intl. Fin.',\r\n    'Kinetic Trust',\r\n    'Vintage Secur.',\r\n    'JPT Securities',\r\n    'Vikalp Securitie',\r\n    'GSL Securities',\r\n    'Futuristic Sec.',\r\n    'Blue Chip India',\r\n    'BOSTON LEA.&FIN.',\r\n    'Capfin India',\r\n    'VCK Cap. Mkt.',\r\n    'Abirami Fin.',\r\n    'Jhaveri Credits',\r\n    'Five X Tradecom',\r\n    'Class. Gl. Fin.',\r\n    'Aneri Fincap',\r\n    'Shree Nidhi Trad',\r\n    'Devki Leasing',\r\n    'Mahan Industries',\r\n    'Dhruva Cap.Serv.',\r\n    'Regal Entertain.',\r\n    'Geetanjali Cred.',\r\n    'Crescent Leasing',\r\n    'Vax Housing Fin.',\r\n    'Brijlaxmi Leas.',\r\n    'Tridev Infra.',\r\n    'Darjeeling Ropew',\r\n    'R R Securities',\r\n    'ATN Intl.',\r\n    'Stellant Secu.',\r\n    'Silicon Valley',\r\n    'Kuber Udyog',\r\n    'Magnanimous Trad',\r\n    'Swastik Safe Dep'\r\n];\r\n\r\nexport const INS = [\r\n    'SBI Life Insuran',\r\n    'HDFC Life Insur.',\r\n    'ICICI Pru Life',\r\n    'ICICI Lombard',\r\n    'Star Health Insu',\r\n    'General Insuranc',\r\n    'New India Assura'\r\n]\r\n\r\nexport const GOV = ['Agro Dutch Inds.',\r\n    'Allahabad Bank',\r\n    'Andrew Yule & Co',\r\n    'Balmer Law. Inv.',\r\n    'Bank of Baroda',\r\n    'Bank of India',\r\n    'Bank of Maha',\r\n    'BEML Ltd',\r\n    'Bharat Dynamics',\r\n    'Bharat Electron',\r\n    'B H E L',\r\n    'Bharat Immunolog',\r\n    'B P C L',\r\n    'Canara Bank',\r\n    'Central Bank',\r\n    'Central Province',\r\n    'Coal India',\r\n    'Cochin Shipyard',\r\n    'Corporation Bank',\r\n    'Dena Bank',\r\n    'Dredging Corpn.',\r\n    'Engineers India',\r\n    'GAIL (India)',\r\n    'Garden Reach Sh.',\r\n    'General Insuranc',\r\n    'Hemisphere Prop',\r\n    'Hind.Aeronautics',\r\n    'Hindustan Copper',\r\n    'Hind.Organ.Chem.',\r\n    'H P C L',\r\n    'Hindustan Zinc',\r\n    'HMT',\r\n    'H U D C O',\r\n    'IDBI Bank',\r\n    'IDFC First Bank',\r\n    'I D F C',\r\n    'IFCI',\r\n    'I T D C',\r\n    'Indian Bank',\r\n    'I O C L',\r\n    'I O B',\r\n    'I R C T C',\r\n    'Indrapr.Medical',\r\n    'Ircon Intl.',\r\n    'ITI',\r\n    'KIOCL',\r\n    'M T N L',\r\n    'Mazagon Dock',\r\n    'Mishra Dhatu Nig',\r\n    'MMTC',\r\n    'MOIL',\r\n    'MSTC',\r\n    'Natl. Aluminium',\r\n    'Natl.Fertilizer',\r\n    'NBCC',\r\n    'NHPC Ltd',\r\n    'NLC India',\r\n    'NMDC',\r\n    'NTPC',\r\n    'O N G C',\r\n    'Oil India',\r\n    'Oriental Bank',\r\n    'Power Fin.Corpn.',\r\n    'Power Grid Corpn',\r\n    'Pun. & Sind Bank',\r\n    'Punjab Natl.Bank',\r\n    'Rail Vikas',\r\n    'Railtel Corpn.',\r\n    'R C F',\r\n    'REC Ltd',\r\n    'Rites',\r\n    'Scooters India',\r\n    'S C I',\r\n    'SJVN',\r\n    'St Bk of India',\r\n    'S T C',\r\n    'S A I L',\r\n    'Syndicate Bank',\r\n    'Tata Comm',\r\n    'UCO Bank',\r\n    'Union Bank (I)',\r\n    'United Bank (I)',\r\n    'Vijaya Bank',\r\n    'Gujarat Gas',\r\n    'Guj Inds. Power',\r\n    'Guj.St.Petronet'\r\n];","import { useEffect, useState } from 'react';\r\nimport action from './../store/action';\r\nimport operators from './../operators';\r\nimport { Avg } from './../Styles/Table';\r\nimport { COLOR, BANKS, FIN_SERVICE, INS, GOV } from './../constants'\r\n\r\nimport './../Tbl.css';\r\nconst Heading = ({ stocks, average, dispatch, selectAll }) => {\r\n    const [isAscending, setAscending] = useState(false);\r\n    const { filters } = stocks[0];\r\n    const cols = Object.keys(filters);\r\n    const sortTable = (col) => {\r\n        let tmpStocks = JSON.parse(JSON.stringify(stocks));\r\n        tmpStocks.sort((a, b) => {\r\n            if (!isAscending) {\r\n                return a.filters[col] - b.filters[col]\r\n            } else {\r\n                return b.filters[col] - a.filters[col]\r\n            }\r\n        });\r\n        setAscending(!isAscending);\r\n        dispatch({ type: action.UPD_STOCKS, data: { stocks: tmpStocks } });\r\n    }\r\n    return (\r\n        <>\r\n            <th>ID <input type=\"checkbox\" onChange={selectAll} /></th>\r\n            <th>StockName</th>\r\n            {cols.map(col => {\r\n                if (!average?.[col]?.val) return <th onClick={sortTable.bind(null, col)} >{col}</th>;\r\n                return <th onClick={sortTable.bind(null, col)} >{col}<Avg>{(Math.round(average[col].val / average[col].len))}</Avg></th>;\r\n            })\r\n            }\r\n            <th>Matches</th>\r\n            <th>Action</th>\r\n        </>\r\n    )\r\n}\r\n\r\nconst CheckCmp = ({ name, value, onChange, average }) => {\r\n    const { rm } = average && average[name] ? average[name] : { rm: [] };\r\n    const isChecked = (value === '' || rm.includes(parseFloat(value))) ? true : false\r\n    const [checked, setChecked] = useState(isChecked);\r\n    useEffect(() => {\r\n        const isChecked = (value === '' || rm.includes(parseFloat(value))) ? true : false;\r\n        setChecked(isChecked);\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        setChecked(!checked);\r\n        onChange(e);\r\n    }\r\n    return (\r\n        <>\r\n            <input type=\"checkbox\" name={name} value={value} onChange={handleChange} checked={checked} />\r\n        </>\r\n    )\r\n}\r\nconst Col = ({ stock, rowNum, average, filtersCnt, searchParams, compare, dispatch }) => {\r\n    const { Name, filters } = stock;\r\n    const cols = Object.keys(filters);\r\n    const [isHighlight, setHighlight] = useState(false);\r\n    const calcPercent = (matchCnt) => {\r\n        if (filtersCnt <= 0) return;\r\n        const percentage = ((matchCnt / filtersCnt) * 100);\r\n        if (percentage >= 90) {\r\n            return COLOR.RESULT.ABOVE_NINTY;\r\n        } else if (percentage >= 80) {\r\n            return COLOR.RESULT.ABOVE_EIGHTY;\r\n        } else if (percentage >= 70) {\r\n            return COLOR.RESULT.ABOVE_SEVENTY;\r\n        } else if (percentage >= 60) {\r\n            return COLOR.RESULT.ABOVE_SIXTY;\r\n        } else if (percentage >= 50) {\r\n            return COLOR.RESULT.ABOVE_FIFTY;\r\n        } else {\r\n            return COLOR.RESULT.BELOW_FIFTY;\r\n        }\r\n    }\r\n    let cnt = 0;\r\n    const processResult = (colName) => {\r\n        const params = searchParams[colName];\r\n\r\n        if (params && operators[params.operator]) {\r\n            const value = (params.operator === 'LT' || params.operator === 'GT') ? (filters[params.value] || 0) : params.value;\r\n            const className = operators[params.operator](filters[colName], value) ? 'greenCol' : 'redCol';\r\n            if (className === 'greenCol') {\r\n                cnt++;\r\n            }\r\n            return className;\r\n        }\r\n        return;\r\n    }\r\n    const handleChange = function (e) {\r\n        const { checked, value, name } = e.target;\r\n        const updType = checked ? 'sub' : 'add';\r\n        dispatch({ type: action.UPD_AVG, data: { updType, filter: name, num: value } });\r\n    }\r\n    const handleDelete = (rowNum) => {\r\n        dispatch({ type: action.DELETE_STOCK, data: { key: rowNum } });\r\n        dispatch({ type: action.ADD_AVG });\r\n    }\r\n    const checkHighlight = () => {\r\n        let tmp = [...compare];\r\n        if (!isHighlight) {\r\n            tmp.push(rowNum);\r\n        } else {\r\n            const index = tmp.indexOf(rowNum);\r\n            if (index >= 0) {\r\n                tmp = [...tmp.slice(0, index), ...tmp.slice(index + 1)];\r\n            }\r\n        }\r\n        setHighlight(!isHighlight);\r\n        dispatch({ type: action.ADD_TO_COMPARE, data: { compare: tmp } });\r\n    }\r\n    const finList = [...BANKS, ...FIN_SERVICE, ...INS];\r\n    const isFin = finList.includes(Name);\r\n    const isGov = GOV.includes(Name);\r\n    const filterClass = isFin ? 'fin' : (isGov ? 'gov' : '')\r\n    return (\r\n        <>\r\n            <td className={`${isHighlight ? 'highlight' : ''} ${filterClass}`}>\r\n                <input type=\"checkbox\" onChange={checkHighlight} />\r\n                {Name}\r\n            </td>\r\n            {\r\n                cols.map((col, key) => {\r\n                    const className = processResult(col, key) || '';\r\n                    return (<td className={`${className} ${isHighlight ? 'highlight' : ''}`} >\r\n\r\n                        <CheckCmp name={col} value={filters[col]} average={average} onChange={handleChange} />\r\n                        {filters[col]}\r\n                    </td>);\r\n                })\r\n            }\r\n            <td className={isHighlight ? 'highlight matches' : 'matches'} style={calcPercent(cnt)}>{cnt}</td>\r\n            <td><button onClick={handleDelete.bind(null, rowNum)}>Delete</button></td>\r\n        </>\r\n    )\r\n}\r\nconst Rows = (props) => {\r\n    const { stock: { id }, selectedRow, selectedIds } = props;\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td>\r\n                    {id}\r\n                    <input type=\"checkbox\" checked={selectedIds.includes(id) ? \"checked\" : \"\"} onChange={selectedRow.bind(null, id)} />\r\n                </td>\r\n                <Col {...props} />\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Tbl = (\r\n    { average, stocks, filtersCnt, searchParams, compare, dispatch }\r\n) => {\r\n    const [selectedIds, setSelectedId] = useState([]);\r\n    const [isSelectAll, setSelectAll] = useState(false);\r\n    const selectedRow = (id, e) => {\r\n        const isChecked = e.target.checked;\r\n\r\n        if (isChecked) {\r\n            setSelectedId([...selectedIds, id]);\r\n        } else {\r\n            const i = selectedIds.indexOf(id);\r\n            setSelectedId([...selectedIds.slice(0, i), ...selectedIds.slice(i + 1)]);\r\n        }\r\n    }\r\n    const handleDelete = () => {\r\n        dispatch({ type: action.DELETE_STOCKS, data: { key: selectedIds } });\r\n        dispatch({ type: action.ADD_AVG });\r\n        setSelectedId([]);\r\n    }\r\n    const selectAll = () => {\r\n        if (!isSelectAll) {\r\n            const allIds = stocks.map(stock => stock.id);\r\n            setSelectedId(allIds);\r\n        } else {\r\n            setSelectedId([]);\r\n        }\r\n        setSelectAll(!isSelectAll);\r\n    }\r\n    const deleteNomatch = () => {\r\n        document.querySelectorAll('.matches').forEach(v => {\r\n            if (v.innerText === '0') {\r\n                setTimeout(() => {\r\n                    v.parentNode.firstChild.querySelector('input').click()\r\n                }, 100);\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <button onClick={handleDelete} >Delete</button>\r\n            <button onClick={deleteNomatch} >Select No Match</button>\r\n            <table border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <Heading selectAll={selectAll} average={average} stocks={stocks} dispatch={dispatch} />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {stocks.map((stock, rowNum) => <Rows selectedIds={selectedIds} selectedRow={selectedRow} stock={stock} compare={compare} rowNum={rowNum} average={average} filtersCnt={filtersCnt} searchParams={searchParams} dispatch={dispatch} />)}\r\n                </tbody>\r\n                <thead>\r\n                    <tr bold=\"1\">\r\n                        <Heading selectAll={selectAll} average={average} stocks={stocks} dispatch={dispatch} />\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\nexport default Tbl;"],"sourceRoot":""}