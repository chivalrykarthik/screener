{"version":3,"sources":["Styles/Txt.js","store/action.js","store/store.js","store/util.js","store/index.js","Txt.js","Filters.js","operators.js","Styles/Table.js","constants.js","Tbl.js","PercentageDiff.js","Styles/Container.js","App.js","reportWebVitals.js","index.js"],"names":["TextArea","styled","textarea","Button","button","Header","div","action","ADD_TEXT","ADD_STOCKS","ADD_FILTERS","ADD_AVG","ADD_SEARCH","UPD_FILTERS","UPD_AVG","DELETE_STOCK","initialState","txt","stocks","filtersList","average","searchParams","filtersCnt","reducer","state","type","data","tmpStocks","JSON","parse","Array","isArray","e","alert","parseStocks","filters","length","Object","keys","map","key","label","value","operator","checked","createFilters","avg","forEach","stock","filter","val","parseFloat","len","getAvg","cnt","searchObj","reduce","acc","tmp","addToSearch","updFilters","col","updFilter","updAverage","updType","num","parseNum","stringify","updAvg","updStocks","slice","deleteStock","ScreenContext","createContext","Provider","children","store","useReducer","useStore","useContext","Txt","dispatch","onChange","target","placeholder","onClick","CompareDropDown","handleChange","name","Rows","rowNum","useState","isCompare","setCompare","Math","round","style","display","flexDirection","justifyContent","width","margin","autoComplete","Filters","className","search","a","b","Avg","table","COLOR","th","ABOVE_NINTY","background","color","ABOVE_EIGHTY","ABOVE_SEVENTY","ABOVE_SIXTY","ABOVE_FIFTY","BELOW_FIFTY","Heading","cols","CheckCmp","isChecked","setChecked","Col","Name","colName","params","operators","processResult","matchCnt","percentage","calcPercent","bind","props","Tbl","border","bold","DiffList","precentages","textAlign","diff","PercentageDiff","vals","setVal","setPrecentages","values","split","v","join","per","newNum","orgNum","AddDiff","cmps","setCmp","prompt","CmpName","flexWrap","cmp","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17505354.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n\r\nconst TextArea = styled.textarea`\r\n    height:100px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    width:10%;\r\n    margin:10px 0 0 0;    \r\n`;\r\n\r\nconst Header = styled.div`\r\n    width:100%;\r\n    display:flex;\r\n    flex-direction:column;\r\n`;\r\n\r\nexport {\r\n    TextArea,\r\n    Button,\r\n    Header\r\n}","const action = {\r\n    ADD_TEXT: 'ADD_TEXT',\r\n    ADD_STOCKS: 'ADD_STOCKS',\r\n    ADD_FILTERS: 'ADD_FILTERS',\r\n    ADD_AVG: 'ADD_AVG',\r\n    ADD_SEARCH: 'ADD_SEARCH',\r\n    UPD_FILTERS: 'UPD_FILTERS',\r\n    UPD_AVG: 'UPD_AVG',\r\n    DELETE_STOCK: 'DELETE_STOCK'\r\n}\r\n\r\nexport default action;","import {\r\n    parseStocks,\r\n    createFilters,\r\n    getAvg,\r\n    addToSearch,\r\n    updFilter,\r\n    updAvg,\r\n    deleteStock\r\n} from './util';\r\nexport const initialState = {\r\n    txt: '',\r\n    stocks: [],\r\n    filtersList: [],\r\n    average: {},\r\n    searchParams: {},\r\n    filtersCnt: 0\r\n};\r\n\r\n\r\nexport const reducer = (state, action) => {\r\n    const { type, data } = action;\r\n    switch (type) {\r\n        case \"ADD_TEXT\":\r\n            return { ...state, txt: data.txt };\r\n        case \"ADD_STOCKS\":\r\n            const stocks = parseStocks(state.txt);\r\n            return { ...state, stocks: stocks };\r\n        case \"ADD_FILTERS\":\r\n            const filters = createFilters(state.stocks);\r\n            return { ...state, filtersList: filters };\r\n        case \"ADD_AVG\":\r\n            const avg = getAvg(state.stocks);\r\n            return { ...state, average: avg };\r\n        case \"ADD_SEARCH\":\r\n            const { cnt, searchObj } = addToSearch(state.filtersList);\r\n            return { ...state, searchParams: searchObj, filtersCnt: cnt };\r\n        case \"UPD_FILTERS\":\r\n            const updFilters = updFilter(state.filtersList, data.key, data.col, data.value);\r\n            return { ...state, filtersList: updFilters };\r\n        case \"UPD_AVG\":\r\n            const updAverage = updAvg({ ...data, average: state.average });\r\n            return { ...state, average: updAverage };\r\n        case \"DELETE_STOCK\":\r\n            const updStocks = deleteStock(data.key, state.stocks);\r\n            return { ...state, stocks: updStocks };\r\n        default:\r\n            return state;\r\n    }\r\n}","export const parseStocks = (txt) => {\r\n    try {\r\n        let tmpStocks = JSON.parse(txt);\r\n        if (!Array.isArray(tmpStocks)) { tmpStocks = [tmpStocks] }\r\n        return tmpStocks;\r\n    } catch (e) {\r\n        alert(\"Invlaid JSON\")\r\n    }\r\n}\r\n\r\nexport const createFilters = (stocks) => {\r\n    if (stocks?.length) {\r\n        const firstRow = Object.keys(stocks[0].filters);\r\n        const tmpFilters = firstRow.map((key) => {\r\n            return {\r\n                label: key,\r\n                value: '',\r\n                operator: '',\r\n                checked: false\r\n            }\r\n        });\r\n        return tmpFilters;\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\nexport const getAvg = (stocks) => {\r\n    if (Array.isArray(stocks) && stocks?.length) {\r\n        let avg = {};\r\n        stocks.forEach(stock => {\r\n            const { filters } = stock;\r\n            Object.keys(filters).forEach(filter => {\r\n                const val = parseFloat(avg[filter]?.val || 0) + parseFloat(filters[filter] || 0);\r\n                //const len = stocks.length\r\n                const len = filters[filter] != '' ? (avg[filter]?.len || 0) + 1 : avg[filter]?.len;\r\n                avg[filter] = { val, len };\r\n            });\r\n        });\r\n        return avg;\r\n    }\r\n}\r\n\r\nexport const addToSearch = (filters) => {\r\n    let cnt = 0;\r\n    const searchObj = filters.reduce((acc, val) => {\r\n        if (val.checked) {\r\n            cnt++;\r\n            let tmp = {\r\n                [val.label]: {\r\n                    value: val.value,\r\n                    operator: val.operator,\r\n                }\r\n            };\r\n            return { ...acc, ...tmp };\r\n        }\r\n        return acc;\r\n    }, {});\r\n    return {\r\n        cnt,\r\n        searchObj\r\n    };\r\n}\r\n\r\nexport const updFilter = (filtersList, key, col, value) => {\r\n    const tmp = [...filtersList];\r\n    tmp[key][col] = value;\r\n    return tmp;\r\n}\r\n\r\nexport const updAvg = ({ updType, filter, num, average }) => {\r\n    const parseNum = parseFloat(num) || 0;\r\n    let tmp = JSON.parse(JSON.stringify(average));\r\n    tmp[filter].val = updType === 'sub' ? (tmp[filter].val - (parseNum)) : (parseFloat(tmp[filter].val) + parseNum);\r\n    tmp[filter].len = updType === 'sub' ? (tmp[filter].len - 1) : (parseFloat(tmp[filter].len) + 1);\r\n    //setAverage(tmp);\r\n    return tmp;\r\n}\r\n\r\nexport const deleteStock = (key, stocks) => {\r\n    const newStocks = [...stocks.slice(0, key), ...stocks.slice(key + 1)]\r\n    return newStocks;\r\n};","import React, { useReducer, useContext, createContext } from 'react';\r\nimport { reducer, initialState } from './store';\r\nexport let ScreenContext = createContext({});\r\nexport const Provider = ({ children }) => {\r\n    let store = useReducer(reducer, initialState);\r\n    return (\r\n        <ScreenContext.Provider value={store}>\r\n            {children}\r\n        </ScreenContext.Provider>\r\n    )\r\n};\r\n\r\n\r\nexport const useStore = () => {\r\n    let store = useContext(ScreenContext);\r\n    return store;\r\n}","import { TextArea, Button, Header } from './Styles/Txt'\r\nimport action from './store/action';\r\nimport { useStore } from './store';\r\nconst Txt = () => {\r\n    const [store, dispatch] = useStore();\r\n    const { txt, } = store;\r\n    const handleChange = (e) => {\r\n        const txt = e.target.value;\r\n        const type = action.ADD_TEXT;\r\n        dispatch({ data: { txt }, type });\r\n    }\r\n    const handleSubmit = () => {\r\n        dispatch({ type: action.ADD_STOCKS });\r\n        dispatch({ type: action.ADD_FILTERS });\r\n        dispatch({ type: action.ADD_AVG });\r\n    }\r\n    return (\r\n        <>\r\n            <Header>\r\n                <TextArea value={txt} onChange={handleChange} placeholder='Enter your JSON' />\r\n                <Button onClick={handleSubmit} >Add</Button>\r\n            </Header>\r\n        </>\r\n    )\r\n};\r\nexport default Txt;","import { useState } from 'react';\r\nimport { Button } from './Styles/Txt';\r\nimport { useStore } from './store'\r\nimport action from './store/action';\r\n\r\nconst CompareDropDown = ({ handleChange }) => {\r\n    const [store] = useStore();\r\n    return (\r\n        <>\r\n            <select name='value' onChange={handleChange}>\r\n                <option value=''>Select</option>\r\n                {\r\n                    store.filtersList.map(filter => <option value={filter.label}>{filter.label}</option>)\r\n                }\r\n            </select>\r\n        </>\r\n    )\r\n}\r\nconst Rows = ({ rowNum, label, value, checked }) => {\r\n    const [store, dispatch] = useStore();\r\n    const [isCompare, setCompare] = useState(false);\r\n    const handleChange = (e) => {\r\n        let value = e.target.value;\r\n        const name = e.target.name;\r\n\r\n        if (name === \"checked\") {\r\n            value = !checked;\r\n        }\r\n        if (name === 'operator') {\r\n            if (value === 'GT' || value === 'LT') {\r\n                setCompare(true);\r\n            } else {\r\n                setCompare(false);\r\n            }\r\n            if (value === 'GTA' || value === 'LTA') {\r\n                dispatch({ type: action.UPD_FILTERS, data: { key: rowNum, col: 'value', value: Math.round(store.average[label].val / store.average[label].len) } })\r\n            } else {\r\n                dispatch({ type: action.UPD_FILTERS, data: { key: rowNum, col: 'value', value: '' } })\r\n            }\r\n        }\r\n        dispatch({ type: action.UPD_FILTERS, data: { key: rowNum, col: name, value: value } })\r\n        if ((name === 'operator' || name === 'value') && value) {\r\n            dispatch({ type: action.UPD_FILTERS, data: { key: rowNum, col: 'checked', value: true } })\r\n        }\r\n    }\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", width: \"50%\", margin: \"10px\" }}>\r\n            <div>\r\n                <input type=\"checkbox\" onChange={handleChange} name='checked' checked={checked} />\r\n            </div>\r\n            <div style={{ width: '33%' }}>\r\n                <label>{label}</label>&nbsp;\r\n            </div>\r\n            <div style={{ width: '33%' }}>\r\n                <select name='operator' onChange={handleChange}>\r\n                    <option value=''>Select</option>\r\n                    <option value='>'>Greater</option>\r\n                    <option value='>='>Greater & Equal</option>\r\n                    <option value='<'>Less</option>\r\n                    <option value='<='>Less & equal</option>\r\n                    <option value='!='>Not equal</option>\r\n                    <option value='=='>Equal</option>\r\n                    <option value='GT'>Greater than</option>\r\n                    <option value='LT'>Less than</option>\r\n                    <option value='GTA'>Greater than AVG</option>\r\n                    <option value='LTA'>Less than AVG</option>\r\n                </select>\r\n            </div>\r\n            <div style={{ width: '33%' }}>\r\n                {!isCompare ? <input\r\n                    type=\"text\"\r\n                    placeholder='Value'\r\n                    name='value'\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    autoComplete='off'\r\n                /> : <CompareDropDown handleChange={handleChange} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst Filters = () => {\r\n    const [store, dispatch] = useStore();\r\n    const addToSearch = () => {\r\n        dispatch({ type: action.ADD_SEARCH });\r\n    }\r\n    return (\r\n        <>\r\n            <h5>Filters:</h5>\r\n            <div className='filters'>\r\n\r\n                {\r\n                    store.filtersList.map((filter, key) => <Rows label={filter.label} operator={filter.operator} value={filter.value} checked={filter.checked} key={key} rowNum={key}\r\n                    />)\r\n                }\r\n                <br />\r\n            </div>\r\n            <Button onClick={addToSearch} >Filter</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filters;","const search = {\r\n    '>': (a, b) => (parseFloat(a) > parseFloat(b)),\r\n    '>=': (a, b) => (parseFloat(a) >= parseFloat(b)),\r\n    '<': (a, b) => (parseFloat(a) < parseFloat(b)),\r\n    '<=': (a, b) => (parseFloat(a) <= parseFloat(b)),\r\n    '!=': (a, b) => (parseFloat(a) != parseFloat(b)),\r\n    '==': (a, b) => (parseFloat(a) == parseFloat(b)),\r\n    'GT': (a, b) => (parseFloat(a) >= parseFloat(b)),\r\n    'LT': (a, b) => (parseFloat(a) <= parseFloat(b)),\r\n    'GTA': (a, b) => (parseFloat(a) >= parseFloat(b)),\r\n    'LTA': (a, b) => (parseFloat(a) <= parseFloat(b)),\r\n}\r\n\r\nexport default search","import styled from 'styled-components';\r\n\r\n\r\nconst Table = styled.table`\r\nborder:1px solid;\r\n`;\r\n\r\nconst Avg = styled.div`\r\n    background: skyblue;\r\n    border-radius:50%;\r\n    font-size:9px;\r\n`\r\nconst Th = styled.th``;\r\nconst TD = styled.th``;\r\n\r\nexport {\r\n    Table,\r\n    Avg\r\n\r\n}","export const COLOR = {\r\n    RESULT: {\r\n        ABOVE_NINTY: { background: 'green', color: 'rgb(255,255,255)' },\r\n        ABOVE_EIGHTY: { background: 'lightgreen', color: 'rgb(255,255,255)' },\r\n        ABOVE_SEVENTY: { background: 'skyblue', color: 'rgb(255,255,255)' },\r\n        ABOVE_SIXTY: { background: 'orange', color: 'rgb(255,255,255)' },\r\n        ABOVE_FIFTY: { background: 'yellow', color: 'rgb(255,255,255)' },\r\n        BELOW_FIFTY: { background: 'red', color: 'rgb(255,255,255)' }\r\n    }\r\n}","import { useStore } from './store';\r\nimport action from './store/action';\r\nimport operators from './operators';\r\nimport { Avg } from './Styles/Table';\r\nimport { COLOR } from './constants'\r\nimport { useState } from 'react';\r\nconst Heading = ({ stock, average }) => {\r\n    const { filters } = stock;\r\n    const cols = Object.keys(filters);\r\n    return (\r\n        <>\r\n            <th>StockName</th>\r\n            {cols.map(col => <th>{col}<Avg>{(Math.round(average[col].val / average[col].len))}</Avg></th>)}\r\n            <th>Matches</th>\r\n            <th>Action</th>\r\n        </>\r\n    )\r\n}\r\n\r\nconst CheckCmp = ({ name, value, onChange }) => {\r\n    const isChecked = value === '' ? true : false\r\n    const [checked, setChecked] = useState(isChecked);\r\n    const handleChange = (e) => {\r\n        setChecked(!checked);\r\n        onChange(e);\r\n    }\r\n    return (\r\n        <>\r\n            <input type=\"checkbox\" name={name} value={value} onChange={handleChange} checked={checked} />\r\n        </>\r\n    )\r\n}\r\nconst Col = ({ stock, rowNum }) => {\r\n    const [store, dispatch] = useStore();\r\n    const { Name, filters } = stock;\r\n    const cols = Object.keys(filters);\r\n    const { filtersCnt } = store;\r\n    const calcPercent = (matchCnt) => {\r\n        if (filtersCnt <= 0) return;\r\n        const percentage = ((matchCnt / filtersCnt) * 100);\r\n        if (percentage >= 90) {\r\n            return COLOR.RESULT.ABOVE_NINTY;\r\n        } else if (percentage >= 80) {\r\n            return COLOR.RESULT.ABOVE_EIGHTY;\r\n        } else if (percentage >= 70) {\r\n            return COLOR.RESULT.ABOVE_SEVENTY;\r\n        } else if (percentage >= 60) {\r\n            return COLOR.RESULT.ABOVE_SIXTY;\r\n        } else if (percentage >= 50) {\r\n            return COLOR.RESULT.ABOVE_FIFTY;\r\n        } else {\r\n            return COLOR.RESULT.BELOW_FIFTY;\r\n        }\r\n    }\r\n    let cnt = 0;\r\n    const processResult = (colName) => {\r\n        const params = store.searchParams[colName];\r\n\r\n        if (params && operators[params.operator]) {\r\n            const value = (params.operator === 'LT' || params.operator === 'GT') ? (filters[params.value] || 0) : params.value;\r\n            const className = operators[params.operator](filters[colName], value) ? 'greenCol' : 'redCol';\r\n            if (className === 'greenCol') {\r\n                cnt++;\r\n            }\r\n            return className;\r\n        }\r\n        return;\r\n    }\r\n    const handleChange = function (e) {\r\n        const { checked, value, name } = e.target;\r\n        const updType = checked ? 'sub' : 'add';\r\n        dispatch({ type: action.UPD_AVG, data: { updType, filter: name, num: value } });\r\n    }\r\n    const handleDelete = (rowNum) => {\r\n        dispatch({ type: action.DELETE_STOCK, data: { key: rowNum } });\r\n    }\r\n    return (\r\n        <>\r\n            <td>{Name}</td>\r\n            {\r\n                cols.map((col, key) => {\r\n                    const className = processResult(col, key) || '';\r\n                    return (<td className={className} >\r\n\r\n                        <CheckCmp name={col} value={filters[col]} onChange={handleChange} />\r\n                        {filters[col]}\r\n                    </td>);\r\n                })\r\n            }\r\n            <td style={calcPercent(cnt)}>{cnt}</td>\r\n            <td><button onClick={handleDelete.bind(null, rowNum)}>Delete</button></td>\r\n        </>\r\n    )\r\n}\r\nconst Rows = (props) => {\r\n    return (\r\n        <>\r\n            <tr>\r\n                <Col {...props} />\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Tbl = () => {\r\n    const [store] = useStore();\r\n    return (\r\n        <>\r\n            <table border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <Heading average={store.average} stock={store.stocks[0]} />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {store.stocks.map((stock, rowNum) => <Rows stock={stock} rowNum={rowNum} />)}\r\n                </tbody>\r\n                <thead>\r\n                    <tr bold=\"1\">\r\n                        <Heading average={store.average} stock={store.stocks[0]} />\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\nexport default Tbl;","import { useState } from \"react\";\r\nconst findPerDiff = (newNum, orgNum) => {\r\n    return ((newNum - orgNum) / orgNum) * 100;\r\n}\r\n\r\nconst DiffList = ({ precentages }) => {\r\n    return (\r\n        <table style={{ width: \"10rem\", textAlign: \"left\" }}>\r\n\r\n            {\r\n                precentages.map((percentage) => {\r\n                    return (\r\n                        <tr>\r\n                            <td>{percentage.val}</td>\r\n                            <td>{Math.round(percentage.diff)}%</td>\r\n                        </tr>\r\n                    );\r\n                })\r\n            }\r\n\r\n\r\n        </table>\r\n    )\r\n}\r\n\r\nconst PercentageDiff = ({ label }) => {\r\n    const [vals, setVal] = useState('');\r\n    const [precentages, setPrecentages] = useState([]);\r\n    const values = vals.split(/\\s|%/).filter(v => v).map(v => v.split(',').join(''));\r\n    const onCalc = () => {\r\n        const per = values.reduce((acc, val, key) => {\r\n            let tmp = {\r\n                diff: 0,\r\n                val\r\n            };\r\n            if (key === 0) return [tmp];\r\n            tmp.diff = findPerDiff(val, values[key - 1]);\r\n            return [...acc, tmp];\r\n        }, []);\r\n\r\n        setPrecentages(per);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{ margin: \"0 20px 0 0\" }}>\r\n                <h6>{label}</h6>\r\n                <input type=\"text\" onChange={e => setVal(e.target.value)} />\r\n                <button onClick={onCalc} >Calc</button>\r\n                <DiffList precentages={precentages} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst AddDiff = () => {\r\n    const [cmps, setCmp] = useState([])\r\n    const addCmp = () => {\r\n        const label = prompt(`Enter diff name`);\r\n        if (!label) return;\r\n        setCmp([...cmps, { CmpName: PercentageDiff, label }])\r\n    }\r\n    return (\r\n        <div>\r\n            <h5>Calculate Diff:</h5>\r\n            <button onClick={addCmp}>Add</button>\r\n            <div style={{ display: \"flex\", width: '90%', flexWrap: \"wrap\" }}>\r\n                {cmps.map(cmp => {\r\n                    const { CmpName, label } = cmp;\r\n                    return <CmpName label={label} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddDiff;","import styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\nmargin:40px;\r\nposition:relative;\r\n`;\r\n\r\nexport {\r\n    Container\r\n}","import './App.css';\nimport Txt from './Txt';\nimport Filters from './Filters';\nimport Tbl from './Tbl';\nimport PercentageDiff from './PercentageDiff';\nimport { Container } from './Styles/Container'\nimport { Provider, useStore } from './store';\n\nfunction App() {\n  const [store] = useStore();\n  return (\n    <Container>\n      <Txt />\n      {store.stocks && store.stocks.length > 0 && <Filters />}\n      {store.stocks && store.stocks.length > 0 && <h5>Filters added: {store.filtersCnt}</h5>}\n      {store.stocks && store.stocks.length > 0 && <Tbl />}\n      <PercentageDiff />\n    </Container>\n  );\n}\n\n\nexport default () => {\n  return (\n    <Provider>\n      <App />\n    </Provider>\n  )\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}