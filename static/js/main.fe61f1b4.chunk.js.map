{"version":3,"sources":["Styles/Txt.js","store/action.js","store/util.js","store/store.js","store/index.js","Txt.js","Filters.js","operators.js","Styles/Table.js","constants.js","Tbl.js","PercentageDiff.js","Styles/Container.js","App.js","reportWebVitals.js","index.js"],"names":["TextArea","styled","textarea","Button","button","Header","div","Avg","action","ADD_TEXT","ADD_STOCKS","ADD_FILTERS","ADD_AVG","ADD_SEARCH","UPD_FILTERS","UPD_AVG","DELETE_STOCK","UPD_HIGH_AVG","UPD_LOW_AVG","UPD_MAX_PER","UPD_STOCKS","findPerDiff","newNum","orgNum","findPercentage","values","reduce","acc","val","key","tmp","diff","removeOddVal","arr","maxPer","highAvg","lowAvg","sort","a","b","len","length","max","Math","ceil","firstChunk","slice","reverse","lastChunk","firstPercentage","lastPercentage","firstPos","findIndex","fp","lastPos","rm","initialState","txt","stocks","filtersList","average","searchParams","filtersCnt","reducer","state","type","data","tmpStocks","JSON","parse","Array","isArray","e","alert","parseStocks","filters","Object","keys","map","label","value","operator","checked","exclude","createFilters","avg","hightAvg","valueAr","forEach","stock","filter","parseFloat","concat","getAvg","cnt","searchObj","addToSearch","updFilters","col","updFilter","updAverage","updType","num","parseNum","stringify","updAvg","updStocks","deleteStock","ScreenContext","createContext","Provider","children","store","useReducer","useStore","useContext","Txt","dispatch","handleAvg","target","name","onChange","placeholder","onClick","CompareDropDown","handleChange","Rows","rowNum","useState","isCompare","setCompare","round","style","display","flexDirection","justifyContent","width","margin","autoComplete","Filters","className","search","table","COLOR","th","ABOVE_NINTY","background","color","ABOVE_EIGHTY","ABOVE_SEVENTY","ABOVE_SIXTY","ABOVE_FIFTY","BELOW_FIFTY","Heading","isAscending","setAscending","cols","sortTable","bind","CheckCmp","isChecked","includes","setChecked","useEffect","Col","Name","colName","params","operators","processResult","matchCnt","percentage","calcPercent","props","Tbl","border","bold","DiffList","precentages","textAlign","PercentageDiff","vals","setVal","setPrecentages","split","v","join","per","AddDiff","cmps","setCmp","prompt","CmpName","flexWrap","cmp","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe61f1b4.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n\r\nconst TextArea = styled.textarea`\r\n    height:100px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    width:10%;\r\n    margin:10px 0 0 0;    \r\n`;\r\n\r\nconst Header = styled.div`\r\n    width:100%;\r\n    display:flex;\r\n    flex-direction:column;\r\n`;\r\n\r\nconst Avg = styled.div`\r\nmargin: 5px 0 0 0;\r\ninput{\r\n    margin:0 5px 0 5px;\r\n}\r\nlabel{\r\n    font-weight:bold;\r\n    font-size:0.9rem;\r\n}\r\n\r\n`;\r\nexport {\r\n    TextArea,\r\n    Button,\r\n    Header,\r\n    Avg\r\n}","const action = {\r\n    ADD_TEXT: 'ADD_TEXT',\r\n    ADD_STOCKS: 'ADD_STOCKS',\r\n    ADD_FILTERS: 'ADD_FILTERS',\r\n    ADD_AVG: 'ADD_AVG',\r\n    ADD_SEARCH: 'ADD_SEARCH',\r\n    UPD_FILTERS: 'UPD_FILTERS',\r\n    UPD_AVG: 'UPD_AVG',\r\n    DELETE_STOCK: 'DELETE_STOCK',\r\n    UPD_HIGH_AVG: 'UPD_HIGH_AVG',\r\n    UPD_LOW_AVG: 'UPD_LOW_AVG',\r\n    UPD_MAX_PER: 'UPD_MAX_PER',\r\n    UPD_STOCKS: 'UPD_STOCKS'\r\n}\r\n\r\nexport default action;","export const parseStocks = (txt) => {\r\n    try {\r\n        let tmpStocks = JSON.parse(txt);\r\n        if (!Array.isArray(tmpStocks)) { tmpStocks = [tmpStocks] }\r\n        return tmpStocks;\r\n    } catch (e) {\r\n        alert(\"Invlaid JSON\")\r\n    }\r\n}\r\n\r\nexport const createFilters = (stocks) => {\r\n    if (stocks?.length) {\r\n        const firstRow = Object.keys(stocks[0].filters);\r\n        const tmpFilters = firstRow.map((key) => {\r\n            return {\r\n                label: key,\r\n                value: '',\r\n                operator: '',\r\n                checked: false,\r\n                exclude: []\r\n            }\r\n        });\r\n        return tmpFilters;\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\nexport const getAvg = (stocks, maxPer = 10, hightAvg = 100, lowAvg = 100) => {\r\n    if (Array.isArray(stocks) && stocks?.length) {\r\n        let avg = {};\r\n        let valueAr = {};\r\n        stocks.forEach(stock => {\r\n            const { filters } = stock;\r\n            Object.keys(filters).forEach(filter => {\r\n                const val = parseFloat(avg[filter]?.val || 0) + parseFloat(filters[filter] || 0);\r\n                const len = filters[filter] != '' ? (avg[filter]?.len || 0) + 1 : avg[filter]?.len;\r\n                if (filters[filter] != '') {\r\n                    valueAr[filter] = (valueAr[filter] || []).concat(parseFloat(filters[filter]));\r\n                }\r\n                avg[filter] = { val, len };\r\n            });\r\n        });\r\n        Object.keys(valueAr).forEach(filter => {\r\n            valueAr[filter].sort((a, b) => a - b);\r\n            const rm = removeOddVal(valueAr[filter], maxPer, hightAvg, lowAvg);\r\n            rm.forEach(val => {\r\n                avg[filter].val -= val\r\n                avg[filter].len--;\r\n            });\r\n            avg[filter].rm = rm;\r\n        });\r\n        return avg;\r\n    }\r\n}\r\n\r\nexport const addToSearch = (filters) => {\r\n    let cnt = 0;\r\n    const searchObj = filters.reduce((acc, val) => {\r\n        if (val.checked) {\r\n            cnt++;\r\n            let tmp = {\r\n                [val.label]: {\r\n                    value: val.value,\r\n                    operator: val.operator,\r\n                }\r\n            };\r\n            return { ...acc, ...tmp };\r\n        }\r\n        return acc;\r\n    }, {});\r\n    return {\r\n        cnt,\r\n        searchObj\r\n    };\r\n}\r\n\r\nexport const updFilter = (filtersList, key, col, value) => {\r\n    const tmp = [...filtersList];\r\n    tmp[key][col] = value;\r\n    return tmp;\r\n}\r\n\r\nexport const updAvg = ({ updType, filter, num, average }) => {\r\n    const parseNum = parseFloat(num) || 0;\r\n    let tmp = JSON.parse(JSON.stringify(average));\r\n    tmp[filter].val = updType === 'sub' ? (tmp[filter].val - (parseNum)) : (parseFloat(tmp[filter].val) + parseNum);\r\n    tmp[filter].len = updType === 'sub' ? (tmp[filter].len - 1) : (parseFloat(tmp[filter].len) + 1);\r\n    return tmp;\r\n}\r\n\r\nexport const deleteStock = (key, stocks) => {\r\n    const newStocks = [...stocks.slice(0, key), ...stocks.slice(key + 1)]\r\n    return newStocks;\r\n};\r\n\r\nexport const findPerDiff = (newNum, orgNum) => {\r\n    return ((newNum - orgNum) / orgNum) * 100;\r\n}\r\n/*export const removeOddVal = (value, highAvg, lowAvg, rm = [], mid = 0) => {\r\n    if (value.length) {\r\n        const midPostion = Math.round(value.length / 2);\r\n        const midEle = mid || value[midPostion];\r\n        const firstEle = value[0];\r\n        const lastEle = value[value.length - 1];\r\n        const lastDiff = findPerDiff(lastEle, midEle);\r\n        const firstDiff = findPerDiff(firstEle, midEle);\r\n        if (lastDiff > highAvg) {\r\n            const newValue = value.pop();\r\n            rm.push(newValue);\r\n            return removeOddVal(value, highAvg, lowAvg, rm, midEle);\r\n        } else if (firstDiff < lowAvg) {\r\n            const newValue = value.shift();\r\n            rm.push(newValue);\r\n            return removeOddVal(value, highAvg, lowAvg, rm, midEle);\r\n        } else {\r\n            return rm;\r\n        }\r\n    }\r\n}*/\r\nconst findPercentage = (values) => {\r\n    return values.reduce((acc, val, key) => {\r\n        let tmp = {\r\n            diff: 0,\r\n            val\r\n        };\r\n        if (key === 0) return [tmp];\r\n        tmp.diff = findPerDiff(val, values[key - 1]);\r\n        return [...acc, tmp];\r\n    }, []);\r\n\r\n\r\n}\r\nexport const removeOddVal = (arr, maxPer = 10, highAvg = 100, lowAvg = 100) => {\r\n    arr.sort((a, b) => a - b)\r\n    const len = arr.length;\r\n    const max = Math.ceil((len / 100) * maxPer);\r\n    const firstChunk = arr.slice(0, max).reverse();\r\n    const lastChunk = arr.slice(len - max);\r\n    const firstPercentage = findPercentage(firstChunk);\r\n    const lastPercentage = findPercentage(lastChunk);\r\n    const firstPos = firstPercentage.findIndex(fp => fp.diff > lowAvg);\r\n    const lastPos = lastPercentage.findIndex(fp => fp.diff > highAvg);\r\n\r\n    const rm = [\r\n        ...(firstPos > -1 ? firstChunk.slice(firstPos) : []),\r\n        ...(lastPos > -1 ? lastChunk.slice(lastPos) : [])\r\n    ]\r\n    return rm;\r\n}\r\n\r\n/*\r\nconst ar = [-493.44, -133.71, -73.03, -34.41, -11.89, -9.83, -8.48, -4.61,\r\n            -2.71, -1.33, 0.01, 0.1, 1.61, 1.88, 2.36, 2.38, 2.51, 2.58, 3.41, 5.94,\r\n            6.48, 7.58, 9.68, 10.03, 10.51, 12.99, 13.26, 13.67, 15.16, 19.12, 21.65,\r\n            25.86]\r\nFind length of array\r\n    - get per from store\r\n    - get first 10 per\r\n        - calc percentage interval\r\n        - if it exceeds to -100 then skip remaining\r\n        - add skip num to rm\r\n    - get last 10 per\r\n        - calc percentage interval\r\n        - if it exceeds to 100 then skip remaining\r\n        - add skip num to rm\r\n\r\n*/","import {\r\n    parseStocks,\r\n    createFilters,\r\n    getAvg,\r\n    addToSearch,\r\n    updFilter,\r\n    updAvg,\r\n    deleteStock\r\n} from './util';\r\nexport const initialState = {\r\n    txt: '',\r\n    highAvg: 100,\r\n    lowAvg: 100,\r\n    maxPer: 10,\r\n    stocks: [],\r\n    filtersList: [],\r\n    average: {},\r\n    searchParams: {},\r\n    filtersCnt: 0\r\n};\r\n\r\n\r\nexport const reducer = (state, action) => {\r\n    const { type, data } = action;\r\n    switch (type) {\r\n        case \"ADD_TEXT\":\r\n            return { ...state, txt: data.txt };\r\n        case \"ADD_STOCKS\":\r\n            const stocks = parseStocks(state.txt);\r\n            return {\r\n                ...state, stocks: stocks, filtersList: [], filtersList: [],\r\n                average: {},\r\n                searchParams: {},\r\n                filtersCnt: 0\r\n            };\r\n        case \"ADD_FILTERS\":\r\n            const filters = createFilters(state.stocks);\r\n            return { ...state, filtersList: filters };\r\n        case \"ADD_AVG\":\r\n            const avg = getAvg(state.stocks, state.maxPer, state.highAvg, state.lowAvg);\r\n            return { ...state, average: avg };\r\n        case \"ADD_SEARCH\":\r\n            const { cnt, searchObj } = addToSearch(state.filtersList);\r\n            return { ...state, searchParams: searchObj, filtersCnt: cnt };\r\n        case \"UPD_FILTERS\":\r\n            const updFilters = updFilter(state.filtersList, data.key, data.col, data.value);\r\n            return { ...state, filtersList: updFilters };\r\n        case \"UPD_AVG\":\r\n            const updAverage = updAvg({ ...data, average: state.average });\r\n            return { ...state, average: updAverage };\r\n        case \"DELETE_STOCK\":\r\n            const updStocks = deleteStock(data.key, state.stocks);\r\n            return { ...state, stocks: updStocks };\r\n        case \"UPD_HIGH_AVG\":\r\n            return { ...state, highAvg: data.value };\r\n        case \"UPD_LOW_AVG\":\r\n            return { ...state, lowAvg: data.value };\r\n        case \"UPD_MAX_PER\":\r\n            return { ...state, maxPer: data.value };\r\n        case \"UPD_STOCKS\":\r\n            return { ...state, stocks: data.stocks };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useReducer, useContext, createContext } from 'react';\r\nimport { reducer, initialState } from './store';\r\nexport let ScreenContext = createContext({});\r\nexport const Provider = ({ children }) => {\r\n    let store = useReducer(reducer, initialState);\r\n    return (\r\n        <ScreenContext.Provider value={store}>\r\n            {children}\r\n        </ScreenContext.Provider>\r\n    )\r\n};\r\n\r\n\r\nexport const useStore = () => {\r\n    let store = useContext(ScreenContext);\r\n    return store;\r\n}","import { TextArea, Button, Header, Avg } from './Styles/Txt'\r\nimport action from './store/action';\r\nimport { useStore } from './store';\r\nconst Txt = () => {\r\n    const [store, dispatch] = useStore();\r\n    const { txt, } = store;\r\n    const handleChange = (e) => {\r\n        const txt = e.target.value;\r\n        const type = action.ADD_TEXT;\r\n        dispatch({ data: { txt }, type });\r\n    }\r\n    const handleAvg = (e) => {\r\n        const value = e.target.value;\r\n        const name = e.target.name;\r\n        //const type = name === 'highAvg' ? action.UPD_HIGH_AVG : action.UPD_LOW_AVG;\r\n        let type;\r\n        if (name === 'highAvg') {\r\n            type = action.UPD_HIGH_AVG\r\n        } else if (name === 'maxPer') {\r\n            type = action.UPD_MAX_PER;\r\n        } else {\r\n            type = action.UPD_LOW_AVG;\r\n        }\r\n        dispatch({ data: { value }, type });\r\n    }\r\n    const handleSubmit = () => {\r\n        dispatch({ type: action.ADD_STOCKS });\r\n        dispatch({ type: action.ADD_FILTERS });\r\n        dispatch({ type: action.ADD_AVG });\r\n    }\r\n    return (\r\n        <>\r\n            <Header>\r\n                <TextArea value={txt} onChange={handleChange} placeholder='Enter your JSON' />\r\n                <Avg>\r\n                    <label>HighAvg</label><input type='text' name='highAvg' value={store.highAvg} onChange={handleAvg} />\r\n                    <label>LowAvg</label><input type='text' name='lowAvg' value={store.lowAvg} onChange={handleAvg} />\r\n                    <label>Diff</label><input type='text' name='maxPer' value={store.maxPer} onChange={handleAvg} />\r\n                </Avg>\r\n                <Button onClick={handleSubmit} >Add</Button>\r\n            </Header>\r\n        </>\r\n    )\r\n};\r\nexport default Txt;","import { useState } from 'react';\r\nimport { Button } from './Styles/Txt';\r\nimport { useStore } from './store'\r\nimport action from './store/action';\r\n\r\nconst CompareDropDown = ({ handleChange }) => {\r\n    const [store] = useStore();\r\n    return (\r\n        <>\r\n            <select name='value' onChange={handleChange}>\r\n                <option value=''>Select</option>\r\n                {\r\n                    store.filtersList.map(filter => <option value={filter.label}>{filter.label}</option>)\r\n                }\r\n            </select>\r\n        </>\r\n    )\r\n}\r\nconst Rows = ({ rowNum, label, value, checked }) => {\r\n    const [store, dispatch] = useStore();\r\n    const [isCompare, setCompare] = useState(false);\r\n    const handleChange = (e) => {\r\n        let value = e.target.value;\r\n        const name = e.target.name;\r\n\r\n        if (name === \"checked\") {\r\n            value = !checked;\r\n        }\r\n        if (name === 'operator') {\r\n            if (value === 'GT' || value === 'LT') {\r\n                setCompare(true);\r\n            } else {\r\n                setCompare(false);\r\n            }\r\n            if (value === 'GTA' || value === 'LTA') {\r\n                dispatch({ type: action.UPD_FILTERS, data: { key: rowNum, col: 'value', value: Math.round(store.average[label].val / store.average[label].len) } })\r\n            } else {\r\n                dispatch({ type: action.UPD_FILTERS, data: { key: rowNum, col: 'value', value: '' } })\r\n            }\r\n        }\r\n        dispatch({ type: action.UPD_FILTERS, data: { key: rowNum, col: name, value: value } })\r\n        if ((name === 'operator' || name === 'value') && value) {\r\n            dispatch({ type: action.UPD_FILTERS, data: { key: rowNum, col: 'checked', value: true } })\r\n        }\r\n    }\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", width: \"50%\", margin: \"10px\" }}>\r\n            <div>\r\n                <input type=\"checkbox\" onChange={handleChange} name='checked' checked={checked} />\r\n            </div>\r\n            <div style={{ width: '33%' }}>\r\n                <label>{label}</label>&nbsp;\r\n            </div>\r\n            <div style={{ width: '33%' }}>\r\n                <select name='operator' onChange={handleChange}>\r\n                    <option value=''>Select</option>\r\n                    <option value='>'>Greater</option>\r\n                    <option value='>='>Greater & Equal</option>\r\n                    <option value='<'>Less</option>\r\n                    <option value='<='>Less & equal</option>\r\n                    <option value='!='>Not equal</option>\r\n                    <option value='=='>Equal</option>\r\n                    <option value='GT'>Greater than</option>\r\n                    <option value='LT'>Less than</option>\r\n                    <option value='GTA'>Greater than AVG</option>\r\n                    <option value='LTA'>Less than AVG</option>\r\n                </select>\r\n            </div>\r\n            <div style={{ width: '33%' }}>\r\n                {!isCompare ? <input\r\n                    type=\"text\"\r\n                    placeholder='Value'\r\n                    name='value'\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    autoComplete='off'\r\n                /> : <CompareDropDown handleChange={handleChange} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst Filters = () => {\r\n    const [store, dispatch] = useStore();\r\n    const addToSearch = () => {\r\n        dispatch({ type: action.ADD_SEARCH });\r\n    }\r\n    return (\r\n        <>\r\n            <h5>Filters:</h5>\r\n            <div className='filters'>\r\n\r\n                {\r\n                    store.filtersList.map((filter, key) => <Rows label={filter.label} operator={filter.operator} value={filter.value} checked={filter.checked} key={key} rowNum={key}\r\n                    />)\r\n                }\r\n                <br />\r\n            </div>\r\n            <Button onClick={addToSearch} >Filter</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filters;","const search = {\r\n    '>': (a, b) => (parseFloat(a) > parseFloat(b)),\r\n    '>=': (a, b) => (parseFloat(a) >= parseFloat(b)),\r\n    '<': (a, b) => (parseFloat(a) < parseFloat(b)),\r\n    '<=': (a, b) => (parseFloat(a) <= parseFloat(b)),\r\n    '!=': (a, b) => (parseFloat(a) != parseFloat(b)),\r\n    '==': (a, b) => (parseFloat(a) == parseFloat(b)),\r\n    'GT': (a, b) => (parseFloat(a) >= parseFloat(b)),\r\n    'LT': (a, b) => (parseFloat(a) <= parseFloat(b)),\r\n    'GTA': (a, b) => (parseFloat(a) >= parseFloat(b)),\r\n    'LTA': (a, b) => (parseFloat(a) <= parseFloat(b)),\r\n}\r\n\r\nexport default search","import styled from 'styled-components';\r\n\r\n\r\nconst Table = styled.table`\r\nborder:1px solid;\r\n`;\r\n\r\nconst Avg = styled.div`\r\n    background: skyblue;\r\n    border-radius:50%;\r\n    font-size:9px;\r\n`\r\nconst Th = styled.th``;\r\nconst TD = styled.th``;\r\n\r\nexport {\r\n    Table,\r\n    Avg\r\n\r\n}","export const COLOR = {\r\n    RESULT: {\r\n        ABOVE_NINTY: { background: 'green', color: 'rgb(255,255,255)' },\r\n        ABOVE_EIGHTY: { background: 'lightgreen', color: 'rgb(255,255,255)' },\r\n        ABOVE_SEVENTY: { background: 'skyblue', color: 'rgb(255,255,255)' },\r\n        ABOVE_SIXTY: { background: 'orange', color: 'rgb(255,255,255)' },\r\n        ABOVE_FIFTY: { background: 'yellow', color: 'rgb(255,255,255)' },\r\n        BELOW_FIFTY: { background: 'red', color: 'rgb(255,255,255)' }\r\n    }\r\n}","import { useStore } from './store';\r\nimport action from './store/action';\r\nimport operators from './operators';\r\nimport { Avg } from './Styles/Table';\r\nimport { COLOR } from './constants'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nconst Heading = ({ stocks, average }) => {\r\n    const [, dispatch] = useStore();\r\n    const [isAscending, setAscending] = useState(false);\r\n    const { filters } = stocks[0];\r\n    const cols = Object.keys(filters);\r\n    const sortTable = (col) => {\r\n        let tmpStocks = JSON.parse(JSON.stringify(stocks));\r\n        tmpStocks.sort((a, b) => {\r\n            if (!isAscending) {\r\n                return a.filters[col] - b.filters[col]\r\n            } else {\r\n                return b.filters[col] - a.filters[col]\r\n            }\r\n        });\r\n        setAscending(!isAscending);\r\n        dispatch({ type: action.UPD_STOCKS, data: { stocks: tmpStocks } });\r\n    }\r\n    return (\r\n        <>\r\n            <th>StockName</th>\r\n            {cols.map(col => <th onClick={sortTable.bind(null, col)} >{col}<Avg>{(Math.round(average[col].val / average[col].len))}</Avg></th>)}\r\n            <th>Matches</th>\r\n            <th>Action</th>\r\n        </>\r\n    )\r\n}\r\n\r\nconst CheckCmp = ({ name, value, onChange }) => {\r\n    const [store] = useStore();\r\n    const { rm } = store.average[name];\r\n    const isChecked = (value === '' || rm.includes(parseFloat(value))) ? true : false\r\n    const [checked, setChecked] = useState(isChecked);\r\n    useEffect(() => {\r\n        const isChecked = (value === '' || rm.includes(parseFloat(value))) ? true : false;\r\n        setChecked(isChecked);\r\n    }, [...rm]);\r\n\r\n    const handleChange = (e) => {\r\n        setChecked(!checked);\r\n        onChange(e);\r\n    }\r\n    return (\r\n        <>\r\n            <input type=\"checkbox\" name={name} value={value} onChange={handleChange} checked={checked} />\r\n        </>\r\n    )\r\n}\r\nconst Col = ({ stock, rowNum }) => {\r\n    const [store, dispatch] = useStore();\r\n    const { Name, filters } = stock;\r\n    const cols = Object.keys(filters);\r\n    const { filtersCnt } = store;\r\n    const calcPercent = (matchCnt) => {\r\n        if (filtersCnt <= 0) return;\r\n        const percentage = ((matchCnt / filtersCnt) * 100);\r\n        if (percentage >= 90) {\r\n            return COLOR.RESULT.ABOVE_NINTY;\r\n        } else if (percentage >= 80) {\r\n            return COLOR.RESULT.ABOVE_EIGHTY;\r\n        } else if (percentage >= 70) {\r\n            return COLOR.RESULT.ABOVE_SEVENTY;\r\n        } else if (percentage >= 60) {\r\n            return COLOR.RESULT.ABOVE_SIXTY;\r\n        } else if (percentage >= 50) {\r\n            return COLOR.RESULT.ABOVE_FIFTY;\r\n        } else {\r\n            return COLOR.RESULT.BELOW_FIFTY;\r\n        }\r\n    }\r\n    let cnt = 0;\r\n    const processResult = (colName) => {\r\n        const params = store.searchParams[colName];\r\n\r\n        if (params && operators[params.operator]) {\r\n            const value = (params.operator === 'LT' || params.operator === 'GT') ? (filters[params.value] || 0) : params.value;\r\n            const className = operators[params.operator](filters[colName], value) ? 'greenCol' : 'redCol';\r\n            if (className === 'greenCol') {\r\n                cnt++;\r\n            }\r\n            return className;\r\n        }\r\n        return;\r\n    }\r\n    const handleChange = function (e) {\r\n        const { checked, value, name } = e.target;\r\n        const updType = checked ? 'sub' : 'add';\r\n        dispatch({ type: action.UPD_AVG, data: { updType, filter: name, num: value } });\r\n    }\r\n    const handleDelete = (rowNum) => {\r\n        dispatch({ type: action.DELETE_STOCK, data: { key: rowNum } });\r\n        dispatch({ type: action.ADD_AVG });\r\n    }\r\n    return (\r\n        <>\r\n            <td>{Name}</td>\r\n            {\r\n                cols.map((col, key) => {\r\n                    const className = processResult(col, key) || '';\r\n                    return (<td className={className} >\r\n\r\n                        <CheckCmp name={col} value={filters[col]} onChange={handleChange} />\r\n                        {filters[col]}\r\n                    </td>);\r\n                })\r\n            }\r\n            <td style={calcPercent(cnt)}>{cnt}</td>\r\n            <td><button onClick={handleDelete.bind(null, rowNum)}>Delete</button></td>\r\n        </>\r\n    )\r\n}\r\nconst Rows = (props) => {\r\n    return (\r\n        <>\r\n            <tr>\r\n                <Col {...props} />\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Tbl = () => {\r\n    const [store] = useStore();\r\n    return (\r\n        <>\r\n            <table border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        <Heading average={store.average} stocks={store.stocks} />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {store.stocks.map((stock, rowNum) => <Rows stock={stock} rowNum={rowNum} />)}\r\n                </tbody>\r\n                <thead>\r\n                    <tr bold=\"1\">\r\n                        <Heading average={store.average} stocks={store.stocks} />\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\nexport default Tbl;","import { useState } from \"react\";\r\nimport { findPerDiff } from './store/util';\r\n\r\nconst DiffList = ({ precentages }) => {\r\n    return (\r\n        <table style={{ width: \"10rem\", textAlign: \"left\" }}>\r\n\r\n            {\r\n                precentages.map((percentage) => {\r\n                    return (\r\n                        <tr>\r\n                            <td>{percentage.val}</td>\r\n                            <td>{Math.round(percentage.diff)}%</td>\r\n                        </tr>\r\n                    );\r\n                })\r\n            }\r\n\r\n\r\n        </table>\r\n    )\r\n}\r\n\r\nconst PercentageDiff = ({ label }) => {\r\n    const [vals, setVal] = useState('');\r\n    const [precentages, setPrecentages] = useState([]);\r\n    const values = vals.split(/\\s|%/).filter(v => v).map(v => v.split(',').join(''));\r\n    const onCalc = () => {\r\n        const per = values.reduce((acc, val, key) => {\r\n            let tmp = {\r\n                diff: 0,\r\n                val\r\n            };\r\n            if (key === 0) return [tmp];\r\n            tmp.diff = findPerDiff(val, values[key - 1]);\r\n            return [...acc, tmp];\r\n        }, []);\r\n\r\n        setPrecentages(per);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{ margin: \"0 20px 0 0\" }}>\r\n                <h6>{label}</h6>\r\n                <input type=\"text\" onChange={e => setVal(e.target.value)} />\r\n                <button onClick={onCalc} >Calc</button>\r\n                <DiffList precentages={precentages} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst AddDiff = () => {\r\n    const [cmps, setCmp] = useState([])\r\n    const addCmp = () => {\r\n        const label = prompt(`Enter diff name`);\r\n        if (!label) return;\r\n        setCmp([...cmps, { CmpName: PercentageDiff, label }])\r\n    }\r\n    return (\r\n        <div>\r\n            <h5>Calculate Diff:</h5>\r\n            <button onClick={addCmp}>Add</button>\r\n            <div style={{ display: \"flex\", width: '90%', flexWrap: \"wrap\" }}>\r\n                {cmps.map(cmp => {\r\n                    const { CmpName, label } = cmp;\r\n                    return <CmpName label={label} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddDiff;","import styled from 'styled-components';\r\n\r\n\r\nconst Container = styled.div`\r\nmargin:40px;\r\nposition:relative;\r\n`;\r\n\r\nexport {\r\n    Container\r\n}","import './App.css';\r\nimport Txt from './Txt';\r\nimport Filters from './Filters';\r\nimport Tbl from './Tbl';\r\nimport PercentageDiff from './PercentageDiff';\r\nimport { Container } from './Styles/Container'\r\nimport { Provider, useStore } from './store';\r\n\r\nfunction App() {\r\n  const [store] = useStore();\r\n  return (\r\n    <Container>\r\n      <Txt />\r\n      {store.stocks && store.stocks.length > 0 && <Filters />}\r\n      {store.stocks && store.stocks.length > 0 && <h5>Filters added: {store.filtersCnt}</h5>}\r\n      {store.stocks && store.stocks.length > 0 && <Tbl />}\r\n      <PercentageDiff />\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <Provider>\r\n      <App />\r\n    </Provider>\r\n  )\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}